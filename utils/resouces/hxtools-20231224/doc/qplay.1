.TH qplay 1 "2008-02-06" "hxtools" "hxtools"
.SH Name
qplay \(em convert QBASIC play strings to PCM
.SH Syntax
\fBqplay\fP [\fB\-i\fP \fIpart\fP] [\fB\-q\fP \fIpart\fP] [\fB\-r\fP
\fIrate\fP] [\fIfile\fP...] \fB| aplay \-f dat \-c 1\fP
.SH Description
qplay will convert QBASIC-style strings for its "PLAY" command to linear
16-bit raw PCM. Normally, you will be wanting to pipe it into a raw PCM player
like \fBaplay\fP(1) to actually output it to a sound device. Be sure to lower
the volume beforehand to avoid nasty surprises that come with square waves. By
default, bsvplay will mix 1:1 square:sine waves to give a medium tone hardness.
.SH Options
.TP
\fB\-q\fP \fIpart\fP
Part to mix square waves in (default: 1.0)
.TP
\fB\-i\fP \fIpart\fP
Part to mix sine waves in (default: 1.0). If \fB\-q2 \-i1\fP
is specified for example,
the final PCM output will consist of 2/3*squarepcm + 1/3*sinpcm.
.TP
\fB\-r\fP \fIrate\fP
PCM sample rate (default: 48000 Hz)
.SH File format / PLAY statements
The file format qplay expects is of course not BASIC, but raw PLAY command
strings. Lines that start with a leading hash mark ('\fB#\fP') are ignored.
.PP
Commands are case insensitive and whitespace is mostly ignored. The original
QBasic manpage is slightly incorrect; below is what qplay supports.
.SS Octave commands
.TP
\fBo\fP\fIn\fP
Sets the current octave. There are seven octaves, \fIn\fP = 0-6.
.TP
\fB>\fP
Increases octave by 1. The upper octave limit in QBasic was 6; qplay has a
limit of 9.
.TP
\fB<\fP
Decreases octave by 1. Octave cannot drop below 0.
.SS Tone commands
.TP
\fBA\fP - \fBG\fP
Plays a note in the range A-G. The number sign (\fB#\fP) or the plus sign
(\fB+\fP) after a note specifies sharp; a minus sign (\fB\-\fP) specifies flat.
\fBN\fP \fIn\fP
Plays note \fIn\fP. The range for \fIn\fP is 0-84 (in the seven possible
octaves, there are 84 notes); \fIn\fP = 0 means a rest.
.SS Suffixes
.TP
\fB#\fP or \fB+\fP
Follows a specified note and turns it into a sharp.
.TP
\fB\-\fP
Follows a specified note and turns it into a flat.
.SS Duration commands
.TP
\fBL\fP \fIn\fP
Sets the length of each note. L4 is a quarter note, L1 is a whole note, etc.
The range for \fIn\fP is 1-64. The length may also follow the note when a
change of length only is desired for a particualr note. For example, A16 can be
equivalent to L16A.
.TP
\fBMN\fP
Sets "music normal" so that each note will play 7/8 of the time determined by
the length (L).
.TP
\fBML\fP
Sets "music legato" so that each note will play the full period set by lengt
(L).
.TP
\fBMS\fP
Sets "music staccato" so that each note will play 3/4 of the time determined by
the length (L).
.SS Tempo commands
.TP
\fBP\fP \fIn\fP
Specifies a pause, ranging from 1-64. This option corresponds to the length of
each note, set with L n.
\fBT\fP \fIn\fP
Sets the "tempo", or the number of L4 quarter notes in one minute. The range
for n is 32-255. The default for n is 120.
.TP
\fB .\fP
A period after a note causes the note to play 3/2 times the length determined
by L (length) times T (tempo).  The period has the same meaning as in a musical
score. Multiple periods can appear after a note. Each period adds a length
equal to one-half the length of the previous period. For example, the command
\fBA.\fP plays 1 + 1/2, or 3/2 times the length, and \fBA..\fP plays 1 + 1/2 +
1/4, or 7/4 times the length.  Periods can appear after a pause (P). In this
case, the pause length is scaled in the same way notes are scaled.
.SS Variables
.TP
\fBX(\fP\fIvar\fP\fB)\fP
Play the string in the variable \fIvar\fP.
.PP
Variable definitions in qplay syntax are for example:
.PP
.nf
	$var = "CDEF";
.fi
.PP
and they must stand on a single line.
.SH Examples
.PP
.nf
	echo "L16O2CDEFGAB>CDEFGAB>L4C" | qplay - | aplay -fdat -c1
.fi
.PP
will play a tone ladder.
.SH See also
\fBaplay\fP(1), \fBbsvplay\fP(1), \fBhxtools\fP(7)
