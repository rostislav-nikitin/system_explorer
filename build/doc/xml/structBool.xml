<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structBool" kind="struct" language="C++" prot="public">
    <compoundname>Bool</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structBool_1a16be863c269f988cdcbe59f9d846a141" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Bool::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>Bool::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" line="63" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structBool_1a03dfd4851b13abb29414887fcada7fca" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bool::Bool</definition>
        <argsstring>(int val)</argsstring>
        <name>Bool</name>
        <qualifiedname>Bool::Bool</qualifiedname>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" line="55" column="12" bodyfile="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structBool_1a7baecbc58992eb06157fbbbaa560be0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bool::operator&gt;</definition>
        <argsstring>(int n) const</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>Bool::operator&gt;</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" line="57" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structBool_1a6f4ecdec19082e896cffce66e6b6e7cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structBool" kindref="compound">Bool</ref></type>
        <definition>Bool Bool::operator+</definition>
        <argsstring>(const Bool &amp;rhs) const</argsstring>
        <name>operator+</name>
        <qualifiedname>Bool::operator+</qualifiedname>
        <param>
          <type>const <ref refid="structBool" kindref="compound">Bool</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" line="59" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structBool_1afe799a4977c5ebe4c215d5d4ebd77adb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bool::operator==</definition>
        <argsstring>(const Bool &amp;rhs) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Bool::operator==</qualifiedname>
        <param>
          <type>const <ref refid="structBool" kindref="compound">Bool</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" line="61" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" bodystart="61" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" line="54" column="1" bodyfile="build/_deps/googletest-src/googletest/test/gtest_pred_impl_unittest.cc" bodystart="54" bodyend="64"/>
    <listofallmembers>
      <member refid="structBool_1a03dfd4851b13abb29414887fcada7fca" prot="public" virt="non-virtual"><scope>Bool</scope><name>Bool</name></member>
      <member refid="structBool_1a6f4ecdec19082e896cffce66e6b6e7cc" prot="public" virt="non-virtual"><scope>Bool</scope><name>operator+</name></member>
      <member refid="structBool_1afe799a4977c5ebe4c215d5d4ebd77adb" prot="public" virt="non-virtual"><scope>Bool</scope><name>operator==</name></member>
      <member refid="structBool_1a7baecbc58992eb06157fbbbaa560be0b" prot="public" virt="non-virtual"><scope>Bool</scope><name>operator&gt;</name></member>
      <member refid="structBool_1a16be863c269f988cdcbe59f9d846a141" prot="public" virt="non-virtual"><scope>Bool</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
