<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespacegmock__output__test" kind="namespace" language="Python">
    <compoundname>gmock_output_test</compoundname>
    <innerclass refid="classgmock__output__test_1_1GMockOutputTest" prot="public">gmock_output_test::GMockOutputTest</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacegmock__output__test_1a9e134c4683d56599acb0c0dba23cb7be" prot="public" static="no" mutable="no">
        <type>str</type>
        <definition>str gmock_output_test.GENGOLDEN_FLAG</definition>
        <argsstring></argsstring>
        <name>GENGOLDEN_FLAG</name>
        <qualifiedname>gmock_output_test.GENGOLDEN_FLAG</qualifiedname>
        <initializer>=  &apos;--gengolden&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="50" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__output__test_1aa93d4a624ef9518e9ba394fb5d5982a4" prot="public" static="no" mutable="no">
        <type>gmock_test_utils</type>
        <definition>gmock_test_utils gmock_output_test.PROGRAM_PATH</definition>
        <argsstring></argsstring>
        <name>PROGRAM_PATH</name>
        <qualifiedname>gmock_output_test.PROGRAM_PATH</qualifiedname>
        <initializer>=  <ref refid="namespacegmock__test__utils_1aadd2927024e24f0c53f7ba283402cdb1" kindref="member">gmock_test_utils.GetTestExecutablePath</ref>(&apos;gmock_output_test_&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="52" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__output__test_1a33f8ca97d99711e23517962ca4c729af" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list gmock_output_test.COMMAND</definition>
        <argsstring></argsstring>
        <name>COMMAND</name>
        <qualifiedname>gmock_output_test.COMMAND</qualifiedname>
        <initializer>=  [PROGRAM_PATH, &apos;--gtest_stack_trace_depth=0&apos;, &apos;--gtest_print_time=0&apos;]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="53" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__output__test_1aa31e25f8ef83e9d1e44929139a08e580" prot="public" static="no" mutable="no">
        <type>str</type>
        <definition>str gmock_output_test.GOLDEN_NAME</definition>
        <argsstring></argsstring>
        <name>GOLDEN_NAME</name>
        <qualifiedname>gmock_output_test.GOLDEN_NAME</qualifiedname>
        <initializer>=  &apos;gmock_output_test_golden.txt&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="54" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__output__test_1a9e0859e5a07c8da1d4204f3497ca97d8" prot="public" static="no" mutable="no">
        <type>os</type>
        <definition>os gmock_output_test.GOLDEN_PATH</definition>
        <argsstring></argsstring>
        <name>GOLDEN_PATH</name>
        <qualifiedname>gmock_output_test.GOLDEN_PATH</qualifiedname>
        <initializer>=  os.path.join(<ref refid="namespacegmock__test__utils_1ab7217591e655e80392c9db6b99d04765" kindref="member">gmock_test_utils.GetSourceDir</ref>(), GOLDEN_NAME)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="55" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__output__test_1a4277f8598ba3835393fe82e82d09375d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>gmock_output_test.output</definition>
        <argsstring></argsstring>
        <name>output</name>
        <qualifiedname>gmock_output_test.output</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="182" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__output__test_1acd6befb6031f17f78a4425c90b1f5b19" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>gmock_output_test._</definition>
        <argsstring></argsstring>
        <name>_</name>
        <qualifiedname>gmock_output_test._</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="182" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__output__test_1a0b68a261d4d274305ba2a87ee2e9ac20" prot="public" static="no" mutable="no">
        <type>open</type>
        <definition>open gmock_output_test.golden_file</definition>
        <argsstring></argsstring>
        <name>golden_file</name>
        <qualifiedname>gmock_output_test.golden_file</qualifiedname>
        <initializer>=  open(GOLDEN_PATH, &apos;wb&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="183" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmock__output__test_1a9751fcb99c1c7b494d4dcdee5d2787f7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>gmock_output_test.else</definition>
        <argsstring></argsstring>
        <name>else</name>
        <qualifiedname>gmock_output_test.else</qualifiedname>
        <initializer>:</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="189" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegmock__output__test_1a5c9ae3611cc4fac1e1340a3345865cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gmock_output_test.ToUnixLineEnding</definition>
        <argsstring>(s)</argsstring>
        <name>ToUnixLineEnding</name>
        <qualifiedname>gmock_output_test.ToUnixLineEnding</qualifiedname>
        <param>
          <type>s</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Changes all Windows/Mac line endings in s to UNIX line endings.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="58" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmock__output__test_1a2ebfc0abfb0ed307021ecaa9da465c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gmock_output_test.RemoveReportHeaderAndFooter</definition>
        <argsstring>(output)</argsstring>
        <name>RemoveReportHeaderAndFooter</name>
        <qualifiedname>gmock_output_test.RemoveReportHeaderAndFooter</qualifiedname>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Removes Google Test result report&apos;s header and footer from the output.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="64" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="64" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmock__output__test_1aa3c93f8085ff0886bf0d160d71af2452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gmock_output_test.RemoveLocations</definition>
        <argsstring>(output)</argsstring>
        <name>RemoveLocations</name>
        <qualifiedname>gmock_output_test.RemoveLocations</qualifiedname>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Removes all file location info from a Google Test program&apos;s output.

Args:
     output:  the output of a Google Test program.

Returns:
     output with all file location info (in the form of
     &apos;DIRECTORY/FILE_NAME:LINE_NUMBER: &apos;or
     &apos;DIRECTORY\\FILE_NAME(LINE_NUMBER): &apos;) replaced by
     &apos;FILE:#: &apos;.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="75" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="75" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmock__output__test_1af3c1f95f19b9f048843a2d562d459b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gmock_output_test.NormalizeErrorMarker</definition>
        <argsstring>(output)</argsstring>
        <name>NormalizeErrorMarker</name>
        <qualifiedname>gmock_output_test.NormalizeErrorMarker</qualifiedname>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Normalizes the error marker, which is different on Windows vs on Linux.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="91" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmock__output__test_1a58b4fdb82b40d01d32b09d4c14ba11a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gmock_output_test.RemoveMemoryAddresses</definition>
        <argsstring>(output)</argsstring>
        <name>RemoveMemoryAddresses</name>
        <qualifiedname>gmock_output_test.RemoveMemoryAddresses</qualifiedname>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Removes memory addresses from the test output.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="97" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmock__output__test_1ac0628c5630d869dae45601df9d909638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gmock_output_test.RemoveTestNamesOfLeakedMocks</definition>
        <argsstring>(output)</argsstring>
        <name>RemoveTestNamesOfLeakedMocks</name>
        <qualifiedname>gmock_output_test.RemoveTestNamesOfLeakedMocks</qualifiedname>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Removes the test names of leaked mock objects from the test output.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="103" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmock__output__test_1a60299c4f0cb666d08f101ddaa7aabed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gmock_output_test.GetLeakyTests</definition>
        <argsstring>(output)</argsstring>
        <name>GetLeakyTests</name>
        <qualifiedname>gmock_output_test.GetLeakyTests</qualifiedname>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns a list of test names that leak mock objects.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="109" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="109" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmock__output__test_1a590ba3b918e5599eeabc2cbf597e2ce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gmock_output_test.GetNormalizedOutputAndLeakyTests</definition>
        <argsstring>(output)</argsstring>
        <name>GetNormalizedOutputAndLeakyTests</name>
        <qualifiedname>gmock_output_test.GetNormalizedOutputAndLeakyTests</qualifiedname>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Normalizes the output of gmock_output_test_.

Args:
  output: The test output.

Returns:
  A tuple (the normalized test output, the list of test names that have
  leaked mocks).
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="118" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="118" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmock__output__test_1a001498a3e9bf552ee429e434eb00cb08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gmock_output_test.GetShellCommandOutput</definition>
        <argsstring>(cmd)</argsstring>
        <name>GetShellCommandOutput</name>
        <qualifiedname>gmock_output_test.GetShellCommandOutput</qualifiedname>
        <param>
          <type>cmd</type>
          <defname>cmd</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Runs a command in a sub-process, and returns its STDOUT in a string.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="137" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmock__output__test_1a1796bc395fbfb8873992e3f84378e4bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def gmock_output_test.GetNormalizedCommandOutputAndLeakyTests</definition>
        <argsstring>(cmd)</argsstring>
        <name>GetNormalizedCommandOutputAndLeakyTests</name>
        <qualifiedname>gmock_output_test.GetNormalizedCommandOutputAndLeakyTests</qualifiedname>
        <param>
          <type>cmd</type>
          <defname>cmd</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Runs a command and returns its normalized output and a list of leaky tests.

Args:
  cmd:  the shell command.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="143" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" bodystart="143" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Tests the text output of Google C++ Mocking Framework.

To update the golden file:
gmock_output_test.py --build_dir=BUILD/DIR --gengolden
where BUILD/DIR contains the built gmock_output_test_ file.
gmock_output_test.py --gengolden
gmock_output_test.py</verbatim> </para>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py" line="1" column="1"/>
  </compounddef>
</doxygen>
