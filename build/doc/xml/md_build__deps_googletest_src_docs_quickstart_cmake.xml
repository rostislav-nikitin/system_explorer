<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="md_build__deps_googletest_src_docs_quickstart_cmake" kind="page">
    <compoundname>md_build__deps_googletest_src_docs_quickstart_cmake</compoundname>
    <title>Quickstart: Building with CMake</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This tutorial aims to get you up and running with GoogleTest using CMake. If you&apos;re using GoogleTest for the first time or need a refresher, we recommend this tutorial as a starting point. If your project uses Bazel, see the <ref refid="md_build__deps_googletest_src_docs_quickstart_bazel" kindref="compound">Quickstart for Bazel</ref> instead.</para>
<sect1 id="md_build__deps_googletest_src_docs_quickstart_cmake_1autotoc_md236">
<title>Prerequisites</title>
<para>To complete this tutorial, you&apos;ll need:</para>
<para><itemizedlist>
<listitem><para>A compatible operating system (e.g. Linux, macOS, Windows).</para>
</listitem><listitem><para>A compatible C++ compiler that supports at least C++14.</para>
</listitem><listitem><para><ulink url="https://cmake.org/">CMake</ulink> and a compatible build tool for building the project.<itemizedlist>
<listitem><para>Compatible build tools include <ulink url="https://www.gnu.org/software/make/">Make</ulink>, <ulink url="https://ninja-build.org/">Ninja</ulink>, and others - see <ulink url="https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html">CMake Generators</ulink> for more information.</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para>See <ref refid="md_build__deps_googletest_src_docs_platforms" kindref="compound">Supported Platforms</ref> for more information about platforms compatible with GoogleTest.</para>
<para>If you don&apos;t already have CMake installed, see the <ulink url="https://cmake.org/install">CMake installation guide</ulink>.</para>
<para>{: .callout .note} Note: The terminal commands in this tutorial show a Unix shell prompt, but the commands work on the Windows command line as well.</para>
</sect1>
<sect1 id="md_build__deps_googletest_src_docs_quickstart_cmake_1autotoc_md237">
<title>Set up a project</title>
<para>CMake uses a file named <computeroutput>CMakeLists.txt</computeroutput> to configure the build system for a project. You&apos;ll use this file to set up your project and declare a dependency on GoogleTest.</para>
<para>First, create a directory for your project:</para>
<para><programlisting><codeline><highlight class="normal">$<sp/>mkdir<sp/>my_project<sp/>&amp;&amp;<sp/>cd<sp/>my_project</highlight></codeline>
</programlisting></para>
<para>Next, you&apos;ll create the <computeroutput>CMakeLists.txt</computeroutput> file and declare a dependency on GoogleTest. There are many ways to express dependencies in the CMake ecosystem; in this quickstart, you&apos;ll use the <ulink url="https://cmake.org/cmake/help/latest/module/FetchContent.html"><computeroutput>FetchContent</computeroutput> CMake module</ulink>. To do this, in your project directory (<computeroutput>my_project</computeroutput>), create a file named <computeroutput>CMakeLists.txt</computeroutput> with the following contents:</para>
<para><programlisting filename=".cmake"><codeline><highlight class="normal">cmake_minimum_required(VERSION<sp/>3.14)</highlight></codeline>
<codeline><highlight class="normal">project(my_project)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>GoogleTest<sp/>requires<sp/>at<sp/>least<sp/>C++14</highlight></codeline>
<codeline><highlight class="normal">set(CMAKE_CXX_STANDARD<sp/>14)</highlight></codeline>
<codeline><highlight class="normal">set(CMAKE_CXX_STANDARD_REQUIRED<sp/>ON)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">include(FetchContent)</highlight></codeline>
<codeline><highlight class="normal">FetchContent_Declare(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>googletest</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>URL<sp/>https://github.com/google/googletest/archive/03597a01ee50ed33e9dfd640b249b4be3799d395.zip</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">#<sp/>For<sp/>Windows:<sp/>Prevent<sp/>overriding<sp/>the<sp/>parent<sp/>project&apos;s<sp/>compiler/linker<sp/>settings</highlight></codeline>
<codeline><highlight class="normal">set(gtest_force_shared_crt<sp/>ON<sp/>CACHE<sp/>BOOL<sp/>&quot;&quot;<sp/>FORCE)</highlight></codeline>
<codeline><highlight class="normal">FetchContent_MakeAvailable(googletest)</highlight></codeline>
</programlisting></para>
<para>The above configuration declares a dependency on GoogleTest which is downloaded from GitHub. In the above example, <computeroutput>03597a01ee50ed33e9dfd640b249b4be3799d395</computeroutput> is the Git commit hash of the GoogleTest version to use; we recommend updating the hash often to point to the latest version.</para>
<para>For more information about how to create <computeroutput>CMakeLists.txt</computeroutput> files, see the <ulink url="https://cmake.org/cmake/help/latest/guide/tutorial/index.html">CMake Tutorial</ulink>.</para>
</sect1>
<sect1 id="md_build__deps_googletest_src_docs_quickstart_cmake_1autotoc_md238">
<title>Create and run a binary</title>
<para>With GoogleTest declared as a dependency, you can use GoogleTest code within your own project.</para>
<para>As an example, create a file named <computeroutput>hello_test.cc</computeroutput> in your <computeroutput>my_project</computeroutput> directory with the following contents:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Demonstrate<sp/>some<sp/>basic<sp/>assertions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">TEST(HelloTest,<sp/>BasicAssertions)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Expect<sp/>two<sp/>strings<sp/>not<sp/>to<sp/>be<sp/>equal.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>EXPECT_STRNE(</highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;world&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Expect<sp/>equality.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>EXPECT_EQ(7<sp/>*<sp/>6,<sp/>42);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>GoogleTest provides <ulink url="primer.md#assertions">assertions</ulink> that you use to test the behavior of your code. The above sample includes the main GoogleTest header file and demonstrates some basic assertions.</para>
<para>To build the code, add the following to the end of your <computeroutput>CMakeLists.txt</computeroutput> file:</para>
<para><programlisting filename=".cmake"><codeline><highlight class="normal">enable_testing()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">add_executable(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>hello_test</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>hello_test.cc</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">target_link_libraries(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>hello_test</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>GTest::gtest_main</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">include(GoogleTest)</highlight></codeline>
<codeline><highlight class="normal">gtest_discover_tests(hello_test)</highlight></codeline>
</programlisting></para>
<para>The above configuration enables testing in CMake, declares the C++ test binary you want to build (<computeroutput>hello_test</computeroutput>), and links it to GoogleTest (<computeroutput>gtest_main</computeroutput>). The last two lines enable CMake&apos;s test runner to discover the tests included in the binary, using the <ulink url="https://cmake.org/cmake/help/git-stage/module/GoogleTest.html"><computeroutput>GoogleTest</computeroutput> CMake module</ulink>.</para>
<para>Now you can build and run your test:</para>
<para><preformatted>
<bold>my_project$ cmake -S . -B build</bold>
-- The C compiler identification is GNU 10.2.1
-- The CXX compiler identification is GNU 10.2.1
...
-- Build files have been written to: .../my_project/build

<bold>my_project$ cmake --build build</bold>
Scanning dependencies of target gtest
...
[100%] Built target gmock_main

<bold>my_project$ cd build &amp;&amp; ctest</bold>
Test project .../my_project/build
    Start 1: HelloTest.BasicAssertions
1/1 Test #1: HelloTest.BasicAssertions ........   Passed    0.00 sec

100% tests passed, 0 tests failed out of 1

Total Test time (real) =   0.01 sec
</preformatted></para>
<para>Congratulations! You&apos;ve successfully built and run a test binary using GoogleTest.</para>
</sect1>
<sect1 id="md_build__deps_googletest_src_docs_quickstart_cmake_1autotoc_md239">
<title>Next steps</title>
<para><itemizedlist>
<listitem><para><ref refid="md_build__deps_googletest_src_docs_primer" kindref="compound">Check out the Primer</ref> to start learning how to write simple tests.</para>
</listitem><listitem><para><ref refid="md_build__deps_googletest_src_docs_samples" kindref="compound">See the code samples</ref> for more examples showing how to use a variety of GoogleTest features. </para>
</listitem></itemizedlist>
</para>
</sect1>
    </detaileddescription>
    <location file="build/_deps/googletest-src/docs/quickstart-cmake.md"/>
  </compounddef>
</doxygen>
