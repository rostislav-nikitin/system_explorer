<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest" kind="class" language="Python" prot="public">
    <compoundname>googletest-break-on-failure-unittest::GTestBreakOnFailureUnitTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">gtest_test_utils.TestCase</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.RunAndVerify</definition>
        <argsstring>(self, env_var_value, flag_value, expect_seg_fault)</argsstring>
        <name>RunAndVerify</name>
        <qualifiedname>googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.RunAndVerify</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>env_var_value</type>
          <defname>env_var_value</defname>
        </param>
        <param>
          <type>flag_value</type>
          <defname>flag_value</defname>
        </param>
        <param>
          <type>expect_seg_fault</type>
          <defname>expect_seg_fault</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Runs googletest-break-on-failure-unittest_ and verifies its behavior.

Runs googletest-break-on-failure-unittest_ and verifies that it does
(or does not) have a seg-fault.

Args:
  env_var_value:    value of the GTEST_BREAK_ON_FAILURE environment
    variable; None if the variable should be unset.
  flag_value:       value of the --gtest_break_on_failure flag; None if the
    flag should not be present.
  expect_seg_fault: 1 if the program is expected to generate a seg-fault; 0
    otherwise.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" line="98" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" bodystart="98" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a68448a786ffe492e830d82ee1a22742e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testDefaultBehavior</definition>
        <argsstring>(self)</argsstring>
        <name>testDefaultBehavior</name>
        <qualifiedname>googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testDefaultBehavior</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests the behavior of the default mode.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" line="148" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a8981e95089e39d0c06fe0dd02dcb9bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testEnvVar</definition>
        <argsstring>(self)</argsstring>
        <name>testEnvVar</name>
        <qualifiedname>googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testEnvVar</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests using the GTEST_BREAK_ON_FAILURE environment variable.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" line="153" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" bodystart="153" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1abb611980cd810b5d79e39c5973858a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testFlag</definition>
        <argsstring>(self)</argsstring>
        <name>testFlag</name>
        <qualifiedname>googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testFlag</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests using the --gtest_break_on_failure flag.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" line="159" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1ae6586983cbfbe7b25a5c406814148621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testFlagOverridesEnvVar</definition>
        <argsstring>(self)</argsstring>
        <name>testFlagOverridesEnvVar</name>
        <qualifiedname>googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testFlagOverridesEnvVar</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests that the flag overrides the environment variable.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" line="165" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a75a96ff28298ed6901203f52684331b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testBreakOnFailureOverridesThrowOnFailure</definition>
        <argsstring>(self)</argsstring>
        <name>testBreakOnFailureOverridesThrowOnFailure</name>
        <qualifiedname>googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testBreakOnFailureOverridesThrowOnFailure</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests that gtest_break_on_failure overrides gtest_throw_on_failure.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" line="173" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" bodystart="173" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1afe31b01f820ac3d69465db8c69490c2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testCatchExceptionsDoesNotInterfere</definition>
        <argsstring>(self)</argsstring>
        <name>testCatchExceptionsDoesNotInterfere</name>
        <qualifiedname>googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest.testCatchExceptionsDoesNotInterfere</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Tests that gtest_catch_exceptions doesn&apos;t interfere.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" line="184" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" bodystart="184" bodyend="193"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Unit test for Google Test&apos;s break-on-failure mode.

Tests using the GTEST_BREAK_ON_FAILURE environment variable or
the --gtest_break_on_failure flag to turn assertion failures into
segmentation faults.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest</label>
        <link refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>gtest_test_utils::TestCase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>googletest-break-on-failure-unittest.GTestBreakOnFailureUnitTest</label>
        <link refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>gtest_test_utils::TestCase</label>
      </node>
    </collaborationgraph>
    <location file="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" line="90" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py" bodystart="90" bodyend="193"/>
    <listofallmembers>
      <member refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" prot="public" virt="non-virtual"><scope>googletest-break-on-failure-unittest::GTestBreakOnFailureUnitTest</scope><name>RunAndVerify</name></member>
      <member refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a75a96ff28298ed6901203f52684331b8" prot="public" virt="non-virtual"><scope>googletest-break-on-failure-unittest::GTestBreakOnFailureUnitTest</scope><name>testBreakOnFailureOverridesThrowOnFailure</name></member>
      <member refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1afe31b01f820ac3d69465db8c69490c2d" prot="public" virt="non-virtual"><scope>googletest-break-on-failure-unittest::GTestBreakOnFailureUnitTest</scope><name>testCatchExceptionsDoesNotInterfere</name></member>
      <member refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a68448a786ffe492e830d82ee1a22742e" prot="public" virt="non-virtual"><scope>googletest-break-on-failure-unittest::GTestBreakOnFailureUnitTest</scope><name>testDefaultBehavior</name></member>
      <member refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a8981e95089e39d0c06fe0dd02dcb9bb7" prot="public" virt="non-virtual"><scope>googletest-break-on-failure-unittest::GTestBreakOnFailureUnitTest</scope><name>testEnvVar</name></member>
      <member refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1abb611980cd810b5d79e39c5973858a49" prot="public" virt="non-virtual"><scope>googletest-break-on-failure-unittest::GTestBreakOnFailureUnitTest</scope><name>testFlag</name></member>
      <member refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1ae6586983cbfbe7b25a5c406814148621" prot="public" virt="non-virtual"><scope>googletest-break-on-failure-unittest::GTestBreakOnFailureUnitTest</scope><name>testFlagOverridesEnvVar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
