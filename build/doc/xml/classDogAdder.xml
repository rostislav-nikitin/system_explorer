<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classDogAdder" kind="class" language="C++" prot="public">
    <compoundname>DogAdder</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classDogAdder_1ac539b2207c940d290ed9b88211badce9" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DogAdder::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>DogAdder::value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" line="231" column="15" bodyfile="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classDogAdder_1a7fd76a2078834dc255c7dd7ac7c58f32" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DogAdder::DogAdder</definition>
        <argsstring>(const char *a_value)</argsstring>
        <name>DogAdder</name>
        <qualifiedname>DogAdder::DogAdder</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>a_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" line="215" column="12" bodyfile="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classDogAdder_1a35bb24b649b63f38784dcb44d55c4d94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DogAdder::DogAdder</definition>
        <argsstring>(const DogAdder &amp;other)</argsstring>
        <name>DogAdder</name>
        <qualifiedname>DogAdder::DogAdder</qualifiedname>
        <param>
          <type>const <ref refid="classDogAdder" kindref="compound">DogAdder</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" line="216" column="3" bodyfile="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classDogAdder_1a13bd773069c15b083f876b8afd512247" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classDogAdder" kindref="compound">DogAdder</ref></type>
        <definition>DogAdder DogAdder::operator=</definition>
        <argsstring>(const DogAdder &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>DogAdder::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classDogAdder" kindref="compound">DogAdder</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" line="218" column="12" bodyfile="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classDogAdder_1ad667166cdafb4352396e910faf09a55f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classDogAdder" kindref="compound">DogAdder</ref></type>
        <definition>DogAdder DogAdder::operator+</definition>
        <argsstring>(const DogAdder &amp;other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>DogAdder::operator+</qualifiedname>
        <param>
          <type>const <ref refid="classDogAdder" kindref="compound">DogAdder</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" line="222" column="12" bodyfile="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" bodystart="222" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classDogAdder_1a6d87d3ee06c0167e7552ba83daa629e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DogAdder::operator&lt;</definition>
        <argsstring>(const DogAdder &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>DogAdder::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="classDogAdder" kindref="compound">DogAdder</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" line="227" column="3" bodyfile="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classDogAdder_1acf359606b9c5ab11dd5742da36f0f452" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; DogAdder::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <qualifiedname>DogAdder::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" line="228" column="21" bodyfile="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" bodystart="228" bodyend="228"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" line="213" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-param-test-test.cc" bodystart="213" bodyend="232"/>
    <listofallmembers>
      <member refid="classDogAdder_1a7fd76a2078834dc255c7dd7ac7c58f32" prot="public" virt="non-virtual"><scope>DogAdder</scope><name>DogAdder</name></member>
      <member refid="classDogAdder_1a35bb24b649b63f38784dcb44d55c4d94" prot="public" virt="non-virtual"><scope>DogAdder</scope><name>DogAdder</name></member>
      <member refid="classDogAdder_1ad667166cdafb4352396e910faf09a55f" prot="public" virt="non-virtual"><scope>DogAdder</scope><name>operator+</name></member>
      <member refid="classDogAdder_1a6d87d3ee06c0167e7552ba83daa629e7" prot="public" virt="non-virtual"><scope>DogAdder</scope><name>operator&lt;</name></member>
      <member refid="classDogAdder_1a13bd773069c15b083f876b8afd512247" prot="public" virt="non-virtual"><scope>DogAdder</scope><name>operator=</name></member>
      <member refid="classDogAdder_1acf359606b9c5ab11dd5742da36f0f452" prot="public" virt="non-virtual"><scope>DogAdder</scope><name>value</name></member>
      <member refid="classDogAdder_1ac539b2207c940d290ed9b88211badce9" prot="private" virt="non-virtual"><scope>DogAdder</scope><name>value_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
