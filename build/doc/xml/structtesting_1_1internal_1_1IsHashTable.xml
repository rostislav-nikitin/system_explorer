<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structtesting_1_1internal_1_1IsHashTable" kind="struct" language="C++" prot="public">
    <compoundname>testing::internal::IsHashTable</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structtesting_1_1internal_1_1IsHashTable_1a165e0a3eddfa5fadf9b950be6432d848" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool testing::internal::IsHashTable&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>testing::internal::IsHashTable::value</qualifiedname>
        <initializer>= sizeof(test&lt;T&gt;(nullptr, nullptr)) == sizeof(int)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-internal.h" line="964" column="21" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-internal.h" bodystart="964" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structtesting_1_1internal_1_1IsHashTable_1acc4d1e2307a1e0527932da7a7d354f06" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>char</type>
        <definition>static char testing::internal::IsHashTable&lt; T &gt;::test</definition>
        <argsstring>(typename U::hasher *, typename U::reverse_iterator *)</argsstring>
        <name>test</name>
        <qualifiedname>testing::internal::IsHashTable::test</qualifiedname>
        <param>
          <type>typename U::hasher *</type>
        </param>
        <param>
          <type>typename U::reverse_iterator *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-internal.h" line="957" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1internal_1_1IsHashTable_1a195b49a6ae5090b6266a5fa4ab771962" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>static int testing::internal::IsHashTable&lt; T &gt;::test</definition>
        <argsstring>(typename U::hasher *,...)</argsstring>
        <name>test</name>
        <qualifiedname>testing::internal::IsHashTable::test</qualifiedname>
        <param>
          <type>typename U::hasher *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-internal.h" line="959" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1internal_1_1IsHashTable_1a40461295b959ff31e06241d4de072be0" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>char</type>
        <definition>static char testing::internal::IsHashTable&lt; T &gt;::test</definition>
        <argsstring>(...)</argsstring>
        <name>test</name>
        <qualifiedname>testing::internal::IsHashTable::test</qualifiedname>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-internal.h" line="961" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-internal.h" line="954" column="1" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-internal.h" bodystart="954" bodyend="965"/>
    <listofallmembers>
      <member refid="structtesting_1_1internal_1_1IsHashTable_1acc4d1e2307a1e0527932da7a7d354f06" prot="private" virt="non-virtual"><scope>testing::internal::IsHashTable</scope><name>test</name></member>
      <member refid="structtesting_1_1internal_1_1IsHashTable_1a195b49a6ae5090b6266a5fa4ab771962" prot="private" virt="non-virtual"><scope>testing::internal::IsHashTable</scope><name>test</name></member>
      <member refid="structtesting_1_1internal_1_1IsHashTable_1a40461295b959ff31e06241d4de072be0" prot="private" virt="non-virtual"><scope>testing::internal::IsHashTable</scope><name>test</name></member>
      <member refid="structtesting_1_1internal_1_1IsHashTable_1a165e0a3eddfa5fadf9b950be6432d848" prot="public" virt="non-virtual"><scope>testing::internal::IsHashTable</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
