<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtesting_1_1internal_1_1IsEmptyMatcher" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::IsEmptyMatcher</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1IsEmptyMatcher_1a3d474f454894c58040998c12cade778c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatcheeContainerType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::IsEmptyMatcher::MatchAndExplain</definition>
        <argsstring>(const MatcheeContainerType &amp;c, MatchResultListener *listener) const</argsstring>
        <name>MatchAndExplain</name>
        <qualifiedname>testing::internal::IsEmptyMatcher::MatchAndExplain</qualifiedname>
        <param>
          <type>const MatcheeContainerType &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>MatchResultListener *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-more-matchers.h" line="68" column="8" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-more-matchers.h" bodystart="68" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1IsEmptyMatcher_1aa65bc08676d63afc64f2a5a338029adb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsEmptyMatcher::MatchAndExplain</definition>
        <argsstring>(const char *s, MatchResultListener *listener) const</argsstring>
        <name>MatchAndExplain</name>
        <qualifiedname>testing::internal::IsEmptyMatcher::MatchAndExplain</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>MatchResultListener *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-more-matchers.h" line="78" column="8" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-more-matchers.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1IsEmptyMatcher_1af5ed93e9a882904c289d5199cf50b360" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::IsEmptyMatcher::DescribeTo</definition>
        <argsstring>(std::ostream *os) const</argsstring>
        <name>DescribeTo</name>
        <qualifiedname>testing::internal::IsEmptyMatcher::DescribeTo</qualifiedname>
        <param>
          <type>std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-more-matchers.h" line="83" column="8" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-more-matchers.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1IsEmptyMatcher_1aad3f827044d3416bbe3cbdeede1c0ec0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::IsEmptyMatcher::DescribeNegationTo</definition>
        <argsstring>(std::ostream *os) const</argsstring>
        <name>DescribeNegationTo</name>
        <qualifiedname>testing::internal::IsEmptyMatcher::DescribeNegationTo</qualifiedname>
        <param>
          <type>std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-more-matchers.h" line="85" column="8" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-more-matchers.h" bodystart="85" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-more-matchers.h" line="64" column="1" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-more-matchers.h" bodystart="64" bodyend="86"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1IsEmptyMatcher_1aad3f827044d3416bbe3cbdeede1c0ec0" prot="public" virt="non-virtual"><scope>testing::internal::IsEmptyMatcher</scope><name>DescribeNegationTo</name></member>
      <member refid="classtesting_1_1internal_1_1IsEmptyMatcher_1af5ed93e9a882904c289d5199cf50b360" prot="public" virt="non-virtual"><scope>testing::internal::IsEmptyMatcher</scope><name>DescribeTo</name></member>
      <member refid="classtesting_1_1internal_1_1IsEmptyMatcher_1a3d474f454894c58040998c12cade778c" prot="public" virt="non-virtual"><scope>testing::internal::IsEmptyMatcher</scope><name>MatchAndExplain</name></member>
      <member refid="classtesting_1_1internal_1_1IsEmptyMatcher_1aa65bc08676d63afc64f2a5a338029adb" prot="public" virt="non-virtual"><scope>testing::internal::IsEmptyMatcher</scope><name>MatchAndExplain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
