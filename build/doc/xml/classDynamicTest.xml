<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classDynamicTest" kind="class" language="C++" prot="public">
    <compoundname>DynamicTest</compoundname>
    <basecompoundref refid="classDynamicFixture" prot="public" virt="non-virtual">DynamicFixture</basecompoundref>
    <basecompoundref refid="classDynamicUnitTestFixture" prot="public" virt="non-virtual">DynamicUnitTestFixture</basecompoundref>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>Pass</declname>
        <defname>Pass</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classDynamicTest_1afc4a0a94673a3d37709f9cd03e82b821" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void DynamicTest&lt; Pass &gt;::TestBody</definition>
        <argsstring>() override</argsstring>
        <name>TestBody</name>
        <qualifiedname>DynamicTest::TestBody</qualifiedname>
        <reimplements refid="classtesting_1_1Test_1a146a4a5d9854e676d625a0ef67409794">TestBody</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-output-test_.cc" line="947" column="8" bodyfile="build/_deps/googletest-src/googletest/test/googletest-output-test_.cc" bodystart="947" bodyend="947"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classDynamicTest_1afc4a0a94673a3d37709f9cd03e82b821" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void DynamicTest&lt; Pass &gt;::TestBody</definition>
        <argsstring>() override</argsstring>
        <name>TestBody</name>
        <qualifiedname>DynamicTest::TestBody</qualifiedname>
        <reimplements refid="classtesting_1_1Test_1a146a4a5d9854e676d625a0ef67409794">TestBody</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" line="7729" column="8" bodyfile="build/_deps/googletest-src/googletest/test/gtest_unittest.cc" bodystart="7729" bodyend="7729"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>DynamicFixture</label>
        <link refid="classDynamicFixture"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>DynamicTest&lt; Pass &gt;</label>
        <link refid="classDynamicTest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>DynamicUnitTestFixture</label>
        <link refid="classDynamicUnitTestFixture"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>testing::Test</label>
        <link refid="classtesting_1_1Test"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>DynamicFixture</label>
        <link refid="classDynamicFixture"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>DynamicTest&lt; Pass &gt;</label>
        <link refid="classDynamicTest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>DynamicUnitTestFixture</label>
        <link refid="classDynamicUnitTestFixture"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>testing::Test</label>
        <link refid="classtesting_1_1Test"/>
      </node>
    </collaborationgraph>
    <location file="build/_deps/googletest-src/googletest/test/googletest-output-test_.cc" line="945" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-output-test_.cc" bodystart="945" bodyend="948"/>
    <listofallmembers>
      <member refid="classDynamicFixture_1a824c439775903dff798c35dbfab09d99" prot="protected" virt="non-virtual"><scope>DynamicTest</scope><name>DynamicFixture</name></member>
      <member refid="classtesting_1_1Test_1a7a00be7dd0a6bfdc8d47a1b784623613" prot="public" virt="non-virtual" ambiguityscope="DynamicFixture::"><scope>DynamicTest</scope><name>HasFailure</name></member>
      <member refid="classtesting_1_1Test_1a7a00be7dd0a6bfdc8d47a1b784623613" prot="public" virt="non-virtual" ambiguityscope="DynamicUnitTestFixture::"><scope>DynamicTest</scope><name>HasFailure</name></member>
      <member refid="classtesting_1_1Test_1a5e83604628ef542af888d631566ff60c" prot="public" virt="non-virtual" ambiguityscope="DynamicFixture::"><scope>DynamicTest</scope><name>HasFatalFailure</name></member>
      <member refid="classtesting_1_1Test_1a5e83604628ef542af888d631566ff60c" prot="public" virt="non-virtual" ambiguityscope="DynamicUnitTestFixture::"><scope>DynamicTest</scope><name>HasFatalFailure</name></member>
      <member refid="classtesting_1_1Test_1a8c00e8cc6fe10616b480bd54d2a426cb" prot="public" virt="non-virtual" ambiguityscope="DynamicFixture::"><scope>DynamicTest</scope><name>HasNonfatalFailure</name></member>
      <member refid="classtesting_1_1Test_1a8c00e8cc6fe10616b480bd54d2a426cb" prot="public" virt="non-virtual" ambiguityscope="DynamicUnitTestFixture::"><scope>DynamicTest</scope><name>HasNonfatalFailure</name></member>
      <member refid="classtesting_1_1Test_1a7f0ada5dbc9e772acb2b6cd0b1b300d7" prot="public" virt="non-virtual" ambiguityscope="DynamicFixture::"><scope>DynamicTest</scope><name>IsSkipped</name></member>
      <member refid="classtesting_1_1Test_1a7f0ada5dbc9e772acb2b6cd0b1b300d7" prot="public" virt="non-virtual" ambiguityscope="DynamicUnitTestFixture::"><scope>DynamicTest</scope><name>IsSkipped</name></member>
      <member refid="classtesting_1_1Test_1a1559ce1c83f56993b582650c091535a7" prot="public" virt="non-virtual" ambiguityscope="DynamicFixture::"><scope>DynamicTest</scope><name>RecordProperty</name></member>
      <member refid="classtesting_1_1Test_1a24fea27f32ac2d9b023cb8e58bb6590a" prot="public" virt="non-virtual" ambiguityscope="DynamicFixture::"><scope>DynamicTest</scope><name>RecordProperty</name></member>
      <member refid="classtesting_1_1Test_1a1559ce1c83f56993b582650c091535a7" prot="public" virt="non-virtual" ambiguityscope="DynamicUnitTestFixture::"><scope>DynamicTest</scope><name>RecordProperty</name></member>
      <member refid="classtesting_1_1Test_1a24fea27f32ac2d9b023cb8e58bb6590a" prot="public" virt="non-virtual" ambiguityscope="DynamicUnitTestFixture::"><scope>DynamicTest</scope><name>RecordProperty</name></member>
      <member refid="classDynamicFixture_1a1439886d8a6972815b60a216d731a115" prot="protected" virt="virtual"><scope>DynamicTest</scope><name>SetUp</name></member>
      <member refid="classtesting_1_1Test_1a5ccbac42fee8c5b00b0bfe89b6c49d79" prot="public" virt="non-virtual" ambiguityscope="DynamicFixture::"><scope>DynamicTest</scope><name>SetUpTestCase</name></member>
      <member refid="classtesting_1_1Test_1a5ccbac42fee8c5b00b0bfe89b6c49d79" prot="public" virt="non-virtual" ambiguityscope="DynamicUnitTestFixture::"><scope>DynamicTest</scope><name>SetUpTestCase</name></member>
      <member refid="classDynamicFixture_1ae6e3117ba3fcc3108ac094d96ea441d6" prot="protected" virt="non-virtual"><scope>DynamicTest</scope><name>SetUpTestSuite</name></member>
      <member refid="classDynamicFixture_1a10e8ae5b963b80a99ad8892bc4974aac" prot="protected" virt="virtual"><scope>DynamicTest</scope><name>TearDown</name></member>
      <member refid="classtesting_1_1Test_1af374706cbaf0ffc460f4fd04e7c150f1" prot="public" virt="non-virtual" ambiguityscope="DynamicFixture::"><scope>DynamicTest</scope><name>TearDownTestCase</name></member>
      <member refid="classtesting_1_1Test_1af374706cbaf0ffc460f4fd04e7c150f1" prot="public" virt="non-virtual" ambiguityscope="DynamicUnitTestFixture::"><scope>DynamicTest</scope><name>TearDownTestCase</name></member>
      <member refid="classDynamicFixture_1a907d5981006ea512b9cf3f7819583fc0" prot="protected" virt="non-virtual"><scope>DynamicTest</scope><name>TearDownTestSuite</name></member>
      <member refid="classtesting_1_1Test_1a99f2bbfac6c95612322b0f10e607ebe5" prot="protected" virt="non-virtual" ambiguityscope="DynamicFixture::"><scope>DynamicTest</scope><name>Test</name></member>
      <member refid="classtesting_1_1Test_1a99f2bbfac6c95612322b0f10e607ebe5" prot="protected" virt="non-virtual" ambiguityscope="DynamicUnitTestFixture::"><scope>DynamicTest</scope><name>Test</name></member>
      <member refid="classDynamicTest_1afc4a0a94673a3d37709f9cd03e82b821" prot="public" virt="virtual"><scope>DynamicTest</scope><name>TestBody</name></member>
      <member refid="classDynamicTest_1afc4a0a94673a3d37709f9cd03e82b821" prot="private" virt="virtual"><scope>DynamicTest</scope><name>TestBody</name></member>
      <member refid="classDynamicFixture_1ae9848b5a982ea389bf675356d842533d" prot="protected" virt="non-virtual"><scope>DynamicTest</scope><name>~DynamicFixture</name></member>
      <member refid="classtesting_1_1Test_1a2b0a62f1e667bbe8d8cb18d785bfa991" prot="public" virt="virtual"><scope>DynamicTest</scope><name>~Test</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
