<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structtesting_1_1internal_1_1is__implicitly__convertible" kind="struct" language="C++" prot="public">
    <compoundname>testing::internal::is_implicitly_convertible</compoundname>
    <templateparamlist>
      <param>
        <type>typename From</type>
      </param>
      <param>
        <type>typename <ref refid="classtesting_1_1internal_1_1To" kindref="compound">To</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structtesting_1_1internal_1_1is__implicitly__convertible_1a9bfd3ef48354aa5caba0f2b26c584085" prot="public" static="no">
        <type>decltype(TestImplicitConversion&lt; From &gt;(0))</type>
        <definition>using testing::internal::is_implicitly_convertible&lt; From, To &gt;::type =  decltype(TestImplicitConversion&lt;From&gt;(0))</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>testing::internal::is_implicitly_convertible::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="341" column="3" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structtesting_1_1internal_1_1is__implicitly__convertible_1acd2b537534fff2e762fe454d1cedc96c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool testing::internal::is_implicitly_convertible&lt; From, To &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>testing::internal::is_implicitly_convertible::value</qualifiedname>
        <initializer>= type::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="342" column="25" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structtesting_1_1internal_1_1is__implicitly__convertible_1af6c146fc924b9098a8dc835606c7a046" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void testing::internal::is_implicitly_convertible&lt; From, To &gt;::Accept</definition>
        <argsstring>(T)</argsstring>
        <name>Accept</name>
        <qualifiedname>testing::internal::is_implicitly_convertible::Accept</qualifiedname>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="326" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1internal_1_1is__implicitly__convertible_1a65ffda696e5d8c7c03adba3d24fcca84" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T testing::internal::is_implicitly_convertible&lt; From, To &gt;::Make</definition>
        <argsstring>()</argsstring>
        <name>Make</name>
        <qualifiedname>testing::internal::is_implicitly_convertible::Make</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="330" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1internal_1_1is__implicitly__convertible_1a14b89e77540a7bc1bfa438beb21cea31" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>decltype(Accept&lt;<ref refid="classtesting_1_1internal_1_1To" kindref="compound">To</ref>&gt;(Make&lt;T&gt;()))</defval>
          </param>
        </templateparamlist>
        <type>std::true_type</type>
        <definition>static std::true_type testing::internal::is_implicitly_convertible&lt; From, To &gt;::TestImplicitConversion</definition>
        <argsstring>(int)</argsstring>
        <name>TestImplicitConversion</name>
        <qualifiedname>testing::internal::is_implicitly_convertible::TestImplicitConversion</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="334" column="25"/>
      </memberdef>
      <memberdef kind="function" id="structtesting_1_1internal_1_1is__implicitly__convertible_1acf68354ef8e1abcce92b1d6169a38818" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::false_type</type>
        <definition>static std::false_type testing::internal::is_implicitly_convertible&lt; From, To &gt;::TestImplicitConversion</definition>
        <argsstring>(...)</argsstring>
        <name>TestImplicitConversion</name>
        <qualifiedname>testing::internal::is_implicitly_convertible::TestImplicitConversion</qualifiedname>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="338" column="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="321" column="1" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" bodystart="321" bodyend="343"/>
    <listofallmembers>
      <member refid="structtesting_1_1internal_1_1is__implicitly__convertible_1af6c146fc924b9098a8dc835606c7a046" prot="private" virt="non-virtual"><scope>testing::internal::is_implicitly_convertible</scope><name>Accept</name></member>
      <member refid="structtesting_1_1internal_1_1is__implicitly__convertible_1a65ffda696e5d8c7c03adba3d24fcca84" prot="private" virt="non-virtual"><scope>testing::internal::is_implicitly_convertible</scope><name>Make</name></member>
      <member refid="structtesting_1_1internal_1_1is__implicitly__convertible_1a14b89e77540a7bc1bfa438beb21cea31" prot="private" virt="non-virtual"><scope>testing::internal::is_implicitly_convertible</scope><name>TestImplicitConversion</name></member>
      <member refid="structtesting_1_1internal_1_1is__implicitly__convertible_1acf68354ef8e1abcce92b1d6169a38818" prot="private" virt="non-virtual"><scope>testing::internal::is_implicitly_convertible</scope><name>TestImplicitConversion</name></member>
      <member refid="structtesting_1_1internal_1_1is__implicitly__convertible_1a9bfd3ef48354aa5caba0f2b26c584085" prot="public" virt="non-virtual"><scope>testing::internal::is_implicitly_convertible</scope><name>type</name></member>
      <member refid="structtesting_1_1internal_1_1is__implicitly__convertible_1acd2b537534fff2e762fe454d1cedc96c" prot="public" virt="non-virtual"><scope>testing::internal::is_implicitly_convertible</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
