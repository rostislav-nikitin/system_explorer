<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="googletest-output-test_8py" kind="file" language="Python">
    <compoundname>googletest-output-test.py</compoundname>
    <innerclass refid="classgoogletest-output-test_1_1GTestOutputTest" prot="public">googletest-output-test::GTestOutputTest</innerclass>
    <innernamespace refid="namespacegoogletest-output-test">googletest-output-test</innernamespace>
    <innernamespace refid="namespacegoogletest">googletest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="stringliteral">r&quot;&quot;&quot;Tests<sp/>the<sp/>text<sp/>output<sp/>of<sp/>Google<sp/>C++<sp/>Testing<sp/>and<sp/>Mocking<sp/>Framework.</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">To<sp/>update<sp/>the<sp/>golden<sp/>file:</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">googletest_output_test.py<sp/>--build_dir=BUILD/DIR<sp/>--gengolden</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">where<sp/>BUILD/DIR<sp/>contains<sp/>the<sp/>built<sp/>googletest-output-test_<sp/>file.</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">googletest_output_test.py<sp/>--gengolden</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral">googletest_output_test.py</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>difflib</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>googletest.test<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>gtest_test_utils</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>flag<sp/>for<sp/>generating<sp/>the<sp/>golden<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">GENGOLDEN_FLAG<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;--gengolden&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">CATCH_EXCEPTIONS_ENV_VAR_NAME<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;GTEST_CATCH_EXCEPTIONS&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>flag<sp/>indicating<sp/>stacktraces<sp/>are<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">NO_STACKTRACE_SUPPORT_FLAG<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;--no_stacktrace_support&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">IS_LINUX<sp/>=<sp/>os.name<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;posix&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>os.uname()[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;Linux&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">IS_WINDOWS<sp/>=<sp/>os.name<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;nt&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">GOLDEN_NAME<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;googletest-output-test-golden-lin.txt&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">PROGRAM_PATH<sp/>=<sp/><ref refid="namespacegtest__test__utils_1a89ed3717984a80ffbb7a9c92f71b86a2" kindref="member">gtest_test_utils.GetTestExecutablePath</ref>(</highlight><highlight class="stringliteral">&apos;googletest-output-test_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">#<sp/>At<sp/>least<sp/>one<sp/>command<sp/>we<sp/>exercise<sp/>must<sp/>not<sp/>have<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">#<sp/>&apos;internal_skip_environment_and_ad_hoc_tests&apos;<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">COMMAND_LIST_TESTS<sp/>=<sp/>({},<sp/>[PROGRAM_PATH,<sp/></highlight><highlight class="stringliteral">&apos;--gtest_list_tests&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="65"><highlight class="normal">COMMAND_WITH_COLOR<sp/>=<sp/>({},<sp/>[PROGRAM_PATH,<sp/></highlight><highlight class="stringliteral">&apos;--gtest_color=yes&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="66"><highlight class="normal">COMMAND_WITH_TIME<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROGRAM_PATH,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;--gtest_print_time&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;internal_skip_environment_and_ad_hoc_tests&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;--gtest_filter=FatalFailureTest.*:LoggingTest.*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="74"><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">COMMAND_WITH_DISABLED<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{},</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROGRAM_PATH,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;--gtest_also_run_disabled_tests&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;internal_skip_environment_and_ad_hoc_tests&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;--gtest_filter=*DISABLED_*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="83"><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">COMMAND_WITH_SHARDING<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&apos;GTEST_SHARD_INDEX&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;GTEST_TOTAL_SHARDS&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;2&apos;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROGRAM_PATH,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;internal_skip_environment_and_ad_hoc_tests&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;--gtest_filter=PassingTest.*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="91"><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">GOLDEN_PATH<sp/>=<sp/>os.path.join(<ref refid="namespacegtest__test__utils_1aaff66cb0980804d8bd57dc719d4b5518" kindref="member">gtest_test_utils.GetSourceDir</ref>(),<sp/>GOLDEN_NAME)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">ToUnixLineEnding(s):</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Changes<sp/>all<sp/>Windows/Mac<sp/>line<sp/>endings<sp/>in<sp/>s<sp/>to<sp/>UNIX<sp/>line<sp/>endings.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.replace(</highlight><highlight class="stringliteral">&apos;\r\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">&apos;\r&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RemoveLocations(test_output):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Removes<sp/>all<sp/>file<sp/>location<sp/>info<sp/>from<sp/>a<sp/>Google<sp/>Test<sp/>program&apos;s<sp/>output.</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_output:<sp/><sp/>the<sp/>output<sp/>of<sp/>a<sp/>Google<sp/>Test<sp/>program.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>all<sp/>file<sp/>location<sp/>info<sp/>(</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>form<sp/>of</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DIRECTORY/FILE_NAME:LINE_NUMBER:<sp/>&apos;</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DIRECTORY\\FILE_NAME(LINE_NUMBER):<sp/>&apos;</highlight><highlight class="normal">)<sp/>replaced<sp/>by</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FILE_NAME:#:<sp/>&apos;</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.sub(</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&apos;.*[/\\]((googletest-output-test_|gtest).cc)(\:\d+|\(\d+\))\:<sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&apos;\1:#:<sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_output,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RemoveStackTraceDetails(output):</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Removes<sp/>all<sp/>stack<sp/>traces<sp/>from<sp/>a<sp/>Google<sp/>Test<sp/>program&apos;s<sp/>output.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>*?<sp/>means<sp/>&quot;find<sp/>the<sp/>shortest<sp/>string<sp/>that<sp/>matches&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.sub(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&apos;Stack<sp/>trace:(.|\n)*?\n\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Stack<sp/>trace:<sp/>(omitted)\n\n&apos;</highlight><highlight class="normal">,<sp/>output</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RemoveStackTraces(output):</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Removes<sp/>all<sp/>traces<sp/>of<sp/>stack<sp/>traces<sp/>from<sp/>a<sp/>Google<sp/>Test<sp/>program&apos;s<sp/>output.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>*?<sp/>means<sp/>&quot;find<sp/>the<sp/>shortest<sp/>string<sp/>that<sp/>matches&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;Stack<sp/>trace:(.|\n)*?\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RemoveTime(output):</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Removes<sp/>all<sp/>time<sp/>information<sp/>from<sp/>a<sp/>Google<sp/>Test<sp/>program&apos;s<sp/>output.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;\(\d+<sp/>ms&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;(?<sp/>ms&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RemoveTypeInfoDetails(test_output):</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Removes<sp/>compiler-specific<sp/>type<sp/>info<sp/>from<sp/>Google<sp/>Test<sp/>program&apos;s<sp/>output.</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_output:<sp/><sp/>the<sp/>output<sp/>of<sp/>a<sp/>Google<sp/>Test<sp/>program.</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>type<sp/>information<sp/>normalized<sp/>to<sp/>canonical<sp/>form.</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="comment">#<sp/>some<sp/>compilers<sp/>output<sp/>the<sp/>name<sp/>of<sp/>type<sp/>&apos;unsigned<sp/>int&apos;<sp/>as<sp/>&apos;unsigned&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;unsigned<sp/>int&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;unsigned&apos;</highlight><highlight class="normal">,<sp/>test_output)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">NormalizeToCurrentPlatform(test_output):</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Normalizes<sp/>platform<sp/>specific<sp/>output<sp/>details<sp/>for<sp/>easier<sp/>comparison.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>IS_WINDOWS:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Removes<sp/>the<sp/>color<sp/>information<sp/>that<sp/>is<sp/>not<sp/>present<sp/>on<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>test_output<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">&apos;\x1b\\[(0;3\d)?m&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>test_output)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Changes<sp/>failure<sp/>message<sp/>headers<sp/>into<sp/>the<sp/>Windows<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>test_output<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;:<sp/>Failure\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&apos;:<sp/>error:<sp/>&apos;</highlight><highlight class="normal">,<sp/>test_output)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Changes<sp/>file(line_number)<sp/>to<sp/>file:line_number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>test_output<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;((\w|\.)+)\((\d+)\):&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&apos;\1:\3:&apos;</highlight><highlight class="normal">,<sp/>test_output)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test_output</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RemoveTestCounts(output):</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Removes<sp/>test<sp/>counts<sp/>from<sp/>a<sp/>Google<sp/>Test<sp/>program&apos;s<sp/>output.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;\d+<sp/>tests?,<sp/>listed<sp/>below&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;?<sp/>tests,<sp/>listed<sp/>below&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;\d+<sp/>FAILED<sp/>TESTS&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;?<sp/>FAILED<sp/>TESTS&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>re.sub(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&apos;\d+<sp/>tests?<sp/>from<sp/>\d+<sp/>test<sp/>cases?&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;?<sp/>tests<sp/>from<sp/>?<sp/>test<sp/>cases&apos;</highlight><highlight class="normal">,<sp/>output</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;\d+<sp/>tests?<sp/>from<sp/>([a-zA-Z_])&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&apos;?<sp/>tests<sp/>from<sp/>\1&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;\d+<sp/>tests?\.&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;?<sp/>tests.&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RemoveMatchingTests(test_output,<sp/>pattern):</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Removes<sp/>output<sp/>of<sp/>specified<sp/>tests<sp/>from<sp/>a<sp/>Google<sp/>Test<sp/>program&apos;s<sp/>output.</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/>This<sp/>function<sp/>strips<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>only<sp/>the<sp/>beginning<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>the<sp/>end<sp/>of<sp/>a<sp/>test<sp/>but<sp/>also</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>all<sp/>output<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>between.</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>test_output:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>string<sp/>containing<sp/>the<sp/>test<sp/>output.</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>pattern:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>regex<sp/>string<sp/>that<sp/>matches<sp/>names<sp/>of<sp/>test<sp/>cases<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>tests</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>remove.</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>Contents<sp/>of<sp/>test_output<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>tests<sp/>whose<sp/>names<sp/>match<sp/>pattern<sp/>removed.</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/>test_output<sp/>=<sp/>re.sub(</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>r&apos;.*\[<sp/>RUN<sp/><sp/><sp/><sp/><sp/><sp/>\]<sp/>.*%s(.|\n)*?\[(<sp/><sp/>FAILED<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>OK<sp/>)\]<sp/>.*%s.*\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(pattern,<sp/>pattern),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_output,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;.*%s.*\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>pattern,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>test_output)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">NormalizeOutput(output):</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Normalizes<sp/>output<sp/>(the<sp/>output<sp/>of<sp/>googletest-output-test_.exe).&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>ToUnixLineEnding(output)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>RemoveLocations(output)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>RemoveStackTraceDetails(output)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>RemoveTime(output)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">GetShellCommandOutput(env_cmd):</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>a<sp/>command<sp/>in<sp/>a<sp/>sub-process,<sp/>and<sp/>returns<sp/>its<sp/>output<sp/>in<sp/>a<sp/>string.</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>env_cmd:<sp/>The<sp/>shell<sp/>command.<sp/>A<sp/>2-tuple<sp/>where<sp/>element<sp/>0<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>a<sp/>dict<sp/>of<sp/>extra</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>environment<sp/>variables<sp/>to<sp/>set,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>element<sp/>1<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>a<sp/>string<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>command</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>any<sp/>flags.</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>string<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>command</highlight><highlight class="stringliteral">&apos;s<sp/>combined<sp/>standard<sp/>and<sp/>diagnostic<sp/>output.</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="comment">#<sp/>Spawns<sp/>cmd<sp/>in<sp/>a<sp/>sub-process,<sp/>and<sp/>gets<sp/>its<sp/>standard<sp/>I/O<sp/>file<sp/>objects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>and<sp/>save<sp/>the<sp/>environment<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>environ<sp/>=<sp/>os.environ.copy()</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>environ.update(env_cmd[0])</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/><ref refid="classgtest__test__utils_1_1Subprocess" kindref="compound">gtest_test_utils.Subprocess</ref>(env_cmd[1],<sp/>env=environ)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p.output</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">GetCommandOutput(env_cmd):</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>a<sp/>command<sp/>and<sp/>returns<sp/>output<sp/>with<sp/>all<sp/>file<sp/>location<sp/>info<sp/>stripped<sp/>off.</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>env_cmd:<sp/><sp/>The<sp/>shell<sp/>command.<sp/>A<sp/>2-tuple<sp/>where<sp/>element<sp/>0<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>a<sp/>dict<sp/>of<sp/>extra</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>environment<sp/>variables<sp/>to<sp/>set,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>element<sp/>1<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>a<sp/>string<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>command</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>any<sp/>flags.</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>string<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>command</highlight><highlight class="stringliteral">&apos;s<sp/>combined<sp/>standard<sp/>and<sp/>diagnostic<sp/>output.<sp/>File</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>location<sp/>info<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>stripped.</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="comment">#<sp/>Disables<sp/>exception<sp/>pop-ups<sp/>on<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>environ,<sp/>cmdline<sp/>=<sp/>env_cmd</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>environ<sp/>=<sp/>dict(environ)<sp/><sp/></highlight><highlight class="comment">#<sp/>Ensures<sp/>we<sp/>are<sp/>modifying<sp/>a<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>environ[CATCH_EXCEPTIONS_ENV_VAR_NAME]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NormalizeOutput(GetShellCommandOutput((environ,<sp/>cmdline)))</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">GetOutputOfAllCommands():</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>concatenated<sp/>output<sp/>from<sp/>several<sp/>representative<sp/>commands.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetCommandOutput(COMMAND_WITH_COLOR)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>GetCommandOutput(COMMAND_WITH_TIME)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>GetCommandOutput(COMMAND_WITH_DISABLED)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>GetCommandOutput(COMMAND_WITH_SHARDING)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">test_list<sp/>=<sp/>GetShellCommandOutput(COMMAND_LIST_TESTS)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">SUPPORTS_DEATH_TESTS<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;DeathTest&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>test_list</highlight></codeline>
<codeline lineno="272"><highlight class="normal">SUPPORTS_TYPED_TESTS<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;TypedTest&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>test_list</highlight></codeline>
<codeline lineno="273"><highlight class="normal">SUPPORTS_THREADS<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;ExpectFailureWithThreadsTest&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>test_list</highlight></codeline>
<codeline lineno="274"><highlight class="normal">SUPPORTS_STACK_TRACES<sp/>=<sp/>NO_STACKTRACE_SUPPORT_FLAG<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sys.argv</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">CAN_GENERATE_GOLDEN_FILE<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>SUPPORTS_DEATH_TESTS</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>SUPPORTS_TYPED_TESTS</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>SUPPORTS_THREADS</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>SUPPORTS_STACK_TRACES</highlight></codeline>
<codeline lineno="281"><highlight class="normal">)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classgoogletest-output-test_1_1GTestOutputTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-output-test_1_1GTestOutputTest" kindref="compound">GTestOutputTest</ref>(<ref refid="namespacegtest__test__utils_1a70bb257f4161391d238b89b85d543ddc" kindref="member">gtest_test_utils.TestCase</ref>):</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RemoveUnsupportedTests(self,<sp/>test_output):</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>SUPPORTS_DEATH_TESTS:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_output<sp/>=<sp/>RemoveMatchingTests(test_output,<sp/></highlight><highlight class="stringliteral">&apos;DeathTest&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>SUPPORTS_TYPED_TESTS:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_output<sp/>=<sp/>RemoveMatchingTests(test_output,<sp/></highlight><highlight class="stringliteral">&apos;TypedTest&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_output<sp/>=<sp/>RemoveMatchingTests(test_output,<sp/></highlight><highlight class="stringliteral">&apos;TypedDeathTest&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_output<sp/>=<sp/>RemoveMatchingTests(test_output,<sp/></highlight><highlight class="stringliteral">&apos;TypeParamDeathTest&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>SUPPORTS_THREADS:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_output<sp/>=<sp/>RemoveMatchingTests(</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_output,<sp/></highlight><highlight class="stringliteral">&apos;ExpectFailureWithThreadsTest&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_output<sp/>=<sp/>RemoveMatchingTests(</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_output,<sp/></highlight><highlight class="stringliteral">&apos;ScopedFakeTestPartResultReporterTest&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_output<sp/>=<sp/>RemoveMatchingTests(test_output,<sp/></highlight><highlight class="stringliteral">&apos;WorksConcurrently&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>SUPPORTS_STACK_TRACES:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_output<sp/>=<sp/>RemoveStackTraces(test_output)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test_output</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">testOutput(self):</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>GetOutputOfAllCommands()</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>golden_file<sp/>=<sp/>open(GOLDEN_PATH,<sp/></highlight><highlight class="stringliteral">&apos;rb&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>mis-configured<sp/>source<sp/>control<sp/>system<sp/>can<sp/>cause<sp/>\r<sp/>appear<sp/>in<sp/>EOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sequences<sp/>when<sp/>we<sp/>read<sp/>the<sp/>golden<sp/>file<sp/>irrespective<sp/>of<sp/>an<sp/>operating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>system<sp/>used.<sp/>Therefore,<sp/>we<sp/>need<sp/>to<sp/>strip<sp/>those<sp/>\r&apos;s<sp/>from<sp/>newlines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>unconditionally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>golden<sp/>=<sp/>ToUnixLineEnding(golden_file.read().decode())</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>golden_file.close()</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>want<sp/>the<sp/>test<sp/>to<sp/>pass<sp/>regardless<sp/>of<sp/>certain<sp/>features<sp/>being</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>supported<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>still<sp/>have<sp/>to<sp/>remove<sp/>type<sp/>name<sp/>specifics<sp/>in<sp/>all<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>normalized_actual<sp/>=<sp/>RemoveTypeInfoDetails(output)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>normalized_golden<sp/>=<sp/>RemoveTypeInfoDetails(golden)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>CAN_GENERATE_GOLDEN_FILE:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalized_golden,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalized_actual,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">.join(</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difflib.unified_diff(</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalized_golden.split(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalized_actual.split(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;golden&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;actual&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalized_actual<sp/>=<sp/>NormalizeToCurrentPlatform(</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveTestCounts(normalized_actual)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalized_golden<sp/>=<sp/>NormalizeToCurrentPlatform(</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveTestCounts(self.<ref refid="classgoogletest-output-test_1_1GTestOutputTest_1af058c7917b05d06b0e6249061db264a3" kindref="member">RemoveUnsupportedTests</ref>(normalized_golden))</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>code<sp/>is<sp/>very<sp/>handy<sp/>when<sp/>debugging<sp/>golden<sp/>file<sp/>differences:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.getenv(</highlight><highlight class="stringliteral">&apos;DEBUG_GTEST_OUTPUT_TEST&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>open(</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.join(</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegtest__test__utils_1aaff66cb0980804d8bd57dc719d4b5518" kindref="member">gtest_test_utils.GetSourceDir</ref>(),</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;_googletest-output-test_normalized_actual.txt&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;wb&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).write(normalized_actual)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>open(</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.join(</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegtest__test__utils_1aaff66cb0980804d8bd57dc719d4b5518" kindref="member">gtest_test_utils.GetSourceDir</ref>(),</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;_googletest-output-test_normalized_golden.txt&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;wb&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).write(normalized_golden)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(normalized_golden,<sp/>normalized_actual)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>NO_STACKTRACE_SUPPORT_FLAG<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sys.argv:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>unittest.main()<sp/>can&apos;t<sp/>handle<sp/>unknown<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>sys.argv.remove(NO_STACKTRACE_SUPPORT_FLAG)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>GENGOLDEN_FLAG<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sys.argv:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>CAN_GENERATE_GOLDEN_FILE:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/>GetOutputOfAllCommands()</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>golden_file<sp/>=<sp/>open(GOLDEN_PATH,<sp/></highlight><highlight class="stringliteral">&apos;wb&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>golden_file.write(output.encode())</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>golden_file.close()</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Unable<sp/>to<sp/>write<sp/>a<sp/>golden<sp/>file<sp/>when<sp/>compiled<sp/>in<sp/>an<sp/>environment</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral">that<sp/>does<sp/>not<sp/>support<sp/>all<sp/>the<sp/>required<sp/>features<sp/>(death<sp/>tests,</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral">typed<sp/>tests,<sp/>stack<sp/>traces,<sp/>and<sp/>multiple<sp/>threads).</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral">Please<sp/>build<sp/>this<sp/>test<sp/>and<sp/>generate<sp/>the<sp/>golden<sp/>file<sp/>using<sp/>Blaze<sp/>on<sp/>Linux.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys.stderr.write(message)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(1)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegtest__test__utils_1a5361b42d9c6843b5b117ead4d1c58cc5" kindref="member">gtest_test_utils.Main</ref>()</highlight></codeline>
    </programlisting>
    <location file="build/_deps/googletest-src/googletest/test/googletest-output-test.py"/>
  </compounddef>
</doxygen>
