<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="gmock-function-mocker_8h" kind="file" language="C++">
    <compoundname>gmock-function-mocker.h</compoundname>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes refid="gmock-spec-builders_8h" local="yes">gmock/gmock-spec-builders.h</includes>
    <includes refid="gmock-internal-utils_8h" local="yes">gmock/internal/gmock-internal-utils.h</includes>
    <includes refid="gmock-pp_8h" local="yes">gmock/internal/gmock-pp.h</includes>
    <includedby refid="gmock_8h" local="yes">build/_deps/googletest-src/googlemock/include/gmock/gmock.h</includedby>
    <includedby refid="gmock-function-mocker__test_8cc" local="yes">build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc</includedby>
    <incdepgraph>
      <node id="14">
        <label>gmock/gmock-actions.h</label>
        <link refid="gmock-actions_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>gmock/gmock-cardinalities.h</label>
        <link refid="gmock-cardinalities_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h</label>
        <link refid="gmock-function-mocker_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>gmock/gmock-matchers.h</label>
        <link refid="gmock-matchers_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gmock/gmock-spec-builders.h</label>
        <link refid="gmock-spec-builders_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>gmock/internal/custom/gmock-matchers.h</label>
        <link refid="internal_2custom_2gmock-matchers_8h_source"/>
      </node>
      <node id="24">
        <label>gmock/internal/custom/gmock-port.h</label>
        <link refid="custom_2gmock-port_8h_source"/>
      </node>
      <node id="18">
        <label>gmock/internal/gmock-internal-utils.h</label>
        <link refid="gmock-internal-utils_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>gmock/internal/gmock-port.h</label>
        <link refid="gmock-port_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>gmock/internal/gmock-pp.h</label>
        <link refid="gmock-pp_8h_source"/>
      </node>
      <node id="43">
        <label>gtest/gtest-assertion-result.h</label>
        <link refid="gtest-assertion-result_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>gtest/gtest-matchers.h</label>
        <link refid="gtest-matchers_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h_source"/>
      </node>
      <node id="34">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="55">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="46">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="25">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>algorithm</label>
      </node>
      <node id="21">
        <label>assert.h</label>
      </node>
      <node id="48">
        <label>atomic</label>
      </node>
      <node id="59">
        <label>cassert</label>
      </node>
      <node id="29">
        <label>cerrno</label>
      </node>
      <node id="69">
        <label>cmath</label>
      </node>
      <node id="41">
        <label>cstddef</label>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="26">
        <label>ctype.h</label>
      </node>
      <node id="15">
        <label>errno.h</label>
      </node>
      <node id="70">
        <label>exception</label>
      </node>
      <node id="51">
        <label>float.h</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="71">
        <label>initializer_list</label>
      </node>
      <node id="42">
        <label>iomanip</label>
      </node>
      <node id="72">
        <label>ios</label>
      </node>
      <node id="61">
        <label>iosfwd</label>
      </node>
      <node id="23">
        <label>iostream</label>
      </node>
      <node id="57">
        <label>iterator</label>
      </node>
      <node id="30">
        <label>limits</label>
      </node>
      <node id="67">
        <label>limits.h</label>
      </node>
      <node id="31">
        <label>locale</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="8">
        <label>memory</label>
      </node>
      <node id="9">
        <label>ostream</label>
      </node>
      <node id="38">
        <label>regex.h</label>
      </node>
      <node id="10">
        <label>set</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="27">
        <label>stddef.h</label>
      </node>
      <node id="19">
        <label>stdio.h</label>
      </node>
      <node id="22">
        <label>stdlib.h</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="28">
        <label>string.h</label>
      </node>
      <node id="36">
        <label>strings.h</label>
      </node>
      <node id="32">
        <label>sys/stat.h</label>
      </node>
      <node id="33">
        <label>sys/types.h</label>
      </node>
      <node id="17">
        <label>tuple</label>
      </node>
      <node id="2">
        <label>type_traits</label>
      </node>
      <node id="39">
        <label>typeinfo</label>
      </node>
      <node id="37">
        <label>unistd.h</label>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h</label>
        <link refid="gmock-function-mocker_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>build/_deps/googletest-src/googlemock/include/gmock/gmock.h</label>
        <link refid="gmock_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>build/_deps/googletest-src/googlemock/test/gmock-matchers_test.h</label>
        <link refid="gmock-matchers__test_8h_source"/>
      </node>
      <node id="4">
        <label>build/_deps/googletest-src/googlemock/test/gmock_link_test.h</label>
        <link refid="gmock__link__test_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtesting_1_1internal_1_1ThisRefAdjuster" prot="public">testing::internal::ThisRefAdjuster</innerclass>
    <innernamespace refid="namespacetesting">testing</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal">testing::internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="gmock-function-mocker_8h_1a05ffc29d0784b131ee178da190d31397" prot="public" static="no">
        <name>MOCK_METHOD</name>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_WARNING_PUSH()                                        \
  GMOCK_INTERNAL_WARNING_CLANG(ignored, &quot;-Wunused-member-function&quot;)    \
  GMOCK_PP_VARIADIC_CALL(GMOCK_INTERNAL_MOCK_METHOD_ARG_, __VA_ARGS__) \
  GMOCK_INTERNAL_WARNING_POP()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="111" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1aa4f34502611b33621e18725a56f4d011" prot="public" static="no">
        <name>GMOCK_INTERNAL_MOCK_METHOD_ARG_1</name>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_WRONG_ARITY(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="117" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a4a857a2d13828d2b65ac09eb47f3d36c" prot="public" static="no">
        <name>GMOCK_INTERNAL_MOCK_METHOD_ARG_2</name>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_WRONG_ARITY(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="120" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a7af2c00ea7b5cdbdf7129e5d9296fdad" prot="public" static="no">
        <name>GMOCK_INTERNAL_MOCK_METHOD_ARG_3</name>
        <param><defname>_Ret</defname></param>
        <param><defname>_MethodName</defname></param>
        <param><defname>_Args</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHOD_ARG_4(_Ret, _MethodName, _Args, ())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="123" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ad8a2523f8167f8c85b082c8c65f31b87" prot="public" static="no">
        <name>GMOCK_INTERNAL_MOCK_METHOD_ARG_4</name>
        <param><defname>_Ret</defname></param>
        <param><defname>_MethodName</defname></param>
        <param><defname>_Args</defname></param>
        <param><defname>_Spec</defname></param>
        <initializer>  GMOCK_INTERNAL_ASSERT_PARENTHESIS(_Args);                                \
  GMOCK_INTERNAL_ASSERT_PARENTHESIS(_Spec);                                \
  GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE(                                   \
      GMOCK_PP_NARG0 _Args, GMOCK_INTERNAL_SIGNATURE(_Ret, _Args));        \
  GMOCK_INTERNAL_ASSERT_VALID_SPEC(_Spec)                                  \
  GMOCK_INTERNAL_MOCK_METHOD_IMPL(                                         \
      GMOCK_PP_NARG0 _Args, _MethodName, GMOCK_INTERNAL_HAS_CONST(_Spec),  \
      GMOCK_INTERNAL_HAS_OVERRIDE(_Spec), GMOCK_INTERNAL_HAS_FINAL(_Spec), \
      GMOCK_INTERNAL_GET_NOEXCEPT_SPEC(_Spec),                             \
      GMOCK_INTERNAL_GET_CALLTYPE_SPEC(_Spec),                             \
      GMOCK_INTERNAL_GET_REF_SPEC(_Spec),                                  \
      (GMOCK_INTERNAL_SIGNATURE(_Ret, _Args)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="126" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a761ee1701ece858571b5d950cb6de86a" prot="public" static="no">
        <name>GMOCK_INTERNAL_MOCK_METHOD_ARG_5</name>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_WRONG_ARITY(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="140" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a63f6315200efc8b74271ae1a41d22efd" prot="public" static="no">
        <name>GMOCK_INTERNAL_MOCK_METHOD_ARG_6</name>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_WRONG_ARITY(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="143" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a6d021b39d45073a431b4bc97f8173d70" prot="public" static="no">
        <name>GMOCK_INTERNAL_MOCK_METHOD_ARG_7</name>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_WRONG_ARITY(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="146" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a592456f4bfcfc9a9a3a6b1482ed569f4" prot="public" static="no">
        <name>GMOCK_INTERNAL_WRONG_ARITY</name>
        <param><defname>...</defname></param>
        <initializer>  static_assert(                                                             \
      false,                                                                 \
      &quot;MOCK_METHOD must be called with 3 or 4 arguments. _Ret, &quot;             \
      &quot;_MethodName, _Args and optionally _Spec. _Args and _Spec must be &quot;    \
      &quot;enclosed in parentheses. If _Ret is a type with unprotected commas, &quot; \
      &quot;it must also be enclosed in parentheses.&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="149" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a0cd5db518de5d6abfbafe24d19a35362" prot="public" static="no">
        <name>GMOCK_INTERNAL_ASSERT_PARENTHESIS</name>
        <param><defname>_Tuple</defname></param>
        <initializer>  static_assert(                                  \
      GMOCK_PP_IS_ENCLOSED_PARENS(_Tuple),        \
      GMOCK_PP_STRINGIZE(_Tuple) &quot; should be enclosed in parentheses.&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="157" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a8482159ed8d8653920702922d6336942" prot="public" static="no">
        <name>GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE</name>
        <param><defname>_N</defname></param>
        <param><defname>...</defname></param>
        <initializer>  static_assert(                                                       \
      std::is_function&lt;__VA_ARGS__&gt;::value,                            \
      &quot;Signature must be a function type, maybe return type contains &quot; \
      &quot;unprotected comma.&quot;);                                           \
  static_assert(                                                       \
      ::testing::tuple_size&lt;typename <ref refid="structtesting_1_1internal_1_1Function" kindref="compound">::testing::internal::Function</ref>&lt;    \
              __VA_ARGS__&gt;::ArgumentTuple&gt;::value == _N,               \
      &quot;This method does not take &quot; GMOCK_PP_STRINGIZE(                 \
          _N) &quot; arguments. Parenthesize all types with unprotected commas.&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="162" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a0007a0efee3360bb4b5478b597e35ee7" prot="public" static="no">
        <name>GMOCK_INTERNAL_ASSERT_VALID_SPEC</name>
        <param><defname>_Spec</defname></param>
        <initializer>  GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT, ~, _Spec)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="173" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1adde681cccef890eeaa8464086c0cdc68" prot="public" static="no">
        <name>GMOCK_INTERNAL_MOCK_METHOD_IMPL</name>
        <param><defname>_N</defname></param>
        <param><defname>_MethodName</defname></param>
        <param><defname>_Constness</defname></param>
        <param><defname>_Override</defname></param>
        <param><defname>_Final</defname></param>
        <param><defname>_NoexceptSpec</defname></param>
        <param><defname>_CallType</defname></param>
        <param><defname>_RefSpec</defname></param>
        <param><defname>_Signature</defname></param>
        <initializer>  typename <ref refid="structtesting_1_1internal_1_1Function" kindref="compound">::testing::internal::Function</ref>&lt;GMOCK_PP_REMOVE_PARENS(               \
      _Signature)&gt;::Result                                                     \
  GMOCK_INTERNAL_EXPAND(_CallType)                                             \
      _MethodName(GMOCK_PP_REPEAT(GMOCK_INTERNAL_PARAMETER, _Signature, _N))   \
          GMOCK_PP_IF(_Constness, const, )                                     \
              _RefSpec _NoexceptSpec GMOCK_PP_IF(_Override, override, )        \
                  GMOCK_PP_IF(_Final, final, ) {                               \
    GMOCK_MOCKER_(_N, _Constness, _MethodName)                                 \
        .SetOwnerAndName(this, #_MethodName);                                  \
    return GMOCK_MOCKER_(_N, _Constness, _MethodName)                          \
        .Invoke(GMOCK_PP_REPEAT(GMOCK_INTERNAL_FORWARD_ARG, _Signature, _N));  \
  }                                                                            \
  ::testing::MockSpec&lt;GMOCK_PP_REMOVE_PARENS(_Signature)&gt; gmock_##_MethodName( \
      GMOCK_PP_REPEAT(GMOCK_INTERNAL_MATCHER_PARAMETER, _Signature, _N))       \
      GMOCK_PP_IF(_Constness, const, ) _RefSpec {                              \
    GMOCK_MOCKER_(_N, _Constness, _MethodName).RegisterOwner(this);            \
    return GMOCK_MOCKER_(_N, _Constness, _MethodName)                          \
        .With(GMOCK_PP_REPEAT(GMOCK_INTERNAL_MATCHER_ARGUMENT, , _N));         \
  }                                                                            \
  ::testing::MockSpec&lt;GMOCK_PP_REMOVE_PARENS(_Signature)&gt; gmock_##_MethodName( \
      const <ref refid="classtesting_1_1internal_1_1WithoutMatchers" kindref="compound">::testing::internal::WithoutMatchers</ref>&amp;,                             \
      GMOCK_PP_IF(_Constness, const, )<ref refid="structtesting_1_1internal_1_1Function" kindref="compound">::testing::internal::Function</ref>&lt;           \
          GMOCK_PP_REMOVE_PARENS(_Signature)&gt;*) const _RefSpec _NoexceptSpec { \
    return <ref refid="structtesting_1_1internal_1_1ThisRefAdjuster" kindref="compound">::testing::internal::ThisRefAdjuster</ref>&lt;GMOCK_PP_IF(                   \
        _Constness, const, ) int _RefSpec&gt;::Adjust(*this)                      \
        .gmock_##_MethodName(GMOCK_PP_REPEAT(                                  \
            GMOCK_INTERNAL_A_MATCHER_ARGUMENT, _Signature, _N));               \
  }                                                                            \
  mutable ::testing::FunctionMocker&lt;GMOCK_PP_REMOVE_PARENS(_Signature)&gt;        \
  GMOCK_MOCKER_(_N, _Constness, _MethodName)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="178" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a89ec7e283a9d924e9cfd92d45b9bbebd" prot="public" static="no">
        <name>GMOCK_INTERNAL_EXPAND</name>
        <param><defname>...</defname></param>
        <initializer>__VA_ARGS__</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="210" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a3fc6f99ce89d5117fcc366d44423a9f2" prot="public" static="no">
        <name>GMOCK_INTERNAL_HAS_CONST</name>
        <param><defname>_Tuple</defname></param>
        <initializer>  GMOCK_PP_HAS_COMMA(GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_DETECT_CONST, ~, _Tuple))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="213" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1aef5aaab325100a13fee33dd6029463dd" prot="public" static="no">
        <name>GMOCK_INTERNAL_HAS_OVERRIDE</name>
        <param><defname>_Tuple</defname></param>
        <initializer>  GMOCK_PP_HAS_COMMA(                       \
      GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_DETECT_OVERRIDE, ~, _Tuple))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="216" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a1c4b4308770f5ff925ba9ed1bf578644" prot="public" static="no">
        <name>GMOCK_INTERNAL_HAS_FINAL</name>
        <param><defname>_Tuple</defname></param>
        <initializer>  GMOCK_PP_HAS_COMMA(GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_DETECT_FINAL, ~, _Tuple))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="220" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1aa20bf77d3c5bb9cdd37e91be7a8a1c7c" prot="public" static="no">
        <name>GMOCK_INTERNAL_GET_NOEXCEPT_SPEC</name>
        <param><defname>_Tuple</defname></param>
        <initializer>  GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT, ~, _Tuple)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="223" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a7c9fa1e2a38aafd13bd9353e56cb1d6c" prot="public" static="no">
        <name>GMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT</name>
        <param><defname>_i</defname></param>
        <param><defname>_</defname></param>
        <param><defname>_elem</defname></param>
        <initializer>  GMOCK_PP_IF(                                                          \
      GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_NOEXCEPT(_i, _, _elem)), \
      _elem, )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="226" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ae850ba506948bb6263ca21b00fd92060" prot="public" static="no">
        <name>GMOCK_INTERNAL_GET_CALLTYPE_SPEC</name>
        <param><defname>_Tuple</defname></param>
        <initializer>  GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE, ~, _Tuple)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="231" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a36101fde94884a88cb27bac2069ff0d7" prot="public" static="no">
        <name>GMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE</name>
        <param><defname>_i</defname></param>
        <param><defname>_</defname></param>
        <param><defname>_elem</defname></param>
        <initializer>  GMOCK_PP_IF(                                                          \
      GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_CALLTYPE(_i, _, _elem)), \
      GMOCK_PP_CAT(GMOCK_INTERNAL_UNPACK_, _elem), )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="234" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a19188252637f88f7379da0c86f43cd08" prot="public" static="no">
        <name>GMOCK_INTERNAL_GET_REF_SPEC</name>
        <param><defname>_Tuple</defname></param>
        <initializer>  GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_REF_SPEC_IF_REF, ~, _Tuple)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="239" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a0124c26d213f92b9fb1b68eac3ef5676" prot="public" static="no">
        <name>GMOCK_INTERNAL_REF_SPEC_IF_REF</name>
        <param><defname>_i</defname></param>
        <param><defname>_</defname></param>
        <param><defname>_elem</defname></param>
        <initializer>  GMOCK_PP_IF(GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_REF(_i, _, _elem)), \
              GMOCK_PP_CAT(GMOCK_INTERNAL_UNPACK_, _elem), )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="242" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a6043d8b0a21556d205e729fa9c8da600" prot="public" static="no">
        <name>GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT</name>
        <param><defname>_i</defname></param>
        <param><defname>_</defname></param>
        <param><defname>_elem</defname></param>
        <initializer>  static_assert(                                                               \
      (GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_CONST(_i, _, _elem)) +         \
       GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_OVERRIDE(_i, _, _elem)) +      \
       GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_FINAL(_i, _, _elem)) +         \
       GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_NOEXCEPT(_i, _, _elem)) +      \
       GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_REF(_i, _, _elem)) +           \
       GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_CALLTYPE(_i, _, _elem))) == 1, \
      GMOCK_PP_STRINGIZE(                                                      \
          _elem) &quot; cannot be recognized as a valid specification modifier.&quot;);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="254" column="10" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a3db348fab7c9ba65b3c9f4a7c1a9b3cc" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_CONST</name>
        <param><defname>_i</defname></param>
        <param><defname>_</defname></param>
        <param><defname>_elem</defname></param>
        <initializer>  GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_CONST_I_, _elem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="267" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1aa7d5cddff91ecb1062f9b09c92e1490b" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_CONST_I_const</name>
        <initializer>,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="270" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a78c435d1f1413ad21dce5459ce132ef3" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_OVERRIDE</name>
        <param><defname>_i</defname></param>
        <param><defname>_</defname></param>
        <param><defname>_elem</defname></param>
        <initializer>  GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_OVERRIDE_I_, _elem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="272" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a291f5cec84814f28b56557f3e2c0623e" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_OVERRIDE_I_override</name>
        <initializer>,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="275" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a2b0f53a8fea3a79d52582daf294737b0" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_FINAL</name>
        <param><defname>_i</defname></param>
        <param><defname>_</defname></param>
        <param><defname>_elem</defname></param>
        <initializer>  GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_FINAL_I_, _elem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="277" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a0bc72a48cf71bb605b47e52f94a97dd9" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_FINAL_I_final</name>
        <initializer>,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="280" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a86092e1196640ef73dc99eda5f1435f7" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_NOEXCEPT</name>
        <param><defname>_i</defname></param>
        <param><defname>_</defname></param>
        <param><defname>_elem</defname></param>
        <initializer>  GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_NOEXCEPT_I_, _elem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="282" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a8ca220dc4e08e07495b2170862c1dc30" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_NOEXCEPT_I_noexcept</name>
        <initializer>,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="285" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a56a8bb756632d03b3c43b7b7664d7770" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_REF</name>
        <param><defname>_i</defname></param>
        <param><defname>_</defname></param>
        <param><defname>_elem</defname></param>
        <initializer>  GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_REF_I_, _elem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="287" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1aca475292d0b6ea5769f2958ccc9f08d6" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_REF_I_ref</name>
        <initializer>,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="290" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a43f7489a34024d4d9f512a136a885904" prot="public" static="no">
        <name>GMOCK_INTERNAL_UNPACK_ref</name>
        <param><defname>x</defname></param>
        <initializer>x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="292" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a7a14ef019a00322bd5115f88dc11df72" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_CALLTYPE</name>
        <param><defname>_i</defname></param>
        <param><defname>_</defname></param>
        <param><defname>_elem</defname></param>
        <initializer>  GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_CALLTYPE_I_, _elem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="294" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1afadcc0492413d7b513ccee22dcc28e35" prot="public" static="no">
        <name>GMOCK_INTERNAL_DETECT_CALLTYPE_I_Calltype</name>
        <initializer>,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="297" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1aca0939fefc30c337d9becb0272f1e2bc" prot="public" static="no">
        <name>GMOCK_INTERNAL_UNPACK_Calltype</name>
        <param><defname>...</defname></param>
        <initializer>__VA_ARGS__</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="299" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a0a88ee90715376da8743924b64818ff0" prot="public" static="no">
        <name>GMOCK_INTERNAL_SIGNATURE</name>
        <param><defname>_Ret</defname></param>
        <param><defname>_Args</defname></param>
        <initializer>  ::testing::internal::identity_t&lt;GMOCK_PP_IF(GMOCK_PP_IS_BEGIN_PARENS(_Ret), \
                                              GMOCK_PP_REMOVE_PARENS,         \
                                              GMOCK_PP_IDENTITY)(_Ret)&gt;(      \
      GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_GET_TYPE, _, _Args))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="314" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a18563a68cd9e8061ee75ee68f2c74c37" prot="public" static="no">
        <name>GMOCK_INTERNAL_GET_TYPE</name>
        <param><defname>_i</defname></param>
        <param><defname>_</defname></param>
        <param><defname>_elem</defname></param>
        <initializer>  GMOCK_PP_COMMA_IF(_i)                                                \
  GMOCK_PP_IF(GMOCK_PP_IS_BEGIN_PARENS(_elem), GMOCK_PP_REMOVE_PARENS, \
              GMOCK_PP_IDENTITY)                                       \
  (_elem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="320" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ae7abd49050035332eb2572ab2ff1472e" prot="public" static="no">
        <name>GMOCK_INTERNAL_PARAMETER</name>
        <param><defname>_i</defname></param>
        <param><defname>_Signature</defname></param>
        <param><defname>_</defname></param>
        <initializer>  GMOCK_PP_COMMA_IF(_i)                                        \
  GMOCK_INTERNAL_ARG_O(_i, GMOCK_PP_REMOVE_PARENS(_Signature)) \
  gmock_a##_i</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="326" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a5ab1c90c3089a1b825ef70fa0273e463" prot="public" static="no">
        <name>GMOCK_INTERNAL_FORWARD_ARG</name>
        <param><defname>_i</defname></param>
        <param><defname>_Signature</defname></param>
        <param><defname>_</defname></param>
        <initializer>  GMOCK_PP_COMMA_IF(_i)                               \
  ::std::forward&lt;GMOCK_INTERNAL_ARG_O(                \
      _i, GMOCK_PP_REMOVE_PARENS(_Signature))&gt;(gmock_a##_i)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="331" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a2d8d1ef12c162a39811ce0b14a3f8979" prot="public" static="no">
        <name>GMOCK_INTERNAL_MATCHER_PARAMETER</name>
        <param><defname>_i</defname></param>
        <param><defname>_Signature</defname></param>
        <param><defname>_</defname></param>
        <initializer>  GMOCK_PP_COMMA_IF(_i)                                            \
  GMOCK_INTERNAL_MATCHER_O(_i, GMOCK_PP_REMOVE_PARENS(_Signature)) \
  gmock_a##_i</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="336" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ae1197367da885151c2834b92e0f5b123" prot="public" static="no">
        <name>GMOCK_INTERNAL_MATCHER_ARGUMENT</name>
        <param><defname>_i</defname></param>
        <param><defname>_1</defname></param>
        <param><defname>_2</defname></param>
        <initializer>  GMOCK_PP_COMMA_IF(_i)                             \
  gmock_a##_i</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="341" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ab124145546366f2495dc81c5ba3ed541" prot="public" static="no">
        <name>GMOCK_INTERNAL_A_MATCHER_ARGUMENT</name>
        <param><defname>_i</defname></param>
        <param><defname>_Signature</defname></param>
        <param><defname>_</defname></param>
        <initializer>  GMOCK_PP_COMMA_IF(_i)                                      \
  ::testing::A&lt;GMOCK_INTERNAL_ARG_O(_i, GMOCK_PP_REMOVE_PARENS(_Signature))&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="345" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a1eb0c66b2bc6b648af15cff7cf2ba494" prot="public" static="no">
        <name>GMOCK_INTERNAL_ARG_O</name>
        <param><defname>_i</defname></param>
        <param><defname>...</defname></param>
        <initializer>  typename <ref refid="structtesting_1_1internal_1_1Function" kindref="compound">::testing::internal::Function</ref>&lt;__VA_ARGS__&gt;::template Arg&lt;_i&gt;::type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="349" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a3b6f2605a4872caa1939a3783d11919d" prot="public" static="no">
        <name>GMOCK_INTERNAL_MATCHER_O</name>
        <param><defname>_i</defname></param>
        <param><defname>...</defname></param>
        <initializer>  const <ref refid="classtesting_1_1Matcher" kindref="compound">::testing::Matcher</ref>&lt;typename <ref refid="structtesting_1_1internal_1_1Function" kindref="compound">::testing::internal::Function</ref>&lt; \
      __VA_ARGS__&gt;::template Arg&lt;_i&gt;::type&gt;&amp;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="352" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a411c69e9d489d590480f728d365ae450" prot="public" static="no">
        <name>MOCK_METHOD0</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_INTERNAL_MOCK_METHODN(, , m, 0, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="356" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ac49d366be035ee87b73264a29059cdc7" prot="public" static="no">
        <name>MOCK_METHOD1</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_INTERNAL_MOCK_METHODN(, , m, 1, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="357" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ab3fb7d97f21dc99205db38a14df4a1c4" prot="public" static="no">
        <name>MOCK_METHOD2</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_INTERNAL_MOCK_METHODN(, , m, 2, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="358" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1af11ebf7fafb231778846dba77725cfdd" prot="public" static="no">
        <name>MOCK_METHOD3</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_INTERNAL_MOCK_METHODN(, , m, 3, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="359" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a111d70ee62b09089ec3cd7d6662e5cd2" prot="public" static="no">
        <name>MOCK_METHOD4</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_INTERNAL_MOCK_METHODN(, , m, 4, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="360" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a9b83bed95e89664e61d3a36174de0052" prot="public" static="no">
        <name>MOCK_METHOD5</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_INTERNAL_MOCK_METHODN(, , m, 5, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="361" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1add8f8f786444c2c85ac67f550dbde5a6" prot="public" static="no">
        <name>MOCK_METHOD6</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_INTERNAL_MOCK_METHODN(, , m, 6, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="362" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a01f3369877a0c52f59c006fbd54b6a10" prot="public" static="no">
        <name>MOCK_METHOD7</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_INTERNAL_MOCK_METHODN(, , m, 7, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="363" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ae77220bef9ab254c331b9026a3d18dba" prot="public" static="no">
        <name>MOCK_METHOD8</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_INTERNAL_MOCK_METHODN(, , m, 8, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="364" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ad6b30841fe780994d216cc8829cc127f" prot="public" static="no">
        <name>MOCK_METHOD9</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>GMOCK_INTERNAL_MOCK_METHODN(, , m, 9, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="365" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a01760fdd295f5a92264eed6a9ff1dbf8" prot="public" static="no">
        <name>MOCK_METHOD10</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, , m, 10, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="366" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ac86e04e649fa8bf35b5f0149a13c935d" prot="public" static="no">
        <name>MOCK_CONST_METHOD0</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, , m, 0, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="369" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a6f76aeb56f492cfe538e177b6aa77965" prot="public" static="no">
        <name>MOCK_CONST_METHOD1</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, , m, 1, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="371" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a31c489715704817a3f40d178404c61e8" prot="public" static="no">
        <name>MOCK_CONST_METHOD2</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, , m, 2, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="373" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a9e67763df6705172e1a2ae92f1446bbc" prot="public" static="no">
        <name>MOCK_CONST_METHOD3</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, , m, 3, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="375" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a4614e9d6b24dff60c30dd4dedf494c6c" prot="public" static="no">
        <name>MOCK_CONST_METHOD4</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, , m, 4, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="377" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ab7021ec2b869e7c9ea90363ee675f19b" prot="public" static="no">
        <name>MOCK_CONST_METHOD5</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, , m, 5, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="379" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a5081a185ba264d599357398952c23af1" prot="public" static="no">
        <name>MOCK_CONST_METHOD6</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, , m, 6, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="381" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a0f0e63ed14beab1d85f0160bdbed9930" prot="public" static="no">
        <name>MOCK_CONST_METHOD7</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, , m, 7, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="383" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a614ee58b7c9ab72e90c850d4bb97a502" prot="public" static="no">
        <name>MOCK_CONST_METHOD8</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, , m, 8, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="385" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ab7429646bacf56a7d560a3d81d497880" prot="public" static="no">
        <name>MOCK_CONST_METHOD9</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, , m, 9, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="387" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a4f16ede0ef660fb6dc49e5f5d226fbf9" prot="public" static="no">
        <name>MOCK_CONST_METHOD10</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, , m, 10, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="389" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a55a5a1a22cec416ead5605a2da39eec8" prot="public" static="no">
        <name>MOCK_METHOD0_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_METHOD0(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="392" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a8e5b9539726be5c7a13f1aa3bcc1f29f" prot="public" static="no">
        <name>MOCK_METHOD1_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_METHOD1(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="393" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1adb6e8d8bd6ab614c62d8ecc2ec163e3c" prot="public" static="no">
        <name>MOCK_METHOD2_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_METHOD2(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="394" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a0b1576f68e6161f106e3d9ee7e3ac28b" prot="public" static="no">
        <name>MOCK_METHOD3_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_METHOD3(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="395" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a17dde4ac8109f0bf1b73e3509e42c879" prot="public" static="no">
        <name>MOCK_METHOD4_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_METHOD4(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="396" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a3566f9bd057c5cee1841f55cbf685947" prot="public" static="no">
        <name>MOCK_METHOD5_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_METHOD5(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="397" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a0d16357a0043d36b167a1c42ef33f672" prot="public" static="no">
        <name>MOCK_METHOD6_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_METHOD6(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="398" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a31bdd1d1448052f4122ecebf937a8f44" prot="public" static="no">
        <name>MOCK_METHOD7_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_METHOD7(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="399" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1aa7e6573bb6a57f2a2d3c2875caeffaa3" prot="public" static="no">
        <name>MOCK_METHOD8_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_METHOD8(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="400" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a838c68cbdf422cfc703b83daf1d1f1e1" prot="public" static="no">
        <name>MOCK_METHOD9_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_METHOD9(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="401" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1aa28723ba52933b5ea9a4ffa1a73d15e1" prot="public" static="no">
        <name>MOCK_METHOD10_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_METHOD10(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="402" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a5fc82f3de9d5e83b0a6bb6cda98a8887" prot="public" static="no">
        <name>MOCK_CONST_METHOD0_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_CONST_METHOD0(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="404" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a46dfe8631eee86b15a79aff8a2866621" prot="public" static="no">
        <name>MOCK_CONST_METHOD1_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_CONST_METHOD1(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="405" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a4337d7257aa4edff048aa406073b718b" prot="public" static="no">
        <name>MOCK_CONST_METHOD2_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_CONST_METHOD2(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="406" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a4c4c3417c197729f647fb0c700a41405" prot="public" static="no">
        <name>MOCK_CONST_METHOD3_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_CONST_METHOD3(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="407" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a52290b1b841869d2d624b60ba1b6c3c4" prot="public" static="no">
        <name>MOCK_CONST_METHOD4_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_CONST_METHOD4(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="408" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a37d02091cf2e4d31c11f38609d12a815" prot="public" static="no">
        <name>MOCK_CONST_METHOD5_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_CONST_METHOD5(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="409" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a18f8d1d9ac6c6684bd681342e130662b" prot="public" static="no">
        <name>MOCK_CONST_METHOD6_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_CONST_METHOD6(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="410" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a6e9ae85c17b12ba8882e06b3785d4582" prot="public" static="no">
        <name>MOCK_CONST_METHOD7_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_CONST_METHOD7(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="411" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a430c2eae077074190d4b380868d42944" prot="public" static="no">
        <name>MOCK_CONST_METHOD8_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_CONST_METHOD8(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="412" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a7875d0d77516825a4b9cee703ae85c6f" prot="public" static="no">
        <name>MOCK_CONST_METHOD9_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_CONST_METHOD9(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="413" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1aa31d758cb898bad2d16ac706c204da7f" prot="public" static="no">
        <name>MOCK_CONST_METHOD10_T</name>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>MOCK_CONST_METHOD10(m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="414" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1acedf2c97e3493f4f39d35bbead8d9e4a" prot="public" static="no">
        <name>MOCK_METHOD0_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, ct, m, 0, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="416" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a3ffee4ba10588254eb44e67603e9de71" prot="public" static="no">
        <name>MOCK_METHOD1_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, ct, m, 1, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="418" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a27fcf1de830388291c2a81b144b8f89b" prot="public" static="no">
        <name>MOCK_METHOD2_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, ct, m, 2, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="420" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1afef2985a236f7588139c690d395758fb" prot="public" static="no">
        <name>MOCK_METHOD3_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, ct, m, 3, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="422" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a333774e6dda450fc85c241bff4b9957a" prot="public" static="no">
        <name>MOCK_METHOD4_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, ct, m, 4, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="424" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a195de665a5ab83cf56ac9562ccc73838" prot="public" static="no">
        <name>MOCK_METHOD5_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, ct, m, 5, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="426" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a1e55bb6ae5cfcb0403c867541f5f0931" prot="public" static="no">
        <name>MOCK_METHOD6_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, ct, m, 6, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="428" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a696e2f91735b99b2a37c369a74bad647" prot="public" static="no">
        <name>MOCK_METHOD7_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, ct, m, 7, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="430" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a5d207db39768c12d6fecab03cfbe4d75" prot="public" static="no">
        <name>MOCK_METHOD8_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, ct, m, 8, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="432" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a38494187d78c6a395f78c074d204f593" prot="public" static="no">
        <name>MOCK_METHOD9_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, ct, m, 9, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="434" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1af9641034cbd1f178dacd3515633d951f" prot="public" static="no">
        <name>MOCK_METHOD10_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(, ct, m, 10, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="436" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a001804410911b4ae2bc6f02a45a467e4" prot="public" static="no">
        <name>MOCK_CONST_METHOD0_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, ct, m, 0, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="439" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a94f4b0954d3d72011acf5f288ca40d42" prot="public" static="no">
        <name>MOCK_CONST_METHOD1_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, ct, m, 1, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="441" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a7c0507949996b9bae8b03fb6ea90d7a4" prot="public" static="no">
        <name>MOCK_CONST_METHOD2_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, ct, m, 2, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="443" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ac10e04e26db63b6c2a452e05d3c89db8" prot="public" static="no">
        <name>MOCK_CONST_METHOD3_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, ct, m, 3, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="445" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a15229a3933a49f5099ee010c6dcaadeb" prot="public" static="no">
        <name>MOCK_CONST_METHOD4_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, ct, m, 4, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="447" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a8d5e56fa6111cd7ee468e6dacf8691b9" prot="public" static="no">
        <name>MOCK_CONST_METHOD5_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, ct, m, 5, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="449" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a2d904ee47040f643e7b534c22603dd90" prot="public" static="no">
        <name>MOCK_CONST_METHOD6_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, ct, m, 6, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="451" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a66076ace4a10740c553080e5273f69c3" prot="public" static="no">
        <name>MOCK_CONST_METHOD7_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, ct, m, 7, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="453" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ab66f6bb289f1105f7c0dac3421c4a7f5" prot="public" static="no">
        <name>MOCK_CONST_METHOD8_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, ct, m, 8, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="455" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ad422a4d4cb5e3b91478e66a26c2af63e" prot="public" static="no">
        <name>MOCK_CONST_METHOD9_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, ct, m, 9, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="457" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a484ce7e8fbcc26b5145e893b48e7cd7d" prot="public" static="no">
        <name>MOCK_CONST_METHOD10_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_MOCK_METHODN(const, ct, m, 10, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="459" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a68a3dcece1b6932b4dbda2216ff4fa90" prot="public" static="no">
        <name>MOCK_METHOD0_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_METHOD0_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="462" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a3028c1938f6b819b64400c426ef1e30d" prot="public" static="no">
        <name>MOCK_METHOD1_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_METHOD1_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="464" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a18e4e8da0bdf27bde5ffca30587ff074" prot="public" static="no">
        <name>MOCK_METHOD2_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_METHOD2_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="466" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a1e723cc1c62c9fedb9f54ee30c111047" prot="public" static="no">
        <name>MOCK_METHOD3_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_METHOD3_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="468" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1aae18ec395b1ba3e991a25ffb997821ee" prot="public" static="no">
        <name>MOCK_METHOD4_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_METHOD4_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="470" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a04f83b372ebe63dea92cb5c3502ff345" prot="public" static="no">
        <name>MOCK_METHOD5_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_METHOD5_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="472" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a0dfe65f974c2b6d60cac3114489b4527" prot="public" static="no">
        <name>MOCK_METHOD6_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_METHOD6_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="474" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ae820565d836fda34401e8bdcfaaa7605" prot="public" static="no">
        <name>MOCK_METHOD7_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_METHOD7_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="476" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a0cf1d3aba371dfe424d27b97b5473174" prot="public" static="no">
        <name>MOCK_METHOD8_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_METHOD8_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="478" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ad1bd879e10bad098cf68c27c75f4be09" prot="public" static="no">
        <name>MOCK_METHOD9_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_METHOD9_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="480" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ae0460a593b7868a5573117032d6d2e3e" prot="public" static="no">
        <name>MOCK_METHOD10_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_METHOD10_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="482" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a4d7f87bf059071344e3a80c7fd1b9051" prot="public" static="no">
        <name>MOCK_CONST_METHOD0_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_CONST_METHOD0_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="485" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a73aa181fb48e360fd18f1c2b7d9073b0" prot="public" static="no">
        <name>MOCK_CONST_METHOD1_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_CONST_METHOD1_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="487" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a74512829feca879a8e11731f0442d7b7" prot="public" static="no">
        <name>MOCK_CONST_METHOD2_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_CONST_METHOD2_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="489" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ac19708f4d74bb11d9aeecb7c5b74dec8" prot="public" static="no">
        <name>MOCK_CONST_METHOD3_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_CONST_METHOD3_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="491" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1acd1c5b5fca7c75ef5ed812f1e495a3f7" prot="public" static="no">
        <name>MOCK_CONST_METHOD4_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_CONST_METHOD4_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="493" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ae1e95e9eb000b737025cb74da20398ac" prot="public" static="no">
        <name>MOCK_CONST_METHOD5_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_CONST_METHOD5_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="495" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a3acffd86eecfbcfe829231930406610b" prot="public" static="no">
        <name>MOCK_CONST_METHOD6_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_CONST_METHOD6_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="497" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ac041233126a7740a136fc7a9737613dd" prot="public" static="no">
        <name>MOCK_CONST_METHOD7_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_CONST_METHOD7_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="499" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1aa4ed75d9f9d23eb0a00543d3ac1ed093" prot="public" static="no">
        <name>MOCK_CONST_METHOD8_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_CONST_METHOD8_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="501" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1afb8878388e0875e109d1fd6902471780" prot="public" static="no">
        <name>MOCK_CONST_METHOD9_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_CONST_METHOD9_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="503" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1af697bae09aedcdfb3d6897081efe7541" prot="public" static="no">
        <name>MOCK_CONST_METHOD10_T_WITH_CALLTYPE</name>
        <param><defname>ct</defname></param>
        <param><defname>m</defname></param>
        <param><defname>...</defname></param>
        <initializer>  MOCK_CONST_METHOD10_WITH_CALLTYPE(ct, m, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="505" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1ab4a1ee104d2797fb76a0971488f4c43e" prot="public" static="no">
        <name>GMOCK_INTERNAL_MOCK_METHODN</name>
        <param><defname>constness</defname></param>
        <param><defname>ct</defname></param>
        <param><defname>Method</defname></param>
        <param><defname>args_num</defname></param>
        <param><defname>...</defname></param>
        <initializer>  GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE(                                  \
      args_num, ::testing::internal::identity_t&lt;__VA_ARGS__&gt;);            \
  GMOCK_INTERNAL_MOCK_METHOD_IMPL(                                        \
      args_num, Method, GMOCK_PP_NARG0(constness), 0, 0, , ct, ,          \
      (::testing::internal::identity_t&lt;__VA_ARGS__&gt;))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="508" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gmock-function-mocker_8h_1a7d362499e27b1bc3a9806dd3cf58a5b7" prot="public" static="no">
        <name>GMOCK_MOCKER_</name>
        <param><defname>arity</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>Method</defname></param>
        <initializer>  GTEST_CONCAT_TOKEN_(gmock##constness##arity##_##Method##_, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" line="515" column="9" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" bodystart="515" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2007,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Mock<sp/>-<sp/>a<sp/>framework<sp/>for<sp/>writing<sp/>C++<sp/>mock<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>implements<sp/>MOCK_METHOD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>private,<sp/>include<sp/>&quot;gmock/gmock.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>friend<sp/>gmock/.*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_FUNCTION_MOCKER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_FUNCTION_MOCKER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/gmock-spec-builders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/internal/gmock-internal-utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/internal/gmock-pp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">testing<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">identity_t<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pattern&gt;</highlight></codeline>
<codeline lineno="53" refid="structtesting_1_1internal_1_1ThisRefAdjuster" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1ThisRefAdjuster" kindref="compound">ThisRefAdjuster</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">AdjustT<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::is_const&lt;typename<sp/>std::remove_reference&lt;Pattern&gt;::type&gt;::value,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;std::is_lvalue_reference&lt;Pattern&gt;::value,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;&amp;&gt;::type,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;std::is_lvalue_reference&lt;Pattern&gt;::value,<sp/>T&amp;,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;&amp;&gt;::type&gt;::type;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MockType&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>AdjustT&lt;MockType&gt;<sp/>Adjust(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MockType&amp;<sp/>mock)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">AdjustT&lt;MockType&gt;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">MockType&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mock));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PrefixOf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*a<sp/>==<sp/>0<sp/>||<sp/>(*a<sp/>==<sp/>*b<sp/>&amp;&amp;<sp/>internal::PrefixOf(a<sp/>+<sp/>1,<sp/>b<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StartsWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>(&amp;prefix)[N],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>(&amp;str)[M])<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>N<sp/>&lt;=<sp/>M<sp/>&amp;&amp;<sp/>internal::PrefixOf(prefix,<sp/>str);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EndsWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>(&amp;suffix)[N],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>(&amp;str)[M])<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>N<sp/>&lt;=<sp/>M<sp/>&amp;&amp;<sp/>internal::PrefixOf(suffix,<sp/>str<sp/>+<sp/>M<sp/>-<sp/>N);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>(&amp;a)[N],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>(&amp;b)[M])<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>N<sp/>==<sp/>M<sp/>&amp;&amp;<sp/>internal::PrefixOf(a,<sp/>b);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ValidateSpec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>(&amp;spec)[N])<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::Equals(</highlight><highlight class="stringliteral">&quot;const&quot;</highlight><highlight class="normal">,<sp/>spec)<sp/>||</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::Equals(</highlight><highlight class="stringliteral">&quot;override&quot;</highlight><highlight class="normal">,<sp/>spec)<sp/>||</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::Equals(</highlight><highlight class="stringliteral">&quot;final&quot;</highlight><highlight class="normal">,<sp/>spec)<sp/>||</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::Equals(</highlight><highlight class="stringliteral">&quot;noexcept&quot;</highlight><highlight class="normal">,<sp/>spec)<sp/>||</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(internal::StartsWith(</highlight><highlight class="stringliteral">&quot;noexcept(&quot;</highlight><highlight class="normal">,<sp/>spec)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::EndsWith(</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">,<sp/>spec))<sp/>||</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::Equals(</highlight><highlight class="stringliteral">&quot;ref(&amp;)&quot;</highlight><highlight class="normal">,<sp/>spec)<sp/>||</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::Equals(</highlight><highlight class="stringliteral">&quot;ref(&amp;&amp;)&quot;</highlight><highlight class="normal">,<sp/>spec)<sp/>||</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(internal::StartsWith(</highlight><highlight class="stringliteral">&quot;Calltype(&quot;</highlight><highlight class="normal">,<sp/>spec)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::EndsWith(</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">,<sp/>spec));</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>style<sp/>guide<sp/>prohibits<sp/>&quot;using&quot;<sp/>statements<sp/>in<sp/>a<sp/>namespace<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inside<sp/>a<sp/>header<sp/>file.<sp/><sp/>However,<sp/>the<sp/>FunctionMocker<sp/>class<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>meant<sp/>to<sp/>be<sp/>defined<sp/>in<sp/>the<sp/>::testing<sp/>namespace.<sp/><sp/>The<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>line<sp/>is<sp/>just<sp/>a<sp/>trick<sp/>for<sp/>working<sp/>around<sp/>a<sp/>bug<sp/>in<sp/>MSVC<sp/>8.0,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cannot<sp/>handle<sp/>it<sp/>if<sp/>we<sp/>define<sp/>FunctionMocker<sp/>in<sp/>::testing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">internal::FunctionMocker;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD(...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_WARNING_PUSH()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_WARNING_CLANG(ignored,<sp/>&quot;-Wunused-member-function&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>GMOCK_PP_VARIADIC_CALL(GMOCK_INTERNAL_MOCK_METHOD_ARG_,<sp/>__VA_ARGS__)<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>GMOCK_INTERNAL_WARNING_POP()</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MOCK_METHOD_ARG_1(...)<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_WRONG_ARITY(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MOCK_METHOD_ARG_2(...)<sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_WRONG_ARITY(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MOCK_METHOD_ARG_3(_Ret,<sp/>_MethodName,<sp/>_Args)<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHOD_ARG_4(_Ret,<sp/>_MethodName,<sp/>_Args,<sp/>())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MOCK_METHOD_ARG_4(_Ret,<sp/>_MethodName,<sp/>_Args,<sp/>_Spec)<sp/><sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_ASSERT_PARENTHESIS(_Args);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_ASSERT_PARENTHESIS(_Spec);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_NARG0<sp/>_Args,<sp/>GMOCK_INTERNAL_SIGNATURE(_Ret,<sp/>_Args));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_ASSERT_VALID_SPEC(_Spec)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHOD_IMPL(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_NARG0<sp/>_Args,<sp/>_MethodName,<sp/>GMOCK_INTERNAL_HAS_CONST(_Spec),<sp/><sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_HAS_OVERRIDE(_Spec),<sp/>GMOCK_INTERNAL_HAS_FINAL(_Spec),<sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_GET_NOEXCEPT_SPEC(_Spec),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_GET_CALLTYPE_SPEC(_Spec),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_GET_REF_SPEC(_Spec),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>(GMOCK_INTERNAL_SIGNATURE(_Ret,<sp/>_Args)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MOCK_METHOD_ARG_5(...)<sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_WRONG_ARITY(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MOCK_METHOD_ARG_6(...)<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_WRONG_ARITY(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MOCK_METHOD_ARG_7(...)<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_WRONG_ARITY(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_WRONG_ARITY(...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/>static_assert(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>false,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;MOCK_METHOD<sp/>must<sp/>be<sp/>called<sp/>with<sp/>3<sp/>or<sp/>4<sp/>arguments.<sp/>_Ret,<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;_MethodName,<sp/>_Args<sp/>and<sp/>optionally<sp/>_Spec.<sp/>_Args<sp/>and<sp/>_Spec<sp/>must<sp/>be<sp/>&quot;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;enclosed<sp/>in<sp/>parentheses.<sp/>If<sp/>_Ret<sp/>is<sp/>a<sp/>type<sp/>with<sp/>unprotected<sp/>commas,<sp/>&quot;<sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;it<sp/>must<sp/>also<sp/>be<sp/>enclosed<sp/>in<sp/>parentheses.&quot;)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_ASSERT_PARENTHESIS(_Tuple)<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/>static_assert(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_IS_ENCLOSED_PARENS(_Tuple),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_STRINGIZE(_Tuple)<sp/>&quot;<sp/>should<sp/>be<sp/>enclosed<sp/>in<sp/>parentheses.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE(_N,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/>static_assert(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>std::is_function&lt;__VA_ARGS__&gt;::value,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Signature<sp/>must<sp/>be<sp/>a<sp/>function<sp/>type,<sp/>maybe<sp/>return<sp/>type<sp/>contains<sp/>&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;unprotected<sp/>comma.&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>static_assert(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::tuple_size&lt;typename<sp/>::testing::internal::Function&lt;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VA_ARGS__&gt;::ArgumentTuple&gt;::value<sp/>==<sp/>_N,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;This<sp/>method<sp/>does<sp/>not<sp/>take<sp/>&quot;<sp/>GMOCK_PP_STRINGIZE(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_N)<sp/>&quot;<sp/>arguments.<sp/>Parenthesize<sp/>all<sp/>types<sp/>with<sp/>unprotected<sp/>commas.&quot;)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_ASSERT_VALID_SPEC(_Spec)<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT,<sp/>~,<sp/>_Spec)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MOCK_METHOD_IMPL(_N,<sp/>_MethodName,<sp/>_Constness,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Override,<sp/>_Final,<sp/>_NoexceptSpec,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CallType,<sp/>_RefSpec,<sp/>_Signature)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;GMOCK_PP_REMOVE_PARENS(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>_Signature)&gt;::Result<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_EXPAND(_CallType)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>_MethodName(GMOCK_PP_REPEAT(GMOCK_INTERNAL_PARAMETER,<sp/>_Signature,<sp/>_N))<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_IF(_Constness,<sp/>const,<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RefSpec<sp/>_NoexceptSpec<sp/>GMOCK_PP_IF(_Override,<sp/>override,<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_IF(_Final,<sp/>final,<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(_N,<sp/>_Constness,<sp/>_MethodName)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.SetOwnerAndName(this,<sp/>#_MethodName);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(_N,<sp/>_Constness,<sp/>_MethodName)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Invoke(GMOCK_PP_REPEAT(GMOCK_INTERNAL_FORWARD_ARG,<sp/>_Signature,<sp/>_N));<sp/><sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;GMOCK_PP_REMOVE_PARENS(_Signature)&gt;<sp/>gmock_##_MethodName(<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_REPEAT(GMOCK_INTERNAL_MATCHER_PARAMETER,<sp/>_Signature,<sp/>_N))<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_IF(_Constness,<sp/>const,<sp/>)<sp/>_RefSpec<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GMOCK_MOCKER_(_N,<sp/>_Constness,<sp/>_MethodName).RegisterOwner(this);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>GMOCK_MOCKER_(_N,<sp/>_Constness,<sp/>_MethodName)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.With(GMOCK_PP_REPEAT(GMOCK_INTERNAL_MATCHER_ARGUMENT,<sp/>,<sp/>_N));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/>::testing::MockSpec&lt;GMOCK_PP_REMOVE_PARENS(_Signature)&gt;<sp/>gmock_##_MethodName(<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::testing::internal::WithoutMatchers&amp;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_IF(_Constness,<sp/>const,<sp/>)::testing::internal::Function&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_REMOVE_PARENS(_Signature)&gt;*)<sp/>const<sp/>_RefSpec<sp/>_NoexceptSpec<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>::testing::internal::ThisRefAdjuster&lt;GMOCK_PP_IF(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Constness,<sp/>const,<sp/>)<sp/>int<sp/>_RefSpec&gt;::Adjust(*this)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.gmock_##_MethodName(GMOCK_PP_REPEAT(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_INTERNAL_A_MATCHER_ARGUMENT,<sp/>_Signature,<sp/>_N));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/>mutable<sp/>::testing::FunctionMocker&lt;GMOCK_PP_REMOVE_PARENS(_Signature)&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/>GMOCK_MOCKER_(_N,<sp/>_Constness,<sp/>_MethodName)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_EXPAND(...)<sp/>__VA_ARGS__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Valid<sp/>modifiers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_HAS_CONST(_Tuple)<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_HAS_COMMA(GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_DETECT_CONST,<sp/>~,<sp/>_Tuple))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_HAS_OVERRIDE(_Tuple)<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_HAS_COMMA(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_DETECT_OVERRIDE,<sp/>~,<sp/>_Tuple))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_HAS_FINAL(_Tuple)<sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_HAS_COMMA(GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_DETECT_FINAL,<sp/>~,<sp/>_Tuple))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_GET_NOEXCEPT_SPEC(_Tuple)<sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT,<sp/>~,<sp/>_Tuple)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT(_i,<sp/>_,<sp/>_elem)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_IF(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_NOEXCEPT(_i,<sp/>_,<sp/>_elem)),<sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>_elem,<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_GET_CALLTYPE_SPEC(_Tuple)<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE,<sp/>~,<sp/>_Tuple)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE(_i,<sp/>_,<sp/>_elem)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_IF(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_CALLTYPE(_i,<sp/>_,<sp/>_elem)),<sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_CAT(GMOCK_INTERNAL_UNPACK_,<sp/>_elem),<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_GET_REF_SPEC(_Tuple)<sp/>\</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_REF_SPEC_IF_REF,<sp/>~,<sp/>_Tuple)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_REF_SPEC_IF_REF(_i,<sp/>_,<sp/>_elem)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_IF(GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_REF(_i,<sp/>_,<sp/>_elem)),<sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_CAT(GMOCK_INTERNAL_UNPACK_,<sp/>_elem),<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GMOCK_INTERNAL_STRICT_SPEC_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT(_i,<sp/>_,<sp/>_elem)<sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"><sp/><sp/>static_assert(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::internal::ValidateSpec(GMOCK_PP_STRINGIZE(_elem)),<sp/><sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Token<sp/>\&apos;&quot;</highlight><highlight class="normal"><sp/>GMOCK_PP_STRINGIZE(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_elem)<sp/>&quot;\&apos;<sp/>cannot<sp/>be<sp/>recognized<sp/>as<sp/>a<sp/>valid<sp/>specification<sp/>&quot;<sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;modifier.<sp/>Is<sp/>a<sp/>&apos;,&apos;<sp/>missing?&quot;);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT(_i,<sp/>_,<sp/>_elem)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"><sp/><sp/>static_assert(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>(GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_CONST(_i,<sp/>_,<sp/>_elem))<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_OVERRIDE(_i,<sp/>_,<sp/>_elem))<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_FINAL(_i,<sp/>_,<sp/>_elem))<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_NOEXCEPT(_i,<sp/>_,<sp/>_elem))<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_REF(_i,<sp/>_,<sp/>_elem))<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_CALLTYPE(_i,<sp/>_,<sp/>_elem)))<sp/>==<sp/>1,<sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_STRINGIZE(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_elem)<sp/>&quot;<sp/>cannot<sp/>be<sp/>recognized<sp/>as<sp/>a<sp/>valid<sp/>specification<sp/>modifier.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GMOCK_INTERNAL_STRICT_SPEC_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modifiers<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_CONST(_i,<sp/>_,<sp/>_elem)<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_CONST_I_,<sp/>_elem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_CONST_I_const<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_OVERRIDE(_i,<sp/>_,<sp/>_elem)<sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_OVERRIDE_I_,<sp/>_elem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_OVERRIDE_I_override<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_FINAL(_i,<sp/>_,<sp/>_elem)<sp/>\</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_FINAL_I_,<sp/>_elem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_FINAL_I_final<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_NOEXCEPT(_i,<sp/>_,<sp/>_elem)<sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_NOEXCEPT_I_,<sp/>_elem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_NOEXCEPT_I_noexcept<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_REF(_i,<sp/>_,<sp/>_elem)<sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_REF_I_,<sp/>_elem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_REF_I_ref<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_UNPACK_ref(x)<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_CALLTYPE(_i,<sp/>_,<sp/>_elem)<sp/>\</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_CAT(GMOCK_INTERNAL_DETECT_CALLTYPE_I_,<sp/>_elem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_DETECT_CALLTYPE_I_Calltype<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_UNPACK_Calltype(...)<sp/>__VA_ARGS__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>The<sp/>use<sp/>of<sp/>`identity_t`<sp/>here<sp/>allows<sp/>_Ret<sp/>to<sp/>represent<sp/>return<sp/>types<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>would<sp/>normally<sp/>need<sp/>to<sp/>be<sp/>specified<sp/>in<sp/>a<sp/>different<sp/>way.<sp/>For<sp/>example,<sp/>a<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returning<sp/>a<sp/>function<sp/>pointer<sp/>must<sp/>be<sp/>written<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fn_ptr_return_t<sp/>(*method(method_args_t...))(fn_ptr_args_t...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>But<sp/>we<sp/>only<sp/>support<sp/>placing<sp/>the<sp/>return<sp/>type<sp/>at<sp/>the<sp/>beginning.<sp/>To<sp/>handle<sp/>this,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>wrap<sp/>all<sp/>calls<sp/>in<sp/>identity_t,<sp/>so<sp/>that<sp/>a<sp/>declaration<sp/>will<sp/>be<sp/>expanded<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>identity_t&lt;fn_ptr_return_t<sp/>(*)(fn_ptr_args_t...)&gt;<sp/>method(method_args_t...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>allows<sp/>us<sp/>to<sp/>work<sp/>around<sp/>the<sp/>syntactic<sp/>oddities<sp/>of<sp/>function/method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_SIGNATURE(_Ret,<sp/>_Args)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"><sp/><sp/>::testing::internal::identity_t&lt;GMOCK_PP_IF(GMOCK_PP_IS_BEGIN_PARENS(_Ret),<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_REMOVE_PARENS,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_IDENTITY)(_Ret)&gt;(<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_GET_TYPE,<sp/>_,<sp/>_Args))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_GET_TYPE(_i,<sp/>_,<sp/>_elem)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_COMMA_IF(_i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_IF(GMOCK_PP_IS_BEGIN_PARENS(_elem),<sp/>GMOCK_PP_REMOVE_PARENS,<sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GMOCK_PP_IDENTITY)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"><sp/><sp/>(_elem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_PARAMETER(_i,<sp/>_Signature,<sp/>_)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_COMMA_IF(_i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_ARG_O(_i,<sp/>GMOCK_PP_REMOVE_PARENS(_Signature))<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/>gmock_a##_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_FORWARD_ARG(_i,<sp/>_Signature,<sp/>_)<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_COMMA_IF(_i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"><sp/><sp/>::std::forward&lt;GMOCK_INTERNAL_ARG_O(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>_i,<sp/>GMOCK_PP_REMOVE_PARENS(_Signature))&gt;(gmock_a##_i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MATCHER_PARAMETER(_i,<sp/>_Signature,<sp/>_)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_COMMA_IF(_i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MATCHER_O(_i,<sp/>GMOCK_PP_REMOVE_PARENS(_Signature))<sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/>gmock_a##_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MATCHER_ARGUMENT(_i,<sp/>_1,<sp/>_2)<sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_COMMA_IF(_i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/>gmock_a##_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_A_MATCHER_ARGUMENT(_i,<sp/>_Signature,<sp/>_)<sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"><sp/><sp/>GMOCK_PP_COMMA_IF(_i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor"><sp/><sp/>::testing::A&lt;GMOCK_INTERNAL_ARG_O(_i,<sp/>GMOCK_PP_REMOVE_PARENS(_Signature))&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_ARG_O(_i,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"><sp/><sp/>typename<sp/>::testing::internal::Function&lt;__VA_ARGS__&gt;::template<sp/>Arg&lt;_i&gt;::type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MATCHER_O(_i,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"><sp/><sp/>const<sp/>::testing::Matcher&lt;typename<sp/>::testing::internal::Function&lt;<sp/>\</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__VA_ARGS__&gt;::template<sp/>Arg&lt;_i&gt;::type&gt;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD0(m,<sp/>...)<sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>,<sp/>m,<sp/>0,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD1(m,<sp/>...)<sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>,<sp/>m,<sp/>1,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD2(m,<sp/>...)<sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>,<sp/>m,<sp/>2,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD3(m,<sp/>...)<sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>,<sp/>m,<sp/>3,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD4(m,<sp/>...)<sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>,<sp/>m,<sp/>4,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD5(m,<sp/>...)<sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>,<sp/>m,<sp/>5,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD6(m,<sp/>...)<sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>,<sp/>m,<sp/>6,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD7(m,<sp/>...)<sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>,<sp/>m,<sp/>7,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD8(m,<sp/>...)<sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>,<sp/>m,<sp/>8,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD9(m,<sp/>...)<sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>,<sp/>m,<sp/>9,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD10(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>,<sp/>m,<sp/>10,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD0(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>,<sp/>m,<sp/>0,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD1(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>,<sp/>m,<sp/>1,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD2(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>,<sp/>m,<sp/>2,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD3(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>,<sp/>m,<sp/>3,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD4(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>,<sp/>m,<sp/>4,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD5(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>,<sp/>m,<sp/>5,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD6(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>,<sp/>m,<sp/>6,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD7(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>,<sp/>m,<sp/>7,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD8(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>,<sp/>m,<sp/>8,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD9(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>,<sp/>m,<sp/>9,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD10(m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>,<sp/>m,<sp/>10,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD0_T(m,<sp/>...)<sp/>MOCK_METHOD0(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD1_T(m,<sp/>...)<sp/>MOCK_METHOD1(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD2_T(m,<sp/>...)<sp/>MOCK_METHOD2(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD3_T(m,<sp/>...)<sp/>MOCK_METHOD3(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD4_T(m,<sp/>...)<sp/>MOCK_METHOD4(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD5_T(m,<sp/>...)<sp/>MOCK_METHOD5(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD6_T(m,<sp/>...)<sp/>MOCK_METHOD6(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD7_T(m,<sp/>...)<sp/>MOCK_METHOD7(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD8_T(m,<sp/>...)<sp/>MOCK_METHOD8(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD9_T(m,<sp/>...)<sp/>MOCK_METHOD9(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD10_T(m,<sp/>...)<sp/>MOCK_METHOD10(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD0_T(m,<sp/>...)<sp/>MOCK_CONST_METHOD0(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD1_T(m,<sp/>...)<sp/>MOCK_CONST_METHOD1(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD2_T(m,<sp/>...)<sp/>MOCK_CONST_METHOD2(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD3_T(m,<sp/>...)<sp/>MOCK_CONST_METHOD3(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD4_T(m,<sp/>...)<sp/>MOCK_CONST_METHOD4(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD5_T(m,<sp/>...)<sp/>MOCK_CONST_METHOD5(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD6_T(m,<sp/>...)<sp/>MOCK_CONST_METHOD6(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD7_T(m,<sp/>...)<sp/>MOCK_CONST_METHOD7(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD8_T(m,<sp/>...)<sp/>MOCK_CONST_METHOD8(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD9_T(m,<sp/>...)<sp/>MOCK_CONST_METHOD9(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD10_T(m,<sp/>...)<sp/>MOCK_CONST_METHOD10(m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD0_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>ct,<sp/>m,<sp/>0,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD1_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>ct,<sp/>m,<sp/>1,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD2_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>ct,<sp/>m,<sp/>2,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD3_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>ct,<sp/>m,<sp/>3,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD4_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>ct,<sp/>m,<sp/>4,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD5_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>ct,<sp/>m,<sp/>5,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD6_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>ct,<sp/>m,<sp/>6,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD7_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>ct,<sp/>m,<sp/>7,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD8_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>ct,<sp/>m,<sp/>8,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD9_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>ct,<sp/>m,<sp/>9,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD10_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(,<sp/>ct,<sp/>m,<sp/>10,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD0_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>ct,<sp/>m,<sp/>0,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD1_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>ct,<sp/>m,<sp/>1,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD2_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>ct,<sp/>m,<sp/>2,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD3_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>ct,<sp/>m,<sp/>3,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD4_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>ct,<sp/>m,<sp/>4,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD5_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>ct,<sp/>m,<sp/>5,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD6_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>ct,<sp/>m,<sp/>6,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD7_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>ct,<sp/>m,<sp/>7,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD8_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>ct,<sp/>m,<sp/>8,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD9_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>ct,<sp/>m,<sp/>9,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD10_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHODN(const,<sp/>ct,<sp/>m,<sp/>10,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD0_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"><sp/><sp/>MOCK_METHOD0_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD1_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"><sp/><sp/>MOCK_METHOD1_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD2_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor"><sp/><sp/>MOCK_METHOD2_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD3_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"><sp/><sp/>MOCK_METHOD3_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD4_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"><sp/><sp/>MOCK_METHOD4_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD5_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"><sp/><sp/>MOCK_METHOD5_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD6_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"><sp/><sp/>MOCK_METHOD6_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD7_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"><sp/><sp/>MOCK_METHOD7_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD8_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"><sp/><sp/>MOCK_METHOD8_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD9_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"><sp/><sp/>MOCK_METHOD9_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_METHOD10_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"><sp/><sp/>MOCK_METHOD10_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD0_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="486"><highlight class="preprocessor"><sp/><sp/>MOCK_CONST_METHOD0_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD1_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"><sp/><sp/>MOCK_CONST_METHOD1_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD2_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"><sp/><sp/>MOCK_CONST_METHOD2_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD3_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"><sp/><sp/>MOCK_CONST_METHOD3_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD4_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="494"><highlight class="preprocessor"><sp/><sp/>MOCK_CONST_METHOD4_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD5_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="496"><highlight class="preprocessor"><sp/><sp/>MOCK_CONST_METHOD5_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD6_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="498"><highlight class="preprocessor"><sp/><sp/>MOCK_CONST_METHOD6_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD7_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"><sp/><sp/>MOCK_CONST_METHOD7_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD8_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="502"><highlight class="preprocessor"><sp/><sp/>MOCK_CONST_METHOD8_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD9_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/>MOCK_CONST_METHOD9_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOCK_CONST_METHOD10_T_WITH_CALLTYPE(ct,<sp/>m,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="506"><highlight class="preprocessor"><sp/><sp/>MOCK_CONST_METHOD10_WITH_CALLTYPE(ct,<sp/>m,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_INTERNAL_MOCK_METHODN(constness,<sp/>ct,<sp/>Method,<sp/>args_num,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>args_num,<sp/>::testing::internal::identity_t&lt;__VA_ARGS__&gt;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"><sp/><sp/>GMOCK_INTERNAL_MOCK_METHOD_IMPL(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>args_num,<sp/>Method,<sp/>GMOCK_PP_NARG0(constness),<sp/>0,<sp/>0,<sp/>,<sp/>ct,<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>(::testing::internal::identity_t&lt;__VA_ARGS__&gt;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GMOCK_MOCKER_(arity,<sp/>constness,<sp/>Method)<sp/>\</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"><sp/><sp/>GTEST_CONCAT_TOKEN_(gmock##constness##arity##_##Method##_,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_FUNCTION_MOCKER_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h"/>
  </compounddef>
</doxygen>
