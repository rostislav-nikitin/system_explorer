<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespacetesting_1_1gmock__function__mocker__test" kind="namespace" language="C++">
    <compoundname>testing::gmock_function_mocker_test</compoundname>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1AlternateCallable" prot="public">testing::gmock_function_mocker_test::AlternateCallable</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1ExpectCallTest" prot="public">testing::gmock_function_mocker_test::ExpectCallTest</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface" prot="public">testing::gmock_function_mocker_test::FooInterface</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" prot="public">testing::gmock_function_mocker_test::FunctionMockerTest</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockB" prot="public">testing::gmock_function_mocker_test::LegacyMockB</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo" prot="public">testing::gmock_function_mocker_test::LegacyMockFoo</innerclass>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1LegacyMockMethodSizes0" prot="public">testing::gmock_function_mocker_test::LegacyMockMethodSizes0</innerclass>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1LegacyMockMethodSizes1" prot="public">testing::gmock_function_mocker_test::LegacyMockMethodSizes1</innerclass>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1LegacyMockMethodSizes2" prot="public">testing::gmock_function_mocker_test::LegacyMockMethodSizes2</innerclass>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1LegacyMockMethodSizes3" prot="public">testing::gmock_function_mocker_test::LegacyMockMethodSizes3</innerclass>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1LegacyMockMethodSizes4" prot="public">testing::gmock_function_mocker_test::LegacyMockMethodSizes4</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockOverloadedOnArgNumber" prot="public">testing::gmock_function_mocker_test::LegacyMockOverloadedOnArgNumber</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack" prot="public">testing::gmock_function_mocker_test::LegacyMockStack</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1MockB" prot="public">testing::gmock_function_mocker_test::MockB</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1MockFoo" prot="public">testing::gmock_function_mocker_test::MockFoo</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1MockMethodMockFunctionSignatureTest" prot="public">testing::gmock_function_mocker_test::MockMethodMockFunctionSignatureTest</innerclass>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1MockMethodNoexceptSpecifier" prot="public">testing::gmock_function_mocker_test::MockMethodNoexceptSpecifier</innerclass>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1MockMethodSizes0" prot="public">testing::gmock_function_mocker_test::MockMethodSizes0</innerclass>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1MockMethodSizes1" prot="public">testing::gmock_function_mocker_test::MockMethodSizes1</innerclass>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1MockMethodSizes2" prot="public">testing::gmock_function_mocker_test::MockMethodSizes2</innerclass>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1MockMethodSizes3" prot="public">testing::gmock_function_mocker_test::MockMethodSizes3</innerclass>
    <innerclass refid="structtesting_1_1gmock__function__mocker__test_1_1MockMethodSizes4" prot="public">testing::gmock_function_mocker_test::MockMethodSizes4</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1MockOverloadedOnArgNumber" prot="public">testing::gmock_function_mocker_test::MockOverloadedOnArgNumber</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1MockOverloadedOnConstness" prot="public">testing::gmock_function_mocker_test::MockOverloadedOnConstness</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack" prot="public">testing::gmock_function_mocker_test::MockStack</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1OverloadedMockMethodTest" prot="public">testing::gmock_function_mocker_test::OverloadedMockMethodTest</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface" prot="public">testing::gmock_function_mocker_test::StackInterface</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1TemplatedCopyable" prot="public">testing::gmock_function_mocker_test::TemplatedCopyable</innerclass>
    <innerclass refid="classtesting_1_1gmock__function__mocker__test_1_1TemplateMockTest" prot="public">testing::gmock_function_mocker_test::TemplateMockTest</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gmock-function-mocker__test_8cc_1ad17f6a5a2222869c234b40803f17e58b" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">::testing::Types</ref>&lt; <ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockFoo" kindref="compound">MockFoo</ref>, <ref refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo" kindref="compound">LegacyMockFoo</ref> &gt;</type>
        <definition>using testing::gmock_function_mocker_test::FunctionMockerTestTypes = typedef ::testing::Types&lt;MockFoo, LegacyMockFoo&gt;</definition>
        <argsstring></argsstring>
        <name>FunctionMockerTestTypes</name>
        <qualifiedname>testing::gmock_function_mocker_test::FunctionMockerTestTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="292" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gmock-function-mocker__test_8cc_1a886dda7934352a6461a07f1fc8f42e81" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">::testing::Types</ref>&lt; <ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockB" kindref="compound">MockB</ref>, <ref refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockB" kindref="compound">LegacyMockB</ref> &gt;</type>
        <definition>using testing::gmock_function_mocker_test::ExpectCallTestTypes = typedef ::testing::Types&lt;MockB, LegacyMockB&gt;</definition>
        <argsstring></argsstring>
        <name>ExpectCallTestTypes</name>
        <qualifiedname>testing::gmock_function_mocker_test::ExpectCallTestTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="512" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gmock-function-mocker__test_8cc_1ac5dc66b619dbd31e2d3e595c6ca501ea" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">::testing::Types</ref>&lt; <ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack" kindref="compound">MockStack</ref>&lt; int &gt;, <ref refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack" kindref="compound">LegacyMockStack</ref>&lt; int &gt; &gt;</type>
        <definition>using testing::gmock_function_mocker_test::TemplateMockTestTypes = typedef ::testing::Types&lt;MockStack&lt;int&gt;, LegacyMockStack&lt;int&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>TemplateMockTestTypes</name>
        <qualifiedname>testing::gmock_function_mocker_test::TemplateMockTestTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="587" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gmock-function-mocker__test_8cc_1a7087aa88a378585d28a75f1ee4eba7e1" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">::testing::Types</ref>&lt; <ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockOverloadedOnArgNumber" kindref="compound">MockOverloadedOnArgNumber</ref>, <ref refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockOverloadedOnArgNumber" kindref="compound">LegacyMockOverloadedOnArgNumber</ref> &gt;</type>
        <definition>using testing::gmock_function_mocker_test::OverloadedMockMethodTestTypes = typedef ::testing::Types&lt;MockOverloadedOnArgNumber, LegacyMockOverloadedOnArgNumber&gt;</definition>
        <argsstring></argsstring>
        <name>OverloadedMockMethodTestTypes</name>
        <qualifiedname>testing::gmock_function_mocker_test::OverloadedMockMethodTestTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="739" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="741" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gmock-function-mocker__test_8cc_1a6df999dd0471a80b5238904293febf6a" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">Types</ref>&lt; void(), int(), void(int), int(int), int(bool, int), int(bool, char, int, int, int, int, int, char, int, bool)&gt;</type>
        <definition>using testing::gmock_function_mocker_test::MockMethodMockFunctionSignatureTypes = typedef Types&lt;void(), int(), void(int), int(int), int(bool, int), int(bool, char, int, int, int, int, int, char, int, bool)&gt;</definition>
        <argsstring></argsstring>
        <name>MockMethodMockFunctionSignatureTypes</name>
        <qualifiedname>testing::gmock_function_mocker_test::MockMethodMockFunctionSignatureTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="860" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="862" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a968d1cea0aa94b59ec820c15a3d63632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST_SUITE</definition>
        <argsstring>(FunctionMockerTest, FunctionMockerTestTypes)</argsstring>
        <name>TYPED_TEST_SUITE</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST_SUITE</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">FunctionMockerTestTypes</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="293" column="1" declfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" declline="293" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a6fe02efcce5588cd25a7646209667498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksVoidFunction)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksVoidFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="296" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="296" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1ad69bbcda1a9826d1b75516102ea99ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksNullaryFunction)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksNullaryFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="302" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="302" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a6b1084ba6237db69943d4d2ae77a0dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksUnaryFunction)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksUnaryFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="312" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="312" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a18beb33907dc243b50c11b5ca77df3ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksBinaryFunction)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksBinaryFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="320" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="320" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a5dc0b2d87c021671e7fc2af7cdd84c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksDecimalFunction)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksDecimalFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="327" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="327" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a03ec5f67841c3d8e7c2007ca7172eb2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksFunctionWithNonConstReferenceArgument)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksFunctionWithNonConstReferenceArgument</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="336" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="336" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1aef11b922e71a390cebc78ff2d8e846d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksFunctionWithConstReferenceArgument)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksFunctionWithConstReferenceArgument</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="345" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="345" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a98699051ed390b45a9e94af51e04e44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksFunctionWithConstArgument)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksFunctionWithConstArgument</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="354" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="354" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a0ed9e52f298996054a27b856fcef1aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksFunctionsOverloadedOnArgumentNumber)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksFunctionsOverloadedOnArgumentNumber</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="361" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="361" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a2edd6960a6381be64c5a887f0cdc2b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksFunctionsOverloadedOnArgumentType)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksFunctionsOverloadedOnArgumentType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="372" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="372" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1ac720571a053f22f81fc5f92d6ff13adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksFunctionsOverloadedOnConstnessOfThis)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksFunctionsOverloadedOnConstnessOfThis</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="383" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="383" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a335e8a2a915d3e74dbe1805461a38e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksReturnTypeWithComma)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksReturnTypeWithComma</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="392" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="392" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1ac831b521498e2ee5be04813b20b49301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(FunctionMockerTest, MocksTypeWithTemplatedCopyCtor)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>MocksTypeWithTemplatedCopyCtor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="401" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="401" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a1ff0f9473a359b8c19d416f2003a78b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(FunctionMockerTest, RefQualified)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1FunctionMockerTest" kindref="compound">FunctionMockerTest</ref></type>
        </param>
        <param>
          <type>RefQualified</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="454" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="454" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1aef6ab413252225cfffcc3fba46a3f6e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST_SUITE</definition>
        <argsstring>(ExpectCallTest, ExpectCallTestTypes)</argsstring>
        <name>TYPED_TEST_SUITE</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST_SUITE</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1ExpectCallTest" kindref="compound">ExpectCallTest</ref></type>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">ExpectCallTestTypes</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="513" column="1" declfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" declline="513" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a8de1b3fa4fa56304c17d80589d9d9f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(ExpectCallTest, UnmentionedFunctionCanBeCalledAnyNumberOfTimes)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1ExpectCallTest" kindref="compound">ExpectCallTest</ref></type>
        </param>
        <param>
          <type>UnmentionedFunctionCanBeCalledAnyNumberOfTimes</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="517" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="517" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1afd3ddc537dd1d500f55c7f3d38852f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST_SUITE</definition>
        <argsstring>(TemplateMockTest, TemplateMockTestTypes)</argsstring>
        <name>TYPED_TEST_SUITE</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST_SUITE</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1TemplateMockTest" kindref="compound">TemplateMockTest</ref></type>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">TemplateMockTestTypes</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="589" column="1" declfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" declline="589" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a4bf7e84533bd28edba4e421f20d28d0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(TemplateMockTest, Works)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1TemplateMockTest" kindref="compound">TemplateMockTest</ref></type>
        </param>
        <param>
          <type>Works</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="592" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="592" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1af5b72831b20f0069a5a2681f2ca6dcc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(TemplateMockTest, MethodWithCommaInReturnTypeWorks)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1TemplateMockTest" kindref="compound">TemplateMockTest</ref></type>
        </param>
        <param>
          <type>MethodWithCommaInReturnTypeWorks</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="612" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="612" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1af3208f8efbe4326347fdf5a14ee8d2b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST_SUITE</definition>
        <argsstring>(OverloadedMockMethodTest, OverloadedMockMethodTestTypes)</argsstring>
        <name>TYPED_TEST_SUITE</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST_SUITE</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1OverloadedMockMethodTest" kindref="compound">OverloadedMockMethodTest</ref></type>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">OverloadedMockMethodTestTypes</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="742" column="1" declfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" declline="742" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a24f9f51692af5618d88d2c30f3b4e1bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(OverloadedMockMethodTest, CanOverloadOnArgNumberInMacroBody)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1OverloadedMockMethodTest" kindref="compound">OverloadedMockMethodTest</ref></type>
        </param>
        <param>
          <type>CanOverloadOnArgNumberInMacroBody</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="744" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="744" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1ad88b0b208d03f3e5dee3a164ce33e39c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodOverloadedMockMethodTest, CanOverloadOnConstnessInMacroBody)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodOverloadedMockMethodTest</type>
        </param>
        <param>
          <type>CanOverloadOnConstnessInMacroBody</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="771" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="771" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1ad889805da4cce67f2206590b750b27a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodMockFunctionTest, WorksForVoidNullary)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodMockFunctionTest</type>
        </param>
        <param>
          <type>WorksForVoidNullary</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="781" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="781" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1ae2b01f0da84371fde518da4066b6a172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodMockFunctionTest, WorksForNonVoidNullary)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodMockFunctionTest</type>
        </param>
        <param>
          <type>WorksForNonVoidNullary</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="787" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="787" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a2f1e932fb15621747f47d617efbe395e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodMockFunctionTest, WorksForVoidUnary)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodMockFunctionTest</type>
        </param>
        <param>
          <type>WorksForVoidUnary</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="794" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="794" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a31ed39f17667619d800693a7eb90682e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodMockFunctionTest, WorksForNonVoidBinary)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodMockFunctionTest</type>
        </param>
        <param>
          <type>WorksForNonVoidBinary</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="800" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="800" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a3396573237c21c4c397152bcfbb3beff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodMockFunctionTest, WorksFor10Arguments)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodMockFunctionTest</type>
        </param>
        <param>
          <type>WorksFor10Arguments</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="809" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="809" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1aa50eb1403be35a710eb62edf606ee2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodMockFunctionTest, AsStdFunction)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodMockFunctionTest</type>
        </param>
        <param>
          <type>AsStdFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="820" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="820" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1adc6133bd5a20d1a4690f626d09619cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodMockFunctionTest, AsStdFunctionReturnsReference)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodMockFunctionTest</type>
        </param>
        <param>
          <type>AsStdFunctionReturnsReference</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="829" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="829" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1af727b49c865283e3ef0209fac721cfd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodMockFunctionTest, AsStdFunctionWithReferenceParameter)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodMockFunctionTest</type>
        </param>
        <param>
          <type>AsStdFunctionWithReferenceParameter</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="839" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="839" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a42d6f78592eeda3f445ee31b87060bb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST_SUITE</definition>
        <argsstring>(MockMethodMockFunctionSignatureTest, MockMethodMockFunctionSignatureTypes)</argsstring>
        <name>TYPED_TEST_SUITE</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST_SUITE</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockMethodMockFunctionSignatureTest" kindref="compound">MockMethodMockFunctionSignatureTest</ref></type>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">MockMethodMockFunctionSignatureTypes</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="863" column="1" declfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" declline="863" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a88c4e5e48fe235ac3087beb88435133b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(MockMethodMockFunctionSignatureTest, IsMockFunctionTemplateArgumentDeducedForRawSignature)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockMethodMockFunctionSignatureTest" kindref="compound">MockMethodMockFunctionSignatureTest</ref></type>
        </param>
        <param>
          <type>IsMockFunctionTemplateArgumentDeducedForRawSignature</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="866" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="866" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a94319a6a5631c1563c9afe0c4d236c5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(MockMethodMockFunctionSignatureTest, IsMockFunctionTemplateArgumentDeducedForStdFunction)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockMethodMockFunctionSignatureTest" kindref="compound">MockMethodMockFunctionSignatureTest</ref></type>
        </param>
        <param>
          <type>IsMockFunctionTemplateArgumentDeducedForStdFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="873" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="873" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a28f804de83e366846db834d671ad6f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(MockMethodMockFunctionSignatureTest, IsMockFunctionCallMethodSignatureTheSameForRawSignatureAndStdFunction)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockMethodMockFunctionSignatureTest" kindref="compound">MockMethodMockFunctionSignatureTest</ref></type>
        </param>
        <param>
          <type>IsMockFunctionCallMethodSignatureTheSameForRawSignatureAndStdFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="880" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="880" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a9184b1008e4fdfa91b2cc38b898ad655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(MockMethodMockFunctionSignatureTest, IsMockFunctionTemplateArgumentDeducedForAlternateCallable)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockMethodMockFunctionSignatureTest" kindref="compound">MockMethodMockFunctionSignatureTest</ref></type>
        </param>
        <param>
          <type>IsMockFunctionTemplateArgumentDeducedForAlternateCallable</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="892" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="892" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a0a6f7ec68608c5d247f40cc420cc766c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TYPED_TEST</definition>
        <argsstring>(MockMethodMockFunctionSignatureTest, IsMockFunctionCallMethodSignatureTheSameForAlternateCallable)</argsstring>
        <name>TYPED_TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TYPED_TEST</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockMethodMockFunctionSignatureTest" kindref="compound">MockMethodMockFunctionSignatureTest</ref></type>
        </param>
        <param>
          <type>IsMockFunctionCallMethodSignatureTheSameForAlternateCallable</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="899" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="899" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a5c28161d4686a85b0e5bf4a1f2b961f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodMockFunctionTest, MockMethodSizeOverhead)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodMockFunctionTest</type>
        </param>
        <param>
          <type>MockMethodSizeOverhead</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="939" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="939" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a0f2c77c7f3e0b7d300c9792572c22d53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodMockFunctionTest, EnsureNoUnusedMemberFunction)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodMockFunctionTest</type>
        </param>
        <param>
          <type>EnsureNoUnusedMemberFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="953" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="953" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a17c41f11272dd3cba2213b4c6511743e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::gmock_function_mocker_test::hasTwoParams</definition>
        <argsstring>(int, int)</argsstring>
        <name>hasTwoParams</name>
        <qualifiedname>testing::gmock_function_mocker_test::hasTwoParams</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="968" column="6" declfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" declline="968" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1ae968f77d989c5dac82cec4ea5f481054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::gmock_function_mocker_test::MaybeThrows</definition>
        <argsstring>()</argsstring>
        <name>MaybeThrows</name>
        <qualifiedname>testing::gmock_function_mocker_test::MaybeThrows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="969" column="6" declfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" declline="969" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a2546265f3db7b8a7eac4dd5600eb41a7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::gmock_function_mocker_test::DoesntThrow</definition>
        <argsstring>() noexcept</argsstring>
        <name>DoesntThrow</name>
        <qualifiedname>testing::gmock_function_mocker_test::DoesntThrow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="970" column="6" declfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" declline="970" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="gmock-function-mocker__test_8cc_1a5d926481e1aade4e5cc17fbc59d1776e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::TEST</definition>
        <argsstring>(MockMethodMockFunctionTest, NoexceptSpecifierPreserved)</argsstring>
        <name>TEST</name>
        <qualifiedname>testing::gmock_function_mocker_test::TEST</qualifiedname>
        <param>
          <type>MockMethodMockFunctionTest</type>
        </param>
        <param>
          <type>NoexceptSpecifierPreserved</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="983" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="983" bodyend="993"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="54" column="1"/>
  </compounddef>
</doxygen>
