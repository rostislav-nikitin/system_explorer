<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4" kind="class" language="C++" prot="private">
    <compoundname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</compoundname>
    <basecompoundref refid="classtesting_1_1internal_1_1ParamIteratorInterface" prot="public" virt="non-virtual">testing::internal::ParamIteratorInterface&lt; ParamType &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>size_t...</type>
        <declname>I</declname>
        <defname>I</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1ae434c3fd6b3fc5055960563a6d550376" prot="private" static="no" mutable="no">
        <type>const <ref refid="classtesting_1_1internal_1_1ParamGeneratorInterface" kindref="compound">ParamGeneratorInterface</ref>&lt; ParamType &gt; *const</type>
        <definition>const ParamGeneratorInterface&lt;ParamType&gt;* const testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::base_</definition>
        <argsstring></argsstring>
        <name>base_</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::base_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="925" column="41" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="925" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1aae7fbddbf01df185226712ee2a38d410" prot="private" static="no" mutable="no">
        <type>std::tuple&lt; typename <ref refid="classtesting_1_1internal_1_1ParamGenerator" kindref="compound">ParamGenerator</ref>&lt; T &gt;::iterator... &gt;</type>
        <definition>std::tuple&lt;typename ParamGenerator&lt;T&gt;::iterator...&gt; testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::begin_</definition>
        <argsstring></argsstring>
        <name>begin_</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::begin_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="926" column="17" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="926" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1aae9ccfd177834224412f9ac194bd8b68" prot="private" static="no" mutable="no">
        <type>std::tuple&lt; typename <ref refid="classtesting_1_1internal_1_1ParamGenerator" kindref="compound">ParamGenerator</ref>&lt; T &gt;::iterator... &gt;</type>
        <definition>std::tuple&lt;typename ParamGenerator&lt;T&gt;::iterator...&gt; testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::end_</definition>
        <argsstring></argsstring>
        <name>end_</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::end_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="927" column="17" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="927" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a0678508a97f8b218fb5af11915678abf" prot="private" static="no" mutable="no">
        <type>std::tuple&lt; typename <ref refid="classtesting_1_1internal_1_1ParamGenerator" kindref="compound">ParamGenerator</ref>&lt; T &gt;::iterator... &gt;</type>
        <definition>std::tuple&lt;typename ParamGenerator&lt;T&gt;::iterator...&gt; testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::current_</definition>
        <argsstring></argsstring>
        <name>current_</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::current_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="928" column="17" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="928" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1ab7ce5ae5ae5dbdcca97e1824d77736b0" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; ParamType &gt;</type>
        <definition>std::shared_ptr&lt;ParamType&gt; testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::current_value_</definition>
        <argsstring></argsstring>
        <name>current_value_</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::current_value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="929" column="21" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="929" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a3c28d20b4527f146a97c5490326f869f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::IteratorImpl</definition>
        <argsstring>(const ParamGeneratorInterface&lt; ParamType &gt; *base, const std::tuple&lt; ParamGenerator&lt; T &gt;... &gt; &amp;generators, bool is_end)</argsstring>
        <name>IteratorImpl</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::IteratorImpl</qualifiedname>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1ParamGeneratorInterface" kindref="compound">ParamGeneratorInterface</ref>&lt; ParamType &gt; *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const std::tuple&lt; <ref refid="classtesting_1_1internal_1_1ParamGenerator" kindref="compound">ParamGenerator</ref>&lt; T &gt;... &gt; &amp;</type>
          <declname>generators</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="844" column="5" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="844" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1aa2546154cdf52ae754561593791fcbe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::~IteratorImpl</definition>
        <argsstring>() override=default</argsstring>
        <name>~IteratorImpl</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::~IteratorImpl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="853" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a0262bcb7fabcc60246163af93b7b95e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1internal_1_1ParamGeneratorInterface" kindref="compound">ParamGeneratorInterface</ref>&lt; ParamType &gt; *</type>
        <definition>const ParamGeneratorInterface&lt; ParamType &gt; * testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::BaseGenerator</definition>
        <argsstring>() const override</argsstring>
        <name>BaseGenerator</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::BaseGenerator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="855" column="35" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="855" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a167e8b38118c8635d5849daf924a517b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::Advance</definition>
        <argsstring>() override</argsstring>
        <name>Advance</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::Advance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="860" column="10" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="860" bodyend="867"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a5dac073f403a3350863662c344c3d513" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1ParamIteratorInterface" kindref="compound">ParamIteratorInterface</ref>&lt; ParamType &gt; *</type>
        <definition>ParamIteratorInterface&lt; ParamType &gt; * testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::Clone</definition>
        <argsstring>() const override</argsstring>
        <name>Clone</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::Clone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="868" column="28" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="868" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1ab815499ef3d11196724a36e905e085f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ParamType *</type>
        <definition>const ParamType * testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::Current</definition>
        <argsstring>() const override</argsstring>
        <name>Current</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::Current</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="872" column="21" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="872" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a7ba6129ccd025c1cb0e00fe71b8c8489" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::Equals</definition>
        <argsstring>(const ParamIteratorInterface&lt; ParamType &gt; &amp;other) const override</argsstring>
        <name>Equals</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::Equals</qualifiedname>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1ParamIteratorInterface" kindref="compound">ParamIteratorInterface</ref>&lt; ParamType &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="874" column="10" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="874" bodyend="894"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a6a5fd8b4a0cd8e27c0ca1fbbfee4f997" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>ThisI</declname>
            <defname>ThisI</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::AdvanceIfEnd</definition>
        <argsstring>()</argsstring>
        <name>AdvanceIfEnd</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::AdvanceIfEnd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="898" column="10" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="898" bodyend="911"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a0e6c088fed9a27254a657755d05bdcae" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::ComputeCurrentValue</definition>
        <argsstring>()</argsstring>
        <name>ComputeCurrentValue</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::ComputeCurrentValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="913" column="10" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="913" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1abdf53ad1a435b992d399210178b35b70" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::AtEnd</definition>
        <argsstring>() const</argsstring>
        <name>AtEnd</name>
        <qualifiedname>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;::AtEnd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="917" column="10" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="917" bodyend="923"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>testing::internal::ParamIteratorInterface&lt; ParamType &gt;</label>
        <link refid="classtesting_1_1internal_1_1ParamIteratorInterface"/>
      </node>
      <node id="1">
        <label>testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>testing::internal::ParamIteratorInterface&lt; ParamType &gt;</label>
        <link refid="classtesting_1_1internal_1_1ParamIteratorInterface"/>
      </node>
      <node id="1">
        <label>testing::internal::CartesianProductGenerator&lt; T &gt;::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="841" column="3" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="842" bodyend="930"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a167e8b38118c8635d5849daf924a517b" prot="public" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>Advance</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a6a5fd8b4a0cd8e27c0ca1fbbfee4f997" prot="private" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>AdvanceIfEnd</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1abdf53ad1a435b992d399210178b35b70" prot="private" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>AtEnd</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1ae434c3fd6b3fc5055960563a6d550376" prot="private" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>base_</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a0262bcb7fabcc60246163af93b7b95e4" prot="public" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>BaseGenerator</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1aae7fbddbf01df185226712ee2a38d410" prot="private" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>begin_</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a5dac073f403a3350863662c344c3d513" prot="public" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>Clone</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a0e6c088fed9a27254a657755d05bdcae" prot="private" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>ComputeCurrentValue</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1ab815499ef3d11196724a36e905e085f5" prot="public" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>Current</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a0678508a97f8b218fb5af11915678abf" prot="private" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>current_</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1ab7ce5ae5ae5dbdcca97e1824d77736b0" prot="private" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>current_value_</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1aae9ccfd177834224412f9ac194bd8b68" prot="private" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>end_</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a7ba6129ccd025c1cb0e00fe71b8c8489" prot="public" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>Equals</name></member>
      <member refid="classtesting_1_1internal_1_1ParamIteratorInterface_1a9d811697a752d46f7bd6a0082f9040a3" prot="public" virt="pure-virtual" ambiguityscope="ParamIteratorInterface&lt; ParamType &gt;::"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>Equals</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1a3c28d20b4527f146a97c5490326f869f" prot="public" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>IteratorImpl</name></member>
      <member refid="classtesting_1_1internal_1_1CartesianProductGenerator_1_1IteratorImpl_3_01IndexSequence_3_01I_8_8_8_01_4_01_4_1aa2546154cdf52ae754561593791fcbe3" prot="public" virt="non-virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>~IteratorImpl</name></member>
      <member refid="classtesting_1_1internal_1_1ParamIteratorInterface_1a98ef3f0e51b409e0f2e1aec237a7f5bf" prot="public" virt="virtual"><scope>testing::internal::CartesianProductGenerator::IteratorImpl&lt; IndexSequence&lt; I... &gt; &gt;</scope><name>~ParamIteratorInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
