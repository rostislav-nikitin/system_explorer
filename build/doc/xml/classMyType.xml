<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classMyType" kind="class" language="C++" prot="public">
    <compoundname>MyType</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMyType_1ae294bc35031fef7015a1b135deeedd22" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string MyType::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>MyType::value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="76" column="15" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMyType_1a74d6f29a06e298321a6e5f0b91b020e7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MyType::MyType</definition>
        <argsstring>(const std::string &amp;a_value)</argsstring>
        <name>MyType</name>
        <qualifiedname>MyType::MyType</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>a_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="71" column="12" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classMyType_1a600b7657befc876c991d50b6b72f90e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; MyType::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <qualifiedname>MyType::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="73" column="21" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="73" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="69" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="69" bodyend="77"/>
    <listofallmembers>
      <member refid="classMyType_1a74d6f29a06e298321a6e5f0b91b020e7" prot="public" virt="non-virtual"><scope>MyType</scope><name>MyType</name></member>
      <member refid="classMyType_1a600b7657befc876c991d50b6b72f90e0" prot="public" virt="non-virtual"><scope>MyType</scope><name>value</name></member>
      <member refid="classMyType_1ae294bc35031fef7015a1b135deeedd22" prot="private" virt="non-virtual"><scope>MyType</scope><name>value_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
