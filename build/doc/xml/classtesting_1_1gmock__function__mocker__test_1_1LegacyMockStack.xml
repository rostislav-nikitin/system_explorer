<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack" kind="class" language="C++" prot="public">
    <compoundname>testing::gmock_function_mocker_test::LegacyMockStack</compoundname>
    <basecompoundref refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface" prot="public" virt="non-virtual">testing::gmock_function_mocker_test::StackInterface&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1ac748877b0ff1f3cf84f154192f0b7404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::LegacyMockStack&lt; T &gt;::LegacyMockStack</definition>
        <argsstring>()=default</argsstring>
        <name>LegacyMockStack</name>
        <qualifiedname>testing::gmock_function_mocker_test::LegacyMockStack::LegacyMockStack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="569" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a73aa854e9ff4381accbbe027c5f97031" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::LegacyMockStack&lt; T &gt;::MOCK_METHOD1_T</definition>
        <argsstring>(Push, void(const T &amp;elem))</argsstring>
        <name>MOCK_METHOD1_T</name>
        <qualifiedname>testing::gmock_function_mocker_test::LegacyMockStack::MOCK_METHOD1_T</qualifiedname>
        <param>
          <type>Push</type>
        </param>
        <param>
          <type>void(const T &amp;elem)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="571" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1ae787e4fd1cdc074b43414529d0ed8d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::LegacyMockStack&lt; T &gt;::MOCK_METHOD0_T</definition>
        <argsstring>(Pop, void())</argsstring>
        <name>MOCK_METHOD0_T</name>
        <qualifiedname>testing::gmock_function_mocker_test::LegacyMockStack::MOCK_METHOD0_T</qualifiedname>
        <param>
          <type>Pop</type>
        </param>
        <param>
          <type>void()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="572" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1ac53ce7a7345f2f1a1a7510243ad5e9f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::LegacyMockStack&lt; T &gt;::MOCK_CONST_METHOD0_T</definition>
        <argsstring>(GetSize, int())</argsstring>
        <name>MOCK_CONST_METHOD0_T</name>
        <qualifiedname>testing::gmock_function_mocker_test::LegacyMockStack::MOCK_CONST_METHOD0_T</qualifiedname>
        <param>
          <type>GetSize</type>
        </param>
        <param>
          <type>int()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="573" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a7f11af583eafe9029fedbd82c76c848e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::LegacyMockStack&lt; T &gt;::MOCK_CONST_METHOD0_T</definition>
        <argsstring>(GetTop, const T &amp;())</argsstring>
        <name>MOCK_CONST_METHOD0_T</name>
        <qualifiedname>testing::gmock_function_mocker_test::LegacyMockStack::MOCK_CONST_METHOD0_T</qualifiedname>
        <param>
          <type>GetTop</type>
        </param>
        <param>
          <type>const T &amp;</type>
          <array>()</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="574" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a74246e67ad7ce096398908b4ac3bd980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::LegacyMockStack&lt; T &gt;::MOCK_METHOD0_T</definition>
        <argsstring>(ReturnTypeWithComma, std::map&lt; int, int &gt;())</argsstring>
        <name>MOCK_METHOD0_T</name>
        <qualifiedname>testing::gmock_function_mocker_test::LegacyMockStack::MOCK_METHOD0_T</qualifiedname>
        <param>
          <type>ReturnTypeWithComma</type>
        </param>
        <param>
          <type>std::map&lt; int, int &gt;</type>
          <array>()</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="577" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a369a6187b056292e185ba88622000e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::LegacyMockStack&lt; T &gt;::MOCK_CONST_METHOD1_T</definition>
        <argsstring>(ReturnTypeWithComma, std::map&lt; int, int &gt;(int))</argsstring>
        <name>MOCK_CONST_METHOD1_T</name>
        <qualifiedname>testing::gmock_function_mocker_test::LegacyMockStack::MOCK_CONST_METHOD1_T</qualifiedname>
        <param>
          <type>ReturnTypeWithComma</type>
        </param>
        <param>
          <type>std::map&lt; int, int &gt;</type>
          <array>int</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="578" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a31521641f1056e194df52fcb6d2fcd65" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::LegacyMockStack&lt; T &gt;::LegacyMockStack</definition>
        <argsstring>(const LegacyMockStack &amp;)=delete</argsstring>
        <name>LegacyMockStack</name>
        <qualifiedname>testing::gmock_function_mocker_test::LegacyMockStack::LegacyMockStack</qualifiedname>
        <param>
          <type>const <ref refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack" kindref="compound">LegacyMockStack</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="581" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a37aee4ea452346d6208e47a1d1999539" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack" kindref="compound">LegacyMockStack</ref> &amp;</type>
        <definition>LegacyMockStack &amp; testing::gmock_function_mocker_test::LegacyMockStack&lt; T &gt;::operator=</definition>
        <argsstring>(const LegacyMockStack &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>testing::gmock_function_mocker_test::LegacyMockStack::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack" kindref="compound">LegacyMockStack</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="582" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>testing::gmock_function_mocker_test::LegacyMockStack&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>testing::gmock_function_mocker_test::StackInterface&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>testing::gmock_function_mocker_test::LegacyMockStack&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>testing::gmock_function_mocker_test::StackInterface&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface"/>
      </node>
    </collaborationgraph>
    <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="567" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="567" bodyend="583"/>
    <listofallmembers>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface_1a09def067a391dbb6a35d5b52e616774c" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>GetSize</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface_1a3bf357599b1516e93fbded41ee8e9eb4" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>GetTop</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1ac748877b0ff1f3cf84f154192f0b7404" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>LegacyMockStack</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a31521641f1056e194df52fcb6d2fcd65" prot="private" virt="non-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>LegacyMockStack</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1ac53ce7a7345f2f1a1a7510243ad5e9f8" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>MOCK_CONST_METHOD0_T</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a7f11af583eafe9029fedbd82c76c848e" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>MOCK_CONST_METHOD0_T</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a369a6187b056292e185ba88622000e58" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>MOCK_CONST_METHOD1_T</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1ae787e4fd1cdc074b43414529d0ed8d88" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>MOCK_METHOD0_T</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a74246e67ad7ce096398908b4ac3bd980" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>MOCK_METHOD0_T</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a73aa854e9ff4381accbbe027c5f97031" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>MOCK_METHOD1_T</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockStack_1a37aee4ea452346d6208e47a1d1999539" prot="private" virt="non-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>operator=</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface_1a9316d84cdc42996c0a0a2ae89b693926" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>Pop</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface_1a94f18eeca0a9ef27ffdaffab40eaa5b7" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>Push</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface_1a6e44bf52b9bbeddd3692ab1c61245055" prot="public" virt="virtual"><scope>testing::gmock_function_mocker_test::LegacyMockStack</scope><name>~StackInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
