<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtesting_1_1internal_1_1ConstAndNonConstCastable" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::ConstAndNonConstCastable</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1ConstAndNonConstCastable_1a0c0e17ac5ed0fcccb17d8c40d112ada2" prot="private" static="no" mutable="no">
        <type>bool *</type>
        <definition>bool* testing::internal::ConstAndNonConstCastable::converted_</definition>
        <argsstring></argsstring>
        <name>converted_</name>
        <qualifiedname>testing::internal::ConstAndNonConstCastable::converted_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" line="175" column="8" bodyfile="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1ConstAndNonConstCastable_1a890e63e63b171f3fb9bc32512ab06701" prot="private" static="no" mutable="no">
        <type>bool *</type>
        <definition>bool* testing::internal::ConstAndNonConstCastable::const_converted_</definition>
        <argsstring></argsstring>
        <name>const_converted_</name>
        <qualifiedname>testing::internal::ConstAndNonConstCastable::const_converted_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" line="176" column="8" bodyfile="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" bodystart="176" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1ConstAndNonConstCastable_1aebe0ef6897b7f805e227bb969d4ee034" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::ConstAndNonConstCastable::ConstAndNonConstCastable</definition>
        <argsstring>(bool *converted, bool *const_converted)</argsstring>
        <name>ConstAndNonConstCastable</name>
        <qualifiedname>testing::internal::ConstAndNonConstCastable::ConstAndNonConstCastable</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>converted</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>const_converted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" line="163" column="3" bodyfile="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" bodystart="163" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1ConstAndNonConstCastable_1aff0c372d429d76d002bb29f83f2429fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::ConstAndNonConstCastable::operator Base</definition>
        <argsstring>()</argsstring>
        <name>operator Base</name>
        <qualifiedname>testing::internal::ConstAndNonConstCastable::operator Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" line="165" column="3" bodyfile="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1ConstAndNonConstCastable_1a4e8ee8051162f1dfc1da294c71481e2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::ConstAndNonConstCastable::operator Base</definition>
        <argsstring>() const</argsstring>
        <name>operator Base</name>
        <qualifiedname>testing::internal::ConstAndNonConstCastable::operator Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" line="169" column="3" bodyfile="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" bodystart="169" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" line="161" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-port-test.cc" bodystart="161" bodyend="177"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1ConstAndNonConstCastable_1a890e63e63b171f3fb9bc32512ab06701" prot="private" virt="non-virtual"><scope>testing::internal::ConstAndNonConstCastable</scope><name>const_converted_</name></member>
      <member refid="classtesting_1_1internal_1_1ConstAndNonConstCastable_1aebe0ef6897b7f805e227bb969d4ee034" prot="public" virt="non-virtual"><scope>testing::internal::ConstAndNonConstCastable</scope><name>ConstAndNonConstCastable</name></member>
      <member refid="classtesting_1_1internal_1_1ConstAndNonConstCastable_1a0c0e17ac5ed0fcccb17d8c40d112ada2" prot="private" virt="non-virtual"><scope>testing::internal::ConstAndNonConstCastable</scope><name>converted_</name></member>
      <member refid="classtesting_1_1internal_1_1ConstAndNonConstCastable_1aff0c372d429d76d002bb29f83f2429fa" prot="public" virt="non-virtual"><scope>testing::internal::ConstAndNonConstCastable</scope><name>operator Base</name></member>
      <member refid="classtesting_1_1internal_1_1ConstAndNonConstCastable_1a4e8ee8051162f1dfc1da294c71481e2f" prot="public" virt="non-virtual"><scope>testing::internal::ConstAndNonConstCastable</scope><name>operator Base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
