<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtesting_1_1gmock__function__mocker__test_1_1MockStack" kind="class" language="C++" prot="public">
    <compoundname>testing::gmock_function_mocker_test::MockStack</compoundname>
    <basecompoundref refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface" prot="public" virt="non-virtual">testing::gmock_function_mocker_test::StackInterface&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1aaa6c91eca9279b7171ef56486cb1483e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::MockStack&lt; T &gt;::MockStack</definition>
        <argsstring>()=default</argsstring>
        <name>MockStack</name>
        <qualifiedname>testing::gmock_function_mocker_test::MockStack::MockStack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="550" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1a1012c16764c3ca2626032cd95d6c5f89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::MockStack&lt; T &gt;::MOCK_METHOD</definition>
        <argsstring>(void, Push,(const T &amp;elem),())</argsstring>
        <name>MOCK_METHOD</name>
        <qualifiedname>testing::gmock_function_mocker_test::MockStack::MOCK_METHOD</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>Push</type>
        </param>
        <param>
          <type>(const T &amp;elem)</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="552" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1ae54b445bc4d2dd18520449e5edee0771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::MockStack&lt; T &gt;::MOCK_METHOD</definition>
        <argsstring>(void, Pop,(),(final))</argsstring>
        <name>MOCK_METHOD</name>
        <qualifiedname>testing::gmock_function_mocker_test::MockStack::MOCK_METHOD</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>Pop</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>(final)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="553" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1a4283f356c5153e7e2eea0aeb424a61be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::MockStack&lt; T &gt;::MOCK_METHOD</definition>
        <argsstring>(int, GetSize,(),(const, override))</argsstring>
        <name>MOCK_METHOD</name>
        <qualifiedname>testing::gmock_function_mocker_test::MockStack::MOCK_METHOD</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>GetSize</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>(const, override)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="554" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1a17b01e582dc3c138e202c29ae9aec247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::MockStack&lt; T &gt;::MOCK_METHOD</definition>
        <argsstring>(const T &amp;, GetTop,(),(const))</argsstring>
        <name>MOCK_METHOD</name>
        <qualifiedname>testing::gmock_function_mocker_test::MockStack::MOCK_METHOD</qualifiedname>
        <param>
          <type>const T &amp;</type>
        </param>
        <param>
          <type>GetTop</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>(const)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="555" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1ae0e6e3d10e20435b40308a5c3dd4cc9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::MockStack&lt; T &gt;::MOCK_METHOD</definition>
        <argsstring>((std::map&lt; int, int &gt;), ReturnTypeWithComma,(),())</argsstring>
        <name>MOCK_METHOD</name>
        <qualifiedname>testing::gmock_function_mocker_test::MockStack::MOCK_METHOD</qualifiedname>
        <param>
          <type>(std::map&lt; int, int &gt;)</type>
        </param>
        <param>
          <type>ReturnTypeWithComma</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="558" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1acecb9a897885e7847da425933c9cbc1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::MockStack&lt; T &gt;::MOCK_METHOD</definition>
        <argsstring>((std::map&lt; int, int &gt;), ReturnTypeWithComma,(int),(const))</argsstring>
        <name>MOCK_METHOD</name>
        <qualifiedname>testing::gmock_function_mocker_test::MockStack::MOCK_METHOD</qualifiedname>
        <param>
          <type>(std::map&lt; int, int &gt;)</type>
        </param>
        <param>
          <type>ReturnTypeWithComma</type>
        </param>
        <param>
          <type>(int)</type>
        </param>
        <param>
          <type>(const)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="559" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1a69c28e77eb7826b74600e08faf95e72f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_function_mocker_test::MockStack&lt; T &gt;::MockStack</definition>
        <argsstring>(const MockStack &amp;)=delete</argsstring>
        <name>MockStack</name>
        <qualifiedname>testing::gmock_function_mocker_test::MockStack::MockStack</qualifiedname>
        <param>
          <type>const <ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack" kindref="compound">MockStack</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="562" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1a047c5c01e1745f9f8390a3fd89b92e9a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack" kindref="compound">MockStack</ref> &amp;</type>
        <definition>MockStack &amp; testing::gmock_function_mocker_test::MockStack&lt; T &gt;::operator=</definition>
        <argsstring>(const MockStack &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>testing::gmock_function_mocker_test::MockStack::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack" kindref="compound">MockStack</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="563" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>testing::gmock_function_mocker_test::MockStack&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>testing::gmock_function_mocker_test::StackInterface&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>testing::gmock_function_mocker_test::MockStack&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>testing::gmock_function_mocker_test::StackInterface&lt; T &gt;</label>
        <link refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface"/>
      </node>
    </collaborationgraph>
    <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="548" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="548" bodyend="564"/>
    <listofallmembers>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface_1a09def067a391dbb6a35d5b52e616774c" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>GetSize</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface_1a3bf357599b1516e93fbded41ee8e9eb4" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>GetTop</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1a1012c16764c3ca2626032cd95d6c5f89" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>MOCK_METHOD</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1ae54b445bc4d2dd18520449e5edee0771" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>MOCK_METHOD</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1a4283f356c5153e7e2eea0aeb424a61be" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>MOCK_METHOD</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1a17b01e582dc3c138e202c29ae9aec247" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>MOCK_METHOD</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1ae0e6e3d10e20435b40308a5c3dd4cc9d" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>MOCK_METHOD</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1acecb9a897885e7847da425933c9cbc1d" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>MOCK_METHOD</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1aaa6c91eca9279b7171ef56486cb1483e" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>MockStack</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1a69c28e77eb7826b74600e08faf95e72f" prot="private" virt="non-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>MockStack</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1MockStack_1a047c5c01e1745f9f8390a3fd89b92e9a" prot="private" virt="non-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>operator=</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface_1a9316d84cdc42996c0a0a2ae89b693926" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>Pop</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface_1a94f18eeca0a9ef27ffdaffab40eaa5b7" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>Push</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1StackInterface_1a6e44bf52b9bbeddd3692ab1c61245055" prot="public" virt="virtual"><scope>testing::gmock_function_mocker_test::MockStack</scope><name>~StackInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
