<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>testing::gmock_function_mocker_test::FooInterface</compoundname>
    <derivedcompoundref refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo" prot="public" virt="non-virtual">testing::gmock_function_mocker_test::LegacyMockFoo</derivedcompoundref>
    <derivedcompoundref refid="classtesting_1_1gmock__function__mocker__test_1_1MockFoo" prot="public" virt="non-virtual">testing::gmock_function_mocker_test::MockFoo</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a70abf7998b6302d9ea2f330ea3e01b8f" prot="public" static="no">
        <type>int(*)(bool)</type>
        <definition>using testing::gmock_function_mocker_test::FooInterface::fn_ptr =  int (*)(bool)</definition>
        <argsstring></argsstring>
        <name>fn_ptr</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::fn_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="110" column="3" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a855bdcea5e7f0b17ee050da4969c8027" prot="public" static="no" mutable="no">
        <type>int(*)(bool)</type>
        <definition>virtual int(*)(bool) testing::gmock_function_mocker_test::FooInterface::ReturnsFunctionPointer1(int)</definition>
        <argsstring>(int)</argsstring>
        <name>ReturnsFunctionPointer1</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::ReturnsFunctionPointer1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="109" column="11" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a519fed9f1a8dceee37c8bb1fc990434d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual testing::gmock_function_mocker_test::FooInterface::~FooInterface</definition>
        <argsstring>()=default</argsstring>
        <name>~FooInterface</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::~FooInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="81" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1ab62327ee683b362d9e5579266b74a09c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void testing::gmock_function_mocker_test::FooInterface::VoidReturning</definition>
        <argsstring>(int x)=0</argsstring>
        <name>VoidReturning</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::VoidReturning</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="83" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a9440f75381e8a44977c2caee7914098f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::Nullary</definition>
        <argsstring>()=0</argsstring>
        <name>Nullary</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::Nullary</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="85" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a6f28f91c92b59da029ed0cb61c3d1da6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool testing::gmock_function_mocker_test::FooInterface::Unary</definition>
        <argsstring>(int x)=0</argsstring>
        <name>Unary</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::Unary</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="86" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a8d6e54401a3addca464903257529ace4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>long</type>
        <definition>virtual long testing::gmock_function_mocker_test::FooInterface::Binary</definition>
        <argsstring>(short x, int y)=0</argsstring>
        <name>Binary</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::Binary</qualifiedname>
        <param>
          <type>short</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="87" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a2a415a61b9a9c7a69bba9a4b5ef2a63e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::Decimal</definition>
        <argsstring>(bool b, char c, short d, int e, long f, float g, double h, unsigned i, char *j, const std::string &amp;k)=0</argsstring>
        <name>Decimal</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::Decimal</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>short</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <param>
          <type>long</type>
          <declname>f</declname>
        </param>
        <param>
          <type>float</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double</type>
          <declname>h</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>i</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="88" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1aaf21cef138ffa4a8f2372c7fbed95b18" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool testing::gmock_function_mocker_test::FooInterface::TakesNonConstReference</definition>
        <argsstring>(int &amp;n)=0</argsstring>
        <name>TakesNonConstReference</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::TakesNonConstReference</qualifiedname>
        <param>
          <type>int &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="92" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a4765c543c11b5d544a35f9fe8de758bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string testing::gmock_function_mocker_test::FooInterface::TakesConstReference</definition>
        <argsstring>(const int &amp;n)=0</argsstring>
        <name>TakesConstReference</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::TakesConstReference</qualifiedname>
        <param>
          <type>const int &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="93" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1abb43737fd2eeb7599b6f0af540890f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool testing::gmock_function_mocker_test::FooInterface::TakesConst</definition>
        <argsstring>(const int x)=0</argsstring>
        <name>TakesConst</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::TakesConst</qualifiedname>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="94" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1ae27d00da9698493b196d0913dd5b6c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::OverloadedOnArgumentNumber</definition>
        <argsstring>()=0</argsstring>
        <name>OverloadedOnArgumentNumber</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::OverloadedOnArgumentNumber</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="96" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1abc3dde10866e94084cdf5b3b412d2274" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::OverloadedOnArgumentNumber</definition>
        <argsstring>(int n)=0</argsstring>
        <name>OverloadedOnArgumentNumber</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::OverloadedOnArgumentNumber</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="97" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a78fc84ae56ba53a36047f0791d03fc58" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::OverloadedOnArgumentType</definition>
        <argsstring>(int n)=0</argsstring>
        <name>OverloadedOnArgumentType</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::OverloadedOnArgumentType</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="99" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1ae45c3906c2196a0978720b91c521f91f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>char</type>
        <definition>virtual char testing::gmock_function_mocker_test::FooInterface::OverloadedOnArgumentType</definition>
        <argsstring>(char c)=0</argsstring>
        <name>OverloadedOnArgumentType</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::OverloadedOnArgumentType</qualifiedname>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="100" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a94e43dbddc176d1702a7a7d7281f2642" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::OverloadedOnConstness</definition>
        <argsstring>()=0</argsstring>
        <name>OverloadedOnConstness</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::OverloadedOnConstness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="102" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a9014d2f6527f719b718b0915b27ff5c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>char</type>
        <definition>virtual char testing::gmock_function_mocker_test::FooInterface::OverloadedOnConstness</definition>
        <argsstring>() const =0</argsstring>
        <name>OverloadedOnConstness</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::OverloadedOnConstness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="103" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1aa14850645cd7a5462480f1717df5153c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::TypeWithHole</definition>
        <argsstring>(int(*func)())=0</argsstring>
        <name>TypeWithHole</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::TypeWithHole</qualifiedname>
        <param>
          <type>int(*)()</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="105" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1af1f1d96db798fadbf53fbd886e7c738e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::TypeWithComma</definition>
        <argsstring>(const std::map&lt; int, std::string &gt; &amp;a_map)=0</argsstring>
        <name>TypeWithComma</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::TypeWithComma</qualifiedname>
        <param>
          <type>const std::map&lt; int, std::string &gt; &amp;</type>
          <declname>a_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="106" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1af9e3190c69647229baed1dba41c2fdf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::TypeWithTemplatedCopyCtor</definition>
        <argsstring>(const TemplatedCopyable&lt; int &gt; &amp;)=0</argsstring>
        <name>TypeWithTemplatedCopyCtor</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::TypeWithTemplatedCopyCtor</qualifiedname>
        <param>
          <type>const <ref refid="classtesting_1_1gmock__function__mocker__test_1_1TemplatedCopyable" kindref="compound">TemplatedCopyable</ref>&lt; int &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="107" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1ae1315a533d4f38afb178623ac7c2337d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>fn_ptr</type>
        <definition>virtual fn_ptr testing::gmock_function_mocker_test::FooInterface::ReturnsFunctionPointer2</definition>
        <argsstring>(int)=0</argsstring>
        <name>ReturnsFunctionPointer2</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::ReturnsFunctionPointer2</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="111" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a97d8d9433b4c154e96f6523589ebf4da" prot="public" static="no" const="yes" explicit="no" inline="no" refqual="lvalue" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::RefQualifiedConstRef</definition>
        <argsstring>() const &amp;=0</argsstring>
        <name>RefQualifiedConstRef</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::RefQualifiedConstRef</qualifiedname>
        <reimplementedby refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo_1a5b586a1db3bbe520061f450551f238b3">RefQualifiedConstRef</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="113" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1aa51eb97c5a8fe915a6a5ef2a24c8b192" prot="public" static="no" const="yes" explicit="no" inline="no" refqual="rvalue" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::RefQualifiedConstRefRef</definition>
        <argsstring>() const &amp;&amp;=0</argsstring>
        <name>RefQualifiedConstRefRef</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::RefQualifiedConstRefRef</qualifiedname>
        <reimplementedby refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo_1a99b57a335543fe6828ff2c70c0a726f5">RefQualifiedConstRefRef</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="114" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1ab593a18ba3b8f905b7d1af553d0d2ea1" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::RefQualifiedRef</definition>
        <argsstring>() &amp;=0</argsstring>
        <name>RefQualifiedRef</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::RefQualifiedRef</qualifiedname>
        <reimplementedby refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo_1a53204e0e486eb2240659c468259c5f27">RefQualifiedRef</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="115" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a4029023fc8c82f8810b46dc87f6887e6" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::RefQualifiedRefRef</definition>
        <argsstring>() &amp;&amp;=0</argsstring>
        <name>RefQualifiedRefRef</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::RefQualifiedRefRef</qualifiedname>
        <reimplementedby refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo_1af7bb0a91b68ba5aaeca67615c99a20c3">RefQualifiedRefRef</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="116" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1aa38bdef20c08e3e0afff67b86bb0effb" prot="public" static="no" const="yes" explicit="no" inline="no" refqual="lvalue" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::RefQualifiedOverloaded</definition>
        <argsstring>() const &amp;=0</argsstring>
        <name>RefQualifiedOverloaded</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::RefQualifiedOverloaded</qualifiedname>
        <reimplementedby refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo_1ae21eb58ea09d921bc244859687c21a16">RefQualifiedOverloaded</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="118" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1adc4c965116f6ee2b1f57abfbe95aaa2f" prot="public" static="no" const="yes" explicit="no" inline="no" refqual="rvalue" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::RefQualifiedOverloaded</definition>
        <argsstring>() const &amp;&amp;=0</argsstring>
        <name>RefQualifiedOverloaded</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::RefQualifiedOverloaded</qualifiedname>
        <reimplementedby refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo_1a3fef0197e50b004509d02cfa4c6da20a">RefQualifiedOverloaded</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="119" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a75ffd8cf08541392ae272de1580c48ca" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::RefQualifiedOverloaded</definition>
        <argsstring>() &amp;=0</argsstring>
        <name>RefQualifiedOverloaded</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::RefQualifiedOverloaded</qualifiedname>
        <reimplementedby refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo_1a6544443eb2ab978a74c4e1dd5e92675e">RefQualifiedOverloaded</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="120" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a60ea15ae778c97867cecb71bdd4f750d" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int testing::gmock_function_mocker_test::FooInterface::RefQualifiedOverloaded</definition>
        <argsstring>() &amp;&amp;=0</argsstring>
        <name>RefQualifiedOverloaded</name>
        <qualifiedname>testing::gmock_function_mocker_test::FooInterface::RefQualifiedOverloaded</qualifiedname>
        <reimplementedby refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo_1ab88054355288ae3fc6bdd3fbf82044d2">RefQualifiedOverloaded</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="121" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>testing::gmock_function_mocker_test::FooInterface</label>
        <link refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface"/>
      </node>
      <node id="2">
        <label>testing::gmock_function_mocker_test::LegacyMockFoo</label>
        <link refid="classtesting_1_1gmock__function__mocker__test_1_1LegacyMockFoo"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>testing::gmock_function_mocker_test::MockFoo</label>
        <link refid="classtesting_1_1gmock__function__mocker__test_1_1MockFoo"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" line="79" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-function-mocker_test.cc" bodystart="79" bodyend="131"/>
    <listofallmembers>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a8d6e54401a3addca464903257529ace4" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>Binary</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a2a415a61b9a9c7a69bba9a4b5ef2a63e" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>Decimal</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a70abf7998b6302d9ea2f330ea3e01b8f" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>fn_ptr</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a9440f75381e8a44977c2caee7914098f" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>Nullary</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1ae27d00da9698493b196d0913dd5b6c1a" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>OverloadedOnArgumentNumber</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1abc3dde10866e94084cdf5b3b412d2274" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>OverloadedOnArgumentNumber</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a78fc84ae56ba53a36047f0791d03fc58" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>OverloadedOnArgumentType</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1ae45c3906c2196a0978720b91c521f91f" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>OverloadedOnArgumentType</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a94e43dbddc176d1702a7a7d7281f2642" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>OverloadedOnConstness</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a9014d2f6527f719b718b0915b27ff5c5" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>OverloadedOnConstness</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a97d8d9433b4c154e96f6523589ebf4da" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>RefQualifiedConstRef</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1aa51eb97c5a8fe915a6a5ef2a24c8b192" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>RefQualifiedConstRefRef</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1aa38bdef20c08e3e0afff67b86bb0effb" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>RefQualifiedOverloaded</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1adc4c965116f6ee2b1f57abfbe95aaa2f" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>RefQualifiedOverloaded</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a75ffd8cf08541392ae272de1580c48ca" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>RefQualifiedOverloaded</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a60ea15ae778c97867cecb71bdd4f750d" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>RefQualifiedOverloaded</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1ab593a18ba3b8f905b7d1af553d0d2ea1" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>RefQualifiedRef</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a4029023fc8c82f8810b46dc87f6887e6" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>RefQualifiedRefRef</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a855bdcea5e7f0b17ee050da4969c8027" prot="public" virt="non-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>ReturnsFunctionPointer1</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1ae1315a533d4f38afb178623ac7c2337d" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>ReturnsFunctionPointer2</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1abb43737fd2eeb7599b6f0af540890f50" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>TakesConst</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a4765c543c11b5d544a35f9fe8de758bd" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>TakesConstReference</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1aaf21cef138ffa4a8f2372c7fbed95b18" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>TakesNonConstReference</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1af1f1d96db798fadbf53fbd886e7c738e" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>TypeWithComma</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1aa14850645cd7a5462480f1717df5153c" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>TypeWithHole</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1af9e3190c69647229baed1dba41c2fdf8" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>TypeWithTemplatedCopyCtor</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a6f28f91c92b59da029ed0cb61c3d1da6" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>Unary</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1ab62327ee683b362d9e5579266b74a09c" prot="public" virt="pure-virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>VoidReturning</name></member>
      <member refid="classtesting_1_1gmock__function__mocker__test_1_1FooInterface_1a519fed9f1a8dceee37c8bb1fc990434d" prot="public" virt="virtual"><scope>testing::gmock_function_mocker_test::FooInterface</scope><name>~FooInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
