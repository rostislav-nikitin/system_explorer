<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classFS_1_1File" kind="class" language="C++" prot="public">
    <compoundname>FS::File</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classFS_1_1File_1af07365a1fa88eff5fedfc6bb37511229" prot="private" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char FS::File::PATH_DELIMITER</definition>
        <argsstring></argsstring>
        <name>PATH_DELIMITER</name>
        <qualifiedname>FS::File::PATH_DELIMITER</qualifiedname>
        <initializer>= &apos;/&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/fs/include/fs/fs.hpp" line="11" column="27" bodyfile="libs/fs/include/fs/fs.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classFS_1_1File_1add1657e4fef682386b724924735ad7da" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string FS::File::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <qualifiedname>FS::File::_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/fs/include/fs/fs.hpp" line="13" column="21" bodyfile="libs/fs/include/fs/fs.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFS_1_1File_1a72ad5a2fe1c3ac4082d128d19c47309c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string FS::File::_path</definition>
        <argsstring></argsstring>
        <name>_path</name>
        <qualifiedname>FS::File::_path</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/fs/include/fs/fs.hpp" line="14" column="21" bodyfile="libs/fs/include/fs/fs.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classFS_1_1File_1a35795c444d0385cfb390c16e0c2b5b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FS::File::File</definition>
        <argsstring>(std::string name, std::string path)</argsstring>
        <name>File</name>
        <qualifiedname>FS::File::File</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/fs/include/fs/fs.hpp" line="16" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classFS_1_1File_1a08edfbb661e0dd39978dee20ed3eb8b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FS::File::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <qualifiedname>FS::File::get_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/fs/include/fs/fs.hpp" line="18" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classFS_1_1File_1a6b1dc1d7ec4c001aca33d148bc400d90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FS::File::get_path</definition>
        <argsstring>() const</argsstring>
        <name>get_path</name>
        <qualifiedname>FS::File::get_path</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/fs/include/fs/fs.hpp" line="19" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classFS_1_1File_1a804ce85779d7c625315e0e97e6549afb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string FS::File::get_full_name</definition>
        <argsstring>() const</argsstring>
        <name>get_full_name</name>
        <qualifiedname>FS::File::get_full_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/fs/include/fs/fs.hpp" line="20" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classFS_1_1File_1a6768d413c945c07a7324bd7785ebd0eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FS::File::exists</definition>
        <argsstring>(std::string path)</argsstring>
        <name>exists</name>
        <qualifiedname>FS::File::exists</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/fs/include/fs/fs.hpp" line="22" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/fs/include/fs/fs.hpp" line="9" column="5" bodyfile="libs/fs/include/fs/fs.hpp" bodystart="10" bodyend="23"/>
    <listofallmembers>
      <member refid="classFS_1_1File_1add1657e4fef682386b724924735ad7da" prot="private" virt="non-virtual"><scope>FS::File</scope><name>_name</name></member>
      <member refid="classFS_1_1File_1a72ad5a2fe1c3ac4082d128d19c47309c" prot="private" virt="non-virtual"><scope>FS::File</scope><name>_path</name></member>
      <member refid="classFS_1_1File_1a6768d413c945c07a7324bd7785ebd0eb" prot="public" virt="non-virtual"><scope>FS::File</scope><name>exists</name></member>
      <member refid="classFS_1_1File_1a35795c444d0385cfb390c16e0c2b5b10" prot="public" virt="non-virtual"><scope>FS::File</scope><name>File</name></member>
      <member refid="classFS_1_1File_1a804ce85779d7c625315e0e97e6549afb" prot="public" virt="non-virtual"><scope>FS::File</scope><name>get_full_name</name></member>
      <member refid="classFS_1_1File_1a08edfbb661e0dd39978dee20ed3eb8b9" prot="public" virt="non-virtual"><scope>FS::File</scope><name>get_name</name></member>
      <member refid="classFS_1_1File_1a6b1dc1d7ec4c001aca33d148bc400d90" prot="public" virt="non-virtual"><scope>FS::File</scope><name>get_path</name></member>
      <member refid="classFS_1_1File_1af07365a1fa88eff5fedfc6bb37511229" prot="private" virt="non-virtual"><scope>FS::File</scope><name>PATH_DELIMITER</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
