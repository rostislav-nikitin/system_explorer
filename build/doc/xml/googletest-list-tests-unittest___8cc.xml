<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="googletest-list-tests-unittest___8cc" kind="file" language="C++">
    <compoundname>googletest-list-tests-unittest_.cc</compoundname>
    <includes local="no">ostream</includes>
    <includes local="no">string</includes>
    <includes refid="gtest_8h" local="yes">gtest/gtest.h</includes>
    <incdepgraph>
      <node id="14">
        <label>gtest/gtest-assertion-result.h</label>
        <link refid="gtest-assertion-result_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>gtest/gtest-matchers.h</label>
        <link refid="gtest-matchers_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h_source"/>
      </node>
      <node id="28">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="47">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="35">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="16">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc</label>
        <link refid="googletest-list-tests-unittest___8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>atomic</label>
      </node>
      <node id="51">
        <label>cassert</label>
      </node>
      <node id="22">
        <label>cerrno</label>
      </node>
      <node id="5">
        <label>cstddef</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="17">
        <label>ctype.h</label>
      </node>
      <node id="42">
        <label>float.h</label>
      </node>
      <node id="38">
        <label>functional</label>
      </node>
      <node id="7">
        <label>iomanip</label>
      </node>
      <node id="53">
        <label>iosfwd</label>
      </node>
      <node id="23">
        <label>iostream</label>
      </node>
      <node id="49">
        <label>iterator</label>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="24">
        <label>locale</label>
      </node>
      <node id="43">
        <label>map</label>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
      <node id="2">
        <label>ostream</label>
      </node>
      <node id="32">
        <label>regex.h</label>
      </node>
      <node id="10">
        <label>set</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="18">
        <label>stddef.h</label>
      </node>
      <node id="19">
        <label>stdio.h</label>
      </node>
      <node id="20">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="21">
        <label>string.h</label>
      </node>
      <node id="30">
        <label>strings.h</label>
      </node>
      <node id="26">
        <label>sys/stat.h</label>
      </node>
      <node id="27">
        <label>sys/types.h</label>
      </node>
      <node id="25">
        <label>tuple</label>
      </node>
      <node id="12">
        <label>type_traits</label>
      </node>
      <node id="33">
        <label>typeinfo</label>
      </node>
      <node id="31">
        <label>unistd.h</label>
      </node>
      <node id="40">
        <label>utility</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classFooTest" prot="public">FooTest</innerclass>
    <innerclass refid="classMyType" prot="public">MyType</innerclass>
    <innerclass refid="classValueParamTest" prot="public">ValueParamTest</innerclass>
    <innerclass refid="classVeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo72732a7a8cd04f0ab9551a6aaa86a0c2" prot="public">VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName</innerclass>
    <innerclass refid="classTypedTest" prot="public">TypedTest</innerclass>
    <innerclass refid="classMyArray" prot="public">MyArray</innerclass>
    <innerclass refid="classTypeParamTest" prot="public">TypeParamTest</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="googletest-list-tests-unittest___8cc_1a2c12008718240998b4599723abea5aaa" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">testing::Types</ref>&lt; <ref refid="classVeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo72732a7a8cd04f0ab9551a6aaa86a0c2" kindref="compound">VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName</ref>, int *, <ref refid="classMyArray" kindref="compound">MyArray</ref>&lt; bool, 42 &gt; &gt;</type>
        <definition>typedef testing::Types&lt; VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName, int*, MyArray&lt;bool, 42&gt; &gt; MyTypes</definition>
        <argsstring></argsstring>
        <name>MyTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="116" column="5" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a1f94d1d04b3e17e0c656f67c43dcd245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Foo, Bar1)</argsstring>
        <name>TEST</name>
        <param>
          <type>Foo</type>
        </param>
        <param>
          <type>Bar1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="45" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1aff0f7cd627da403d28ffe872aec2c8dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Foo, Bar2)</argsstring>
        <name>TEST</name>
        <param>
          <type>Foo</type>
        </param>
        <param>
          <type>Bar2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="47" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a0defa1e8ea8c596e9b1ff68e079ac36e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Foo, DISABLED_Bar3)</argsstring>
        <name>TEST</name>
        <param>
          <type>Foo</type>
        </param>
        <param>
          <type>DISABLED_Bar3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="49" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1aea722cccf3017f3cc6aa445ef3062c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Abc, Xyz)</argsstring>
        <name>TEST</name>
        <param>
          <type>Abc</type>
        </param>
        <param>
          <type>Xyz</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="51" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a424455aa813a24d05f74ba04cff13167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Abc, Def)</argsstring>
        <name>TEST</name>
        <param>
          <type>Abc</type>
        </param>
        <param>
          <type>Def</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="53" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a0c5a078c78b95b153badeea154f57abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(FooBar, Baz)</argsstring>
        <name>TEST</name>
        <param>
          <type>FooBar</type>
        </param>
        <param>
          <type>Baz</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="55" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1abdf83273b95cab0385a014eaa9194380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FooTest, Test1)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classFooTest" kindref="compound">FooTest</ref></type>
        </param>
        <param>
          <type>Test1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="59" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a5fa72d1c454dc7b30f5dbe06926f70d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FooTest, DISABLED_Test2)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classFooTest" kindref="compound">FooTest</ref></type>
        </param>
        <param>
          <type>DISABLED_Test2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="61" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a689d13a3da3c5eecd3eba3c512713a12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FooTest, Test3)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classFooTest" kindref="compound">FooTest</ref></type>
        </param>
        <param>
          <type>Test3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="63" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1acfc50868d2ae644150744ddd74b542f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(FooDeathTest, Test1)</argsstring>
        <name>TEST</name>
        <param>
          <type>FooDeathTest</type>
        </param>
        <param>
          <type>Test1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="65" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1aaf76f8f336db1c295fe3aa914c4c6182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintTo</definition>
        <argsstring>(const MyType &amp;x, std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const <ref refid="classMyType" kindref="compound">MyType</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="80" column="6" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1adc97fba291db78177b4e5bdf6f6d9018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_P</definition>
        <argsstring>(ValueParamTest, TestA)</argsstring>
        <name>TEST_P</name>
        <param>
          <type><ref refid="classValueParamTest" kindref="compound">ValueParamTest</ref></type>
        </param>
        <param>
          <type>TestA</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="84" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1aa743157309ca6126251b87f7436205a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_P</definition>
        <argsstring>(ValueParamTest, TestB)</argsstring>
        <name>TEST_P</name>
        <param>
          <type><ref refid="classValueParamTest" kindref="compound">ValueParamTest</ref></type>
        </param>
        <param>
          <type>TestB</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="86" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a7d7d6c70fae657ad468cf7309f36458c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTANTIATE_TEST_SUITE_P</definition>
        <argsstring>(MyInstantiation, ValueParamTest, testing::Values(MyType(&quot;one line&quot;), MyType(&quot;two\nlines&quot;), MyType(&quot;a &quot; &quot;very\nloooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot; &quot;ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot; &quot;ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot; &quot;ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot; &quot;ooooong line&quot;)))</argsstring>
        <name>INSTANTIATE_TEST_SUITE_P</name>
        <param>
          <type>MyInstantiation</type>
        </param>
        <param>
          <type><ref refid="classValueParamTest" kindref="compound">ValueParamTest</ref></type>
        </param>
        <param>
          <type>testing::Values(<ref refid="classMyType" kindref="compound">MyType</ref>(&quot;one line&quot;), <ref refid="classMyType" kindref="compound">MyType</ref>(&quot;two\nlines&quot;), <ref refid="classMyType" kindref="compound">MyType</ref>(&quot;a &quot; &quot;very\nloooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot; &quot;ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot; &quot;ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot; &quot;ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot; &quot;ooooong line&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="88" column="1" declfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" declline="88" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a346de8e681bc95011fed254a54e30205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TYPED_TEST_SUITE</definition>
        <argsstring>(TypedTest, MyTypes)</argsstring>
        <name>TYPED_TEST_SUITE</name>
        <param>
          <type><ref refid="classTypedTest" kindref="compound">TypedTest</ref></type>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">MyTypes</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="118" column="1" declfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" declline="118" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a83ec84c5fac9fdffa59a16e5d043bd66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TYPED_TEST</definition>
        <argsstring>(TypedTest, TestA)</argsstring>
        <name>TYPED_TEST</name>
        <param>
          <type><ref refid="classTypedTest" kindref="compound">TypedTest</ref></type>
        </param>
        <param>
          <type>TestA</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="120" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a1ac7e35f3d659458b18cc29d71ed1f46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TYPED_TEST</definition>
        <argsstring>(TypedTest, TestB)</argsstring>
        <name>TYPED_TEST</name>
        <param>
          <type><ref refid="classTypedTest" kindref="compound">TypedTest</ref></type>
        </param>
        <param>
          <type>TestB</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="122" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a8ee0021cbd9bdfcb7c02ce2607805dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TYPED_TEST_SUITE_P</definition>
        <argsstring>(TypeParamTest)</argsstring>
        <name>TYPED_TEST_SUITE_P</name>
        <param>
          <type><ref refid="classTypeParamTest" kindref="compound">TypeParamTest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="129" column="1" declfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" declline="129" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1aadd51dfff9d63b5e0faa0130697684c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TYPED_TEST_P</definition>
        <argsstring>(TypeParamTest, TestA)</argsstring>
        <name>TYPED_TEST_P</name>
        <param>
          <type><ref refid="classTypeParamTest" kindref="compound">TypeParamTest</ref></type>
        </param>
        <param>
          <type>TestA</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="131" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a667494b5b0e4418064679f58c546db97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TYPED_TEST_P</definition>
        <argsstring>(TypeParamTest, TestB)</argsstring>
        <name>TYPED_TEST_P</name>
        <param>
          <type><ref refid="classTypeParamTest" kindref="compound">TypeParamTest</ref></type>
        </param>
        <param>
          <type>TestB</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="133" column="1" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a24c35f734ffc5235cc3881d22717d506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REGISTER_TYPED_TEST_SUITE_P</definition>
        <argsstring>(TypeParamTest, TestA, TestB)</argsstring>
        <name>REGISTER_TYPED_TEST_SUITE_P</name>
        <param>
          <type><ref refid="classTypeParamTest" kindref="compound">TypeParamTest</ref></type>
        </param>
        <param>
          <type>TestA</type>
        </param>
        <param>
          <type>TestB</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="135" column="1" declfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" declline="135" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1afbb047642153cc08001200d1c24f278a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTANTIATE_TYPED_TEST_SUITE_P</definition>
        <argsstring>(My, TypeParamTest, MyTypes)</argsstring>
        <name>INSTANTIATE_TYPED_TEST_SUITE_P</name>
        <param>
          <type>My</type>
        </param>
        <param>
          <type><ref refid="classTypeParamTest" kindref="compound">TypeParamTest</ref></type>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">MyTypes</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="137" column="1" declfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" declline="137" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="googletest-list-tests-unittest___8cc_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" line="139" column="5" bodyfile="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc" bodystart="139" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2006,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unit<sp/>test<sp/>for<sp/>Google<sp/>Test&apos;s<sp/>--gtest_list_tests<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>user<sp/>can<sp/>ask<sp/>Google<sp/>Test<sp/>to<sp/>list<sp/>all<sp/>tests<sp/>that<sp/>will<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>when<sp/>using<sp/>a<sp/>filter,<sp/>a<sp/>user<sp/>will<sp/>know<sp/>what</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tests<sp/>to<sp/>look<sp/>for.<sp/>The<sp/>tests<sp/>will<sp/>not<sp/>be<sp/>run<sp/>after<sp/>listing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>will<sp/>be<sp/>invoked<sp/>from<sp/>a<sp/>Python<sp/>unit<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>run<sp/>it<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gtest/gtest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Several<sp/>different<sp/>test<sp/>cases<sp/>and<sp/>tests<sp/>that<sp/>will<sp/>be<sp/>listed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">TEST(Foo,<sp/>Bar1)<sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">TEST(Foo,<sp/>Bar2)<sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">TEST(Foo,<sp/>DISABLED_Bar3)<sp/>{}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">TEST(Abc,<sp/>Xyz)<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">TEST(Abc,<sp/>Def)<sp/>{}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">TEST(FooBar,<sp/>Baz)<sp/>{}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classFooTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFooTest" kindref="compound">FooTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1Test" kindref="compound">testing::Test</ref><sp/>{};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">TEST_F(FooTest,<sp/>Test1)<sp/>{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">TEST_F(FooTest,<sp/>DISABLED_Test2)<sp/>{}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">TEST_F(FooTest,<sp/>Test3)<sp/>{}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">TEST(FooDeathTest,<sp/>Test1)<sp/>{}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>group<sp/>of<sp/>value-parameterized<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classMyType" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMyType" kindref="compound">MyType</ref><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classMyType" kindref="compound">MyType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a_value)<sp/>:<sp/>value_(a_value)<sp/>{}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>std::string<sp/>value_;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Teaches<sp/>Google<sp/>Test<sp/>how<sp/>to<sp/>print<sp/>a<sp/>MyType.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintTo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMyType" kindref="compound">MyType</ref>&amp;<sp/>x,<sp/>std::ostream*<sp/>os)<sp/>{<sp/>*os<sp/>&lt;&lt;<sp/>x.value();<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classValueParamTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classValueParamTest" kindref="compound">ValueParamTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestWithParam" kindref="compound">testing::TestWithParam</ref>&lt;MyType&gt;<sp/>{};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">TEST_P(<ref refid="classValueParamTest" kindref="compound">ValueParamTest</ref>,<sp/>TestA)<sp/>{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">TEST_P(<ref refid="classValueParamTest" kindref="compound">ValueParamTest</ref>,<sp/>TestB)<sp/>{}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">INSTANTIATE_TEST_SUITE_P(</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>MyInstantiation,<sp/><ref refid="classValueParamTest" kindref="compound">ValueParamTest</ref>,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>testing::Values(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMyType" kindref="compound">MyType</ref>(</highlight><highlight class="stringliteral">&quot;one<sp/>line&quot;</highlight><highlight class="normal">),<sp/><ref refid="classMyType" kindref="compound">MyType</ref>(</highlight><highlight class="stringliteral">&quot;two\nlines&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMyType" kindref="compound">MyType</ref>(</highlight><highlight class="stringliteral">&quot;a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;very\nloooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ooooong<sp/>line&quot;</highlight><highlight class="normal">)));<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>group<sp/>of<sp/>typed<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>deliberately<sp/>long<sp/>type<sp/>name<sp/>for<sp/>testing<sp/>the<sp/>line-truncating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>behavior<sp/>when<sp/>printing<sp/>a<sp/>type<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classVeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo72732a7a8cd04f0ab9551a6aaa86a0c2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo72732a7a8cd04f0ab9551a6aaa86a0c2" kindref="compound">VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName</ref><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="108" refid="classTypedTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTypedTest" kindref="compound">TypedTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1Test" kindref="compound">testing::Test</ref><sp/>{};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kSize&gt;</highlight></codeline>
<codeline lineno="111" refid="classMyArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMyArray" kindref="compound">MyArray</ref><sp/>{};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">testing::Types</ref>&lt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo72732a7a8cd04f0ab9551a6aaa86a0c2" kindref="compound">VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*,<sp/><ref refid="classMyArray" kindref="compound">MyArray&lt;bool, 42&gt;</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">MyTypes</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">TYPED_TEST_SUITE(<ref refid="classTypedTest" kindref="compound">TypedTest</ref>,<sp/><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">MyTypes</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">TYPED_TEST(<ref refid="classTypedTest" kindref="compound">TypedTest</ref>,<sp/>TestA)<sp/>{}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">TYPED_TEST(<ref refid="classTypedTest" kindref="compound">TypedTest</ref>,<sp/>TestB)<sp/>{}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>group<sp/>of<sp/>type-parameterized<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="127" refid="classTypeParamTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTypeParamTest" kindref="compound">TypeParamTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1Test" kindref="compound">testing::Test</ref><sp/>{};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">TYPED_TEST_SUITE_P(<ref refid="classTypeParamTest" kindref="compound">TypeParamTest</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">TYPED_TEST_P(<ref refid="classTypeParamTest" kindref="compound">TypeParamTest</ref>,<sp/>TestA)<sp/>{}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">TYPED_TEST_P(<ref refid="classTypeParamTest" kindref="compound">TypeParamTest</ref>,<sp/>TestB)<sp/>{}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">REGISTER_TYPED_TEST_SUITE_P(<ref refid="classTypeParamTest" kindref="compound">TypeParamTest</ref>,<sp/>TestA,<sp/>TestB);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">INSTANTIATE_TYPED_TEST_SUITE_P(My,<sp/><ref refid="classTypeParamTest" kindref="compound">TypeParamTest</ref>,<sp/><ref refid="structtesting_1_1internal_1_1ProxyTypeList" kindref="compound">MyTypes</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>::testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="build/_deps/googletest-src/googletest/test/googletest-list-tests-unittest_.cc"/>
  </compounddef>
</doxygen>
