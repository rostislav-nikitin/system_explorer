<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtesting_1_1DefaultValue_1_1FactoryValueProducer" kind="class" language="C++" prot="private">
    <compoundname>testing::DefaultValue::FactoryValueProducer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">testing::DefaultValue&lt; T &gt;::ValueProducer</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1DefaultValue_1_1FactoryValueProducer_1ab3a016297d3a8fd3c2849c5a4d202d9b" prot="private" static="no" mutable="no">
        <type>const FactoryFunction</type>
        <definition>const FactoryFunction testing::DefaultValue&lt; T &gt;::FactoryValueProducer::factory_</definition>
        <argsstring></argsstring>
        <name>factory_</name>
        <qualifiedname>testing::DefaultValue::FactoryValueProducer::factory_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="636" column="27" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" bodystart="636" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1DefaultValue_1_1FactoryValueProducer_1adc9253b20288be937687b3cefa7ef476" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::DefaultValue&lt; T &gt;::FactoryValueProducer::FactoryValueProducer</definition>
        <argsstring>(FactoryFunction factory)</argsstring>
        <name>FactoryValueProducer</name>
        <qualifiedname>testing::DefaultValue::FactoryValueProducer::FactoryValueProducer</qualifiedname>
        <param>
          <type>FactoryFunction</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="631" column="14" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" bodystart="631" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1DefaultValue_1_1FactoryValueProducer_1ad669217ac582007bc2e1b08dc13deba5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T testing::DefaultValue&lt; T &gt;::FactoryValueProducer::Produce</definition>
        <argsstring>() override</argsstring>
        <name>Produce</name>
        <qualifiedname>testing::DefaultValue::FactoryValueProducer::Produce</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="633" column="7" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" bodystart="633" bodyend="633"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1DefaultValue_1_1FactoryValueProducer_1a0d27a8f1ec6555a09973d7396a0a36b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::DefaultValue&lt; T &gt;::FactoryValueProducer::FactoryValueProducer</definition>
        <argsstring>(const FactoryValueProducer &amp;)=delete</argsstring>
        <name>FactoryValueProducer</name>
        <qualifiedname>testing::DefaultValue::FactoryValueProducer::FactoryValueProducer</qualifiedname>
        <param>
          <type>const FactoryValueProducer &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="637" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1DefaultValue_1_1FactoryValueProducer_1a9ee52f7fae0e7f977fc246bf30012b33" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FactoryValueProducer &amp;</type>
        <definition>FactoryValueProducer &amp; testing::DefaultValue&lt; T &gt;::FactoryValueProducer::operator=</definition>
        <argsstring>(const FactoryValueProducer &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>testing::DefaultValue::FactoryValueProducer::operator=</qualifiedname>
        <param>
          <type>const FactoryValueProducer &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="638" column="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>testing::DefaultValue&lt; T &gt;::ValueProducer</label>
      </node>
      <node id="1">
        <label>testing::DefaultValue&lt; T &gt;::FactoryValueProducer</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>testing::DefaultValue&lt; T &gt;::ValueProducer</label>
      </node>
      <node id="1">
        <label>testing::DefaultValue&lt; T &gt;::FactoryValueProducer</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" line="629" column="3" bodyfile="build/_deps/googletest-src/googlemock/include/gmock/gmock-actions.h" bodystart="629" bodyend="639"/>
    <listofallmembers>
      <member refid="classtesting_1_1DefaultValue_1_1FactoryValueProducer_1ab3a016297d3a8fd3c2849c5a4d202d9b" prot="private" virt="non-virtual"><scope>testing::DefaultValue::FactoryValueProducer</scope><name>factory_</name></member>
      <member refid="classtesting_1_1DefaultValue_1_1FactoryValueProducer_1adc9253b20288be937687b3cefa7ef476" prot="public" virt="non-virtual"><scope>testing::DefaultValue::FactoryValueProducer</scope><name>FactoryValueProducer</name></member>
      <member refid="classtesting_1_1DefaultValue_1_1FactoryValueProducer_1a0d27a8f1ec6555a09973d7396a0a36b1" prot="private" virt="non-virtual"><scope>testing::DefaultValue::FactoryValueProducer</scope><name>FactoryValueProducer</name></member>
      <member refid="classtesting_1_1DefaultValue_1_1FactoryValueProducer_1a9ee52f7fae0e7f977fc246bf30012b33" prot="private" virt="non-virtual"><scope>testing::DefaultValue::FactoryValueProducer</scope><name>operator=</name></member>
      <member refid="classtesting_1_1DefaultValue_1_1FactoryValueProducer_1ad669217ac582007bc2e1b08dc13deba5" prot="public" virt="non-virtual"><scope>testing::DefaultValue::FactoryValueProducer</scope><name>Produce</name></member>
      <member refid="classtesting_1_1DefaultValue_1_1ValueProducer_1ad419e11865b3156dc90b45efd166b8e9" prot="public" virt="virtual"><scope>testing::DefaultValue::FactoryValueProducer</scope><name>~ValueProducer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
