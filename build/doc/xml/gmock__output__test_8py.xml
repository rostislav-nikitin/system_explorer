<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="gmock__output__test_8py" kind="file" language="Python">
    <compoundname>gmock_output_test.py</compoundname>
    <innerclass refid="classgmock__output__test_1_1GMockOutputTest" prot="public">gmock_output_test::GMockOutputTest</innerclass>
    <innernamespace refid="namespacegmock__output__test">gmock_output_test</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacegmock__output__test" refkind="compound"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="stringliteral">r&quot;&quot;&quot;Tests<sp/>the<sp/>text<sp/>output<sp/>of<sp/>Google<sp/>C++<sp/>Mocking<sp/>Framework.</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">To<sp/>update<sp/>the<sp/>golden<sp/>file:</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">gmock_output_test.py<sp/>--build_dir=BUILD/DIR<sp/>--gengolden</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">where<sp/>BUILD/DIR<sp/>contains<sp/>the<sp/>built<sp/>gmock_output_test_<sp/>file.</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">gmock_output_test.py<sp/>--gengolden</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral">gmock_output_test.py</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>open<sp/><sp/></highlight><highlight class="comment">#<sp/>pylint:<sp/>disable=redefined-builtin,<sp/>g-importing-member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>googlemock.test<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>gmock_test_utils</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>flag<sp/>for<sp/>generating<sp/>the<sp/>golden<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">GENGOLDEN_FLAG<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;--gengolden&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">PROGRAM_PATH<sp/>=<sp/><ref refid="namespacegmock__test__utils_1aadd2927024e24f0c53f7ba283402cdb1" kindref="member">gmock_test_utils.GetTestExecutablePath</ref>(</highlight><highlight class="stringliteral">&apos;gmock_output_test_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">COMMAND<sp/>=<sp/>[PROGRAM_PATH,<sp/></highlight><highlight class="stringliteral">&apos;--gtest_stack_trace_depth=0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--gtest_print_time=0&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="54"><highlight class="normal">GOLDEN_NAME<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;gmock_output_test_golden.txt&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">GOLDEN_PATH<sp/>=<sp/>os.path.join(<ref refid="namespacegmock__test__utils_1ab7217591e655e80392c9db6b99d04765" kindref="member">gmock_test_utils.GetSourceDir</ref>(),<sp/>GOLDEN_NAME)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegmock__output__test_1a5c9ae3611cc4fac1e1340a3345865cf3" kindref="member">ToUnixLineEnding</ref>(s):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Changes<sp/>all<sp/>Windows/Mac<sp/>line<sp/>endings<sp/>in<sp/>s<sp/>to<sp/>UNIX<sp/>line<sp/>endings.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.replace(</highlight><highlight class="stringliteral">&apos;\r\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">&apos;\r&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegmock__output__test_1a2ebfc0abfb0ed307021ecaa9da465c55" kindref="member">RemoveReportHeaderAndFooter</ref>(output):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Removes<sp/>Google<sp/>Test<sp/>result<sp/>report&apos;s<sp/>header<sp/>and<sp/>footer<sp/>from<sp/>the<sp/>output.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;.*gtest_main.*\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;\[.*\d+<sp/>tests.*\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;\[.*<sp/>test<sp/>environment<sp/>.*\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;\[=+\]<sp/>\d+<sp/>tests<sp/>.*<sp/>ran.*&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;.*<sp/>FAILED<sp/>TESTS\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegmock__output__test_1aa3c93f8085ff0886bf0d160d71af2452" kindref="member">RemoveLocations</ref>(output):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Removes<sp/>all<sp/>file<sp/>location<sp/>info<sp/>from<sp/>a<sp/>Google<sp/>Test<sp/>program&apos;s<sp/>output.</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output:<sp/><sp/>the<sp/>output<sp/>of<sp/>a<sp/>Google<sp/>Test<sp/>program.</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>all<sp/>file<sp/>location<sp/>info<sp/>(</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>form<sp/>of</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DIRECTORY/FILE_NAME:LINE_NUMBER:<sp/>&apos;</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DIRECTORY\\FILE_NAME(LINE_NUMBER):<sp/>&apos;</highlight><highlight class="normal">)<sp/>replaced<sp/>by</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FILE:#:<sp/>&apos;</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;.*[/\\](.+)(\:\d+|\(\d+\))\:&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;FILE:#:&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegmock__output__test_1af3c1f95f19b9f048843a2d562d459b24" kindref="member">NormalizeErrorMarker</ref>(output):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Normalizes<sp/>the<sp/>error<sp/>marker,<sp/>which<sp/>is<sp/>different<sp/>on<sp/>Windows<sp/>vs<sp/>on<sp/>Linux.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;<sp/>error:<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;<sp/>Failure\n&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegmock__output__test_1a58b4fdb82b40d01d32b09d4c14ba11a5" kindref="member">RemoveMemoryAddresses</ref>(output):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Removes<sp/>memory<sp/>addresses<sp/>from<sp/>the<sp/>test<sp/>output.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;@\w+&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;@0x#&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegmock__output__test_1ac0628c5630d869dae45601df9d909638" kindref="member">RemoveTestNamesOfLeakedMocks</ref>(output):</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Removes<sp/>the<sp/>test<sp/>names<sp/>of<sp/>leaked<sp/>mock<sp/>objects<sp/>from<sp/>the<sp/>test<sp/>output.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;\(used<sp/>in<sp/>test<sp/>.+\)<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegmock__output__test_1a60299c4f0cb666d08f101ddaa7aabed4" kindref="member">GetLeakyTests</ref>(output):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>list<sp/>of<sp/>test<sp/>names<sp/>that<sp/>leak<sp/>mock<sp/>objects.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>findall()<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>all<sp/>matches<sp/>of<sp/>the<sp/>regex<sp/>in<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>example,<sp/>if<sp/>&apos;(used<sp/>in<sp/>test<sp/>FooTest.Bar)&apos;<sp/>is<sp/>in<sp/>output,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>list<sp/>will<sp/>contain<sp/>&apos;FooTest.Bar&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re.findall(</highlight><highlight class="stringliteral">r&apos;\(used<sp/>in<sp/>test<sp/>(.+)\)&apos;</highlight><highlight class="normal">,<sp/>output)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegmock__output__test_1a590ba3b918e5599eeabc2cbf597e2ce1" kindref="member">GetNormalizedOutputAndLeakyTests</ref>(output):</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Normalizes<sp/>the<sp/>output<sp/>of<sp/>gmock_output_test_.</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>output:<sp/>The<sp/>test<sp/>output.</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>tuple<sp/>(the<sp/>normalized<sp/>test<sp/>output,<sp/>the<sp/>list<sp/>of<sp/>test<sp/>names<sp/>that<sp/>have</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>leaked<sp/>mocks).</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/>output<sp/>=<sp/><ref refid="namespacegmock__output__test_1a5c9ae3611cc4fac1e1340a3345865cf3" kindref="member">ToUnixLineEnding</ref>(output)</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/>output<sp/>=<sp/><ref refid="namespacegmock__output__test_1a2ebfc0abfb0ed307021ecaa9da465c55" kindref="member">RemoveReportHeaderAndFooter</ref>(output)</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/>output<sp/>=<sp/><ref refid="namespacegmock__output__test_1af3c1f95f19b9f048843a2d562d459b24" kindref="member">NormalizeErrorMarker</ref>(output)</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/>output<sp/>=<sp/><ref refid="namespacegmock__output__test_1aa3c93f8085ff0886bf0d160d71af2452" kindref="member">RemoveLocations</ref>(output)</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/>output<sp/>=<sp/><ref refid="namespacegmock__output__test_1a58b4fdb82b40d01d32b09d4c14ba11a5" kindref="member">RemoveMemoryAddresses</ref>(output)</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="namespacegmock__output__test_1ac0628c5630d869dae45601df9d909638" kindref="member">RemoveTestNamesOfLeakedMocks</ref>(output),<sp/><ref refid="namespacegmock__output__test_1a60299c4f0cb666d08f101ddaa7aabed4" kindref="member">GetLeakyTests</ref>(output))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegmock__output__test_1a001498a3e9bf552ee429e434eb00cb08" kindref="member">GetShellCommandOutput</ref>(cmd):</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>a<sp/>command<sp/>in<sp/>a<sp/>sub-process,<sp/>and<sp/>returns<sp/>its<sp/>STDOUT<sp/>in<sp/>a<sp/>string.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacegmock__test__utils_1a82fd0b8b606ad27c7a5fbd05e8eaa920" kindref="member">gmock_test_utils.Subprocess</ref>(cmd,<sp/>capture_stderr=</highlight><highlight class="keyword">False</highlight><highlight class="normal">).output</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegmock__output__test_1a1796bc395fbfb8873992e3f84378e4bf" kindref="member">GetNormalizedCommandOutputAndLeakyTests</ref>(cmd):</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>a<sp/>command<sp/>and<sp/>returns<sp/>its<sp/>normalized<sp/>output<sp/>and<sp/>a<sp/>list<sp/>of<sp/>leaky<sp/>tests.</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>cmd:<sp/><sp/>the<sp/>shell<sp/>command.</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="comment">#<sp/>Disables<sp/>exception<sp/>pop-ups<sp/>on<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>os.environ[</highlight><highlight class="stringliteral">&apos;GTEST_CATCH_EXCEPTIONS&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacegmock__output__test_1a590ba3b918e5599eeabc2cbf597e2ce1" kindref="member">GetNormalizedOutputAndLeakyTests</ref>(<ref refid="namespacegmock__output__test_1a001498a3e9bf552ee429e434eb00cb08" kindref="member">GetShellCommandOutput</ref>(cmd))</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classgmock__output__test_1_1GMockOutputTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgmock__output__test_1_1GMockOutputTest" kindref="compound">GMockOutputTest</ref>(<ref refid="namespacegmock__test__utils_1a6718b41ce4676455c2cd0f22c1e64c11" kindref="member">gmock_test_utils.TestCase</ref>):</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">testOutput(self):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>(output,<sp/>leaky_tests)<sp/>=<sp/><ref refid="namespacegmock__output__test_1a1796bc395fbfb8873992e3f84378e4bf" kindref="member">GetNormalizedCommandOutputAndLeakyTests</ref>(COMMAND)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>golden_file<sp/>=<sp/>open(GOLDEN_PATH,<sp/></highlight><highlight class="stringliteral">&apos;rb&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>golden<sp/>=<sp/>golden_file.read().decode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>golden_file.close()</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>On<sp/>Windows<sp/>the<sp/>repository<sp/>might<sp/>have<sp/>been<sp/>checked<sp/>out<sp/>with<sp/>\r\n<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>endings,<sp/>so<sp/>normalize<sp/>it<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>golden<sp/>=<sp/><ref refid="namespacegmock__output__test_1a5c9ae3611cc4fac1e1340a3345865cf3" kindref="member">ToUnixLineEnding</ref>(golden)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>normalized<sp/>output<sp/>should<sp/>match<sp/>the<sp/>golden<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(golden,<sp/>output)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>raw<sp/>output<sp/>should<sp/>contain<sp/>2<sp/>leaked<sp/>mock<sp/>object<sp/>errors<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>test<sp/>GMockOutputTest.CatchesLeakedMocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;GMockOutputTest.CatchesLeakedMocks&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;GMockOutputTest.CatchesLeakedMocks&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaky_tests,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.argv[1:]<sp/>==<sp/>[GENGOLDEN_FLAG]:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>(output,<sp/>_)<sp/>=<sp/><ref refid="namespacegmock__output__test_1a1796bc395fbfb8873992e3f84378e4bf" kindref="member">GetNormalizedCommandOutputAndLeakyTests</ref>(COMMAND)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>golden_file<sp/>=<sp/>open(GOLDEN_PATH,<sp/></highlight><highlight class="stringliteral">&apos;wb&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>golden_file.write(output)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>golden_file.close()</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Suppress<sp/>the<sp/>error<sp/>&quot;googletest<sp/>was<sp/>imported<sp/>but<sp/>a<sp/>call<sp/>to<sp/>its<sp/>main()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>was<sp/>never<sp/>detected.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>os._exit(0)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegmock__test__utils_1ad79dc6aea3727ee23b5f5c454ef0d78a" kindref="member">gmock_test_utils.Main</ref>()</highlight></codeline>
    </programlisting>
    <location file="build/_deps/googletest-src/googlemock/test/gmock_output_test.py"/>
  </compounddef>
</doxygen>
