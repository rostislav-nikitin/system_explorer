<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtesting_1_1internal_1_1MaxBipartiteMatchState" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::MaxBipartiteMatchState</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1MaxBipartiteMatchState_1a628d16d346432c1556097b94fad27e42" prot="private" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t testing::internal::MaxBipartiteMatchState::kUnused</definition>
        <argsstring></argsstring>
        <name>kUnused</name>
        <qualifiedname>testing::internal::MaxBipartiteMatchState::kUnused</qualifiedname>
        <initializer>= static_cast&lt;size_t&gt;(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" line="166" column="23" bodyfile="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1MaxBipartiteMatchState_1aba20adc38680caf7db98321cfde24dec" prot="private" static="no" mutable="no">
        <type>const MatchMatrix *</type>
        <definition>const MatchMatrix* testing::internal::MaxBipartiteMatchState::graph_</definition>
        <argsstring></argsstring>
        <name>graph_</name>
        <qualifiedname>testing::internal::MaxBipartiteMatchState::graph_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" line="210" column="21" bodyfile="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1MaxBipartiteMatchState_1af63f4d7546e914a13b43f30e63f27b6f" prot="private" static="no" mutable="no">
        <type>::std::vector&lt; size_t &gt;</type>
        <definition>::std::vector&lt;size_t&gt; testing::internal::MaxBipartiteMatchState::left_</definition>
        <argsstring></argsstring>
        <name>left_</name>
        <qualifiedname>testing::internal::MaxBipartiteMatchState::left_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" line="222" column="17" bodyfile="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1MaxBipartiteMatchState_1a85c29e270fd44f16458cf48cdc06d19a" prot="private" static="no" mutable="no">
        <type>::std::vector&lt; size_t &gt;</type>
        <definition>::std::vector&lt;size_t&gt; testing::internal::MaxBipartiteMatchState::right_</definition>
        <argsstring></argsstring>
        <name>right_</name>
        <qualifiedname>testing::internal::MaxBipartiteMatchState::right_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" line="223" column="17" bodyfile="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1MaxBipartiteMatchState_1a9d0166d5cc7afd1b741f6c312df72b54" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::MaxBipartiteMatchState::MaxBipartiteMatchState</definition>
        <argsstring>(const MatchMatrix &amp;graph)</argsstring>
        <name>MaxBipartiteMatchState</name>
        <qualifiedname>testing::internal::MaxBipartiteMatchState::MaxBipartiteMatchState</qualifiedname>
        <param>
          <type>const MatchMatrix &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" line="126" column="12" bodyfile="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1MaxBipartiteMatchState_1af6efab664ee390925b24d023f1368192" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ElementMatcherPairs</type>
        <definition>ElementMatcherPairs testing::internal::MaxBipartiteMatchState::Compute</definition>
        <argsstring>()</argsstring>
        <name>Compute</name>
        <qualifiedname>testing::internal::MaxBipartiteMatchState::Compute</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" line="132" column="23" bodyfile="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" bodystart="132" bodyend="163"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1MaxBipartiteMatchState_1a8aa8dc82be659772a1dd68eb00d7a858" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::MaxBipartiteMatchState::TryAugment</definition>
        <argsstring>(size_t ilhs, ::std::vector&lt; char &gt; *seen)</argsstring>
        <name>TryAugment</name>
        <qualifiedname>testing::internal::MaxBipartiteMatchState::TryAugment</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>ilhs</declname>
        </param>
        <param>
          <type>::std::vector&lt; char &gt; *</type>
          <declname>seen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" line="184" column="8" bodyfile="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" bodystart="184" bodyend="208"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" line="124" column="1" bodyfile="build/_deps/googletest-src/googlemock/src/gmock-matchers.cc" bodystart="124" bodyend="224"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1MaxBipartiteMatchState_1af6efab664ee390925b24d023f1368192" prot="public" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>Compute</name></member>
      <member refid="classtesting_1_1internal_1_1MaxBipartiteMatchState_1aba20adc38680caf7db98321cfde24dec" prot="private" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>graph_</name></member>
      <member refid="classtesting_1_1internal_1_1MaxBipartiteMatchState_1a628d16d346432c1556097b94fad27e42" prot="private" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>kUnused</name></member>
      <member refid="classtesting_1_1internal_1_1MaxBipartiteMatchState_1af63f4d7546e914a13b43f30e63f27b6f" prot="private" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>left_</name></member>
      <member refid="classtesting_1_1internal_1_1MaxBipartiteMatchState_1a9d0166d5cc7afd1b741f6c312df72b54" prot="public" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>MaxBipartiteMatchState</name></member>
      <member refid="classtesting_1_1internal_1_1MaxBipartiteMatchState_1a85c29e270fd44f16458cf48cdc06d19a" prot="private" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>right_</name></member>
      <member refid="classtesting_1_1internal_1_1MaxBipartiteMatchState_1a8aa8dc82be659772a1dd68eb00d7a858" prot="private" virt="non-virtual"><scope>testing::internal::MaxBipartiteMatchState</scope><name>TryAugment</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
