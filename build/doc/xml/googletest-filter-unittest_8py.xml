<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="googletest-filter-unittest_8py" kind="file" language="Python">
    <compoundname>googletest-filter-unittest.py</compoundname>
    <innerclass refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest" prot="public">googletest-filter-unittest::GTestFilterUnitTest</innerclass>
    <innernamespace refid="namespacegoogletest-filter-unittest">googletest-filter-unittest</innernamespace>
    <innernamespace refid="namespacegoogletest">googletest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>2005<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Unit<sp/>test<sp/>for<sp/>Google<sp/>Test<sp/>test<sp/>filters.</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">A<sp/>user<sp/>can<sp/>specify<sp/>which<sp/>test(s)<sp/>in<sp/>a<sp/>Google<sp/>Test<sp/>program<sp/>to<sp/>run<sp/>via<sp/>either</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">the<sp/>GTEST_FILTER<sp/>environment<sp/>variable<sp/>or<sp/>the<sp/>--gtest_filter<sp/>flag.</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">This<sp/>script<sp/>tests<sp/>such<sp/>functionality<sp/>by<sp/>invoking</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">googletest-filter-unittest_<sp/>(a<sp/>program<sp/>written<sp/>with<sp/>Google<sp/>Test)<sp/>with<sp/>different</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">environments<sp/>and<sp/>command<sp/>line<sp/>flags.</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral">Note<sp/>that<sp/>test<sp/>sharding<sp/>may<sp/>also<sp/>influence<sp/>which<sp/>tests<sp/>are<sp/>filtered.<sp/>Therefore,</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral">we<sp/>test<sp/>that<sp/>here<sp/>also.</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sets<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Set<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>set<sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>Python<sp/>2.3<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>googletest.test<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>gtest_test_utils</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Constants.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Checks<sp/>if<sp/>this<sp/>platform<sp/>can<sp/>pass<sp/>empty<sp/>environment<sp/>variables<sp/>to<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">#<sp/>processes.<sp/><sp/>We<sp/>set<sp/>an<sp/>env<sp/>variable<sp/>to<sp/>an<sp/>empty<sp/>string<sp/>and<sp/>invoke<sp/>a<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">#<sp/>script<sp/>in<sp/>a<sp/>subprocess<sp/>to<sp/>print<sp/>whether<sp/>the<sp/>variable<sp/>is<sp/>STILL<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">#<sp/>os.environ.<sp/><sp/>We<sp/>then<sp/>use<sp/>&apos;eval&apos;<sp/>to<sp/>parse<sp/>the<sp/>child&apos;s<sp/>output<sp/>so<sp/>that<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">#<sp/>exception<sp/>is<sp/>thrown<sp/>if<sp/>the<sp/>input<sp/>is<sp/>anything<sp/>other<sp/>than<sp/>&apos;True&apos;<sp/>nor<sp/>&apos;False&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">CAN_PASS_EMPTY_ENV<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.executable:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>os.environ[</highlight><highlight class="stringliteral">&apos;EMPTY_VAR&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>child<sp/>=<sp/><ref refid="classgtest__test__utils_1_1Subprocess" kindref="compound">gtest_test_utils.Subprocess</ref>(</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[sys.executable,<sp/></highlight><highlight class="stringliteral">&apos;-c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>os;<sp/>print(&apos;EMPTY_VAR&apos;<sp/>in<sp/>os.environ)&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>CAN_PASS_EMPTY_ENV<sp/>=<sp/>eval(child.output)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>this<sp/>platform<sp/>can<sp/>unset<sp/>environment<sp/>variables<sp/>in<sp/>child<sp/>processes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">#<sp/>We<sp/>set<sp/>an<sp/>env<sp/>variable<sp/>to<sp/>a<sp/>non-empty<sp/>string,<sp/>unset<sp/>it,<sp/>and<sp/>invoke</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">#<sp/>a<sp/>python<sp/>script<sp/>in<sp/>a<sp/>subprocess<sp/>to<sp/>print<sp/>whether<sp/>the<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">#<sp/>is<sp/>NO<sp/>LONGER<sp/>in<sp/>os.environ.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">#<sp/>We<sp/>use<sp/>&apos;eval&apos;<sp/>to<sp/>parse<sp/>the<sp/>child&apos;s<sp/>output<sp/>so<sp/>that<sp/>an<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">#<sp/>is<sp/>thrown<sp/>if<sp/>the<sp/>input<sp/>is<sp/>neither<sp/>&apos;True&apos;<sp/>nor<sp/>&apos;False&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">CAN_UNSET_ENV<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.executable:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>os.environ[</highlight><highlight class="stringliteral">&apos;UNSET_VAR&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;X&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>del<sp/>os.environ[</highlight><highlight class="stringliteral">&apos;UNSET_VAR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>child<sp/>=<sp/><ref refid="classgtest__test__utils_1_1Subprocess" kindref="compound">gtest_test_utils.Subprocess</ref>(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[sys.executable,<sp/></highlight><highlight class="stringliteral">&apos;-c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>os;<sp/>print(&apos;UNSET_VAR&apos;<sp/>not<sp/>in<sp/>os.environ)&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>CAN_UNSET_ENV<sp/>=<sp/>eval(child.output)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Checks<sp/>if<sp/>we<sp/>should<sp/>test<sp/>with<sp/>an<sp/>empty<sp/>filter.<sp/>This<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">#<sp/>make<sp/>sense<sp/>on<sp/>platforms<sp/>that<sp/>cannot<sp/>pass<sp/>empty<sp/>env<sp/>variables<sp/>(Win32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">#<sp/>and<sp/>on<sp/>platforms<sp/>that<sp/>cannot<sp/>unset<sp/>variables<sp/>(since<sp/>we<sp/>cannot<sp/>tell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>difference<sp/>between<sp/>&quot;&quot;<sp/>and<sp/>NULL<sp/>--<sp/>Borland<sp/>and<sp/>Solaris<sp/>&lt;<sp/>5.10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">CAN_TEST_EMPTY_FILTER<sp/>=<sp/>CAN_PASS_EMPTY_ENV<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>CAN_UNSET_ENV</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>environment<sp/>variable<sp/>for<sp/>specifying<sp/>the<sp/>test<sp/>filters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">FILTER_ENV_VAR<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;GTEST_FILTER&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>environment<sp/>variables<sp/>for<sp/>test<sp/>sharding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">TOTAL_SHARDS_ENV_VAR<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;GTEST_TOTAL_SHARDS&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">SHARD_INDEX_ENV_VAR<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;GTEST_SHARD_INDEX&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">SHARD_STATUS_FILE_ENV_VAR<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;GTEST_SHARD_STATUS_FILE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>command<sp/>line<sp/>flag<sp/>for<sp/>specifying<sp/>the<sp/>test<sp/>filters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">FILTER_FLAG<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;gtest_filter&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>command<sp/>line<sp/>flag<sp/>for<sp/>including<sp/>disabled<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">ALSO_RUN_DISABLED_TESTS_FLAG<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;gtest_also_run_disabled_tests&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Command<sp/>to<sp/>run<sp/>the<sp/>googletest-filter-unittest_<sp/>program.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">COMMAND<sp/>=<sp/><ref refid="namespacegtest__test__utils_1a89ed3717984a80ffbb7a9c92f71b86a2" kindref="member">gtest_test_utils.GetTestExecutablePath</ref>(</highlight><highlight class="stringliteral">&apos;googletest-filter-unittest_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Regex<sp/>for<sp/>determining<sp/>whether<sp/>parameterized<sp/>tests<sp/>are<sp/>enabled<sp/>in<sp/>the<sp/>binary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">PARAM_TEST_REGEX<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&apos;/ParamTest&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Regex<sp/>for<sp/>parsing<sp/>test<sp/>case<sp/>names<sp/>from<sp/>Google<sp/>Test&apos;s<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">TEST_CASE_REGEX<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&apos;^\[\-+\]<sp/>\d+<sp/>tests?<sp/>from<sp/>(\w+(/\w+)?)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Regex<sp/>for<sp/>parsing<sp/>test<sp/>names<sp/>from<sp/>Google<sp/>Test&apos;s<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">TEST_REGEX<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&apos;^\[\s*RUN\s*\].*\.(\w+(/\w+)?)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Regex<sp/>for<sp/>parsing<sp/>disabled<sp/>banner<sp/>from<sp/>Google<sp/>Test&apos;s<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">DISABLED_BANNER_REGEX<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&apos;^\[\s*DISABLED\s*\]<sp/>(.*)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>command<sp/>line<sp/>flag<sp/>to<sp/>tell<sp/>Google<sp/>Test<sp/>to<sp/>output<sp/>the<sp/>list<sp/>of<sp/>tests<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">#<sp/>will<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">LIST_TESTS_FLAG<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;--gtest_list_tests&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Indicates<sp/>whether<sp/>Google<sp/>Test<sp/>supports<sp/>death<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">SUPPORTS_DEATH_TESTS<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;HasDeathTest&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="classgtest__test__utils_1_1Subprocess" kindref="compound">gtest_test_utils.Subprocess</ref>([COMMAND,<sp/>LIST_TESTS_FLAG]).output</highlight></codeline>
<codeline lineno="129"><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Full<sp/>names<sp/>of<sp/>all<sp/>tests<sp/>in<sp/>googletest-filter-unittests_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">PARAM_TESTS<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestX/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestX/1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestY/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestY/1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqQ/ParamTest.TestX/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqQ/ParamTest.TestX/1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqQ/ParamTest.TestY/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqQ/ParamTest.TestY/1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="141"><highlight class="normal">]</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">DISABLED_TESTS<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.DISABLED_TestFour&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.DISABLED_TestFive&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.DISABLED_TestC&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DISABLED_FoobarTest.Test1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DISABLED_FoobarTest.DISABLED_Test2&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DISABLED_FoobarbazTest.TestA&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="150"><highlight class="normal">]</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>SUPPORTS_DEATH_TESTS:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>DEATH_TESTS<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;HasDeathTest.Test1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;HasDeathTest.Test2&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>]</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>DEATH_TESTS<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">#<sp/>All<sp/>the<sp/>non-disabled<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">ACTIVE_TESTS<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Abc&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestTwo&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestThree&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestA&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestB&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>DEATH_TESTS</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>PARAM_TESTS</highlight></codeline>
<codeline lineno="174"><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">param_tests_present<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Utilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">environ<sp/>=<sp/>os.environ.copy()</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">SetEnvVar(env_var,<sp/>value):</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Sets<sp/>the<sp/>env<sp/>variable<sp/>to<sp/>&apos;value&apos;;<sp/>unsets<sp/>it<sp/>when<sp/>&apos;value&apos;<sp/>is<sp/>None.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>environ[env_var]<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>env_var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>environ:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>del<sp/>environ[env_var]</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RunAndReturnOutput(args=None):</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>the<sp/>test<sp/>program<sp/>and<sp/>returns<sp/>its<sp/>output.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgtest__test__utils_1_1Subprocess" kindref="compound">gtest_test_utils.Subprocess</ref>(</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[COMMAND]<sp/>+<sp/>(args<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]),<sp/>env=environ</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>).output</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RunAndExtractTestList(args=None):</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>the<sp/>test<sp/>program<sp/>and<sp/>returns<sp/>its<sp/>exit<sp/>code<sp/>and<sp/>a<sp/>list<sp/>of<sp/>tests<sp/>run.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/><ref refid="classgtest__test__utils_1_1Subprocess" kindref="compound">gtest_test_utils.Subprocess</ref>([COMMAND]<sp/>+<sp/>(args<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]),<sp/>env=environ)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>tests_run<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>test_case<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>test<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>p.output.split(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>match<sp/>=<sp/>TEST_CASE_REGEX.match(line)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>match<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_case<sp/>=<sp/>match.group(1)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>TEST_REGEX.match(line)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>match<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/>=<sp/>match.group(1)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tests_run.append(test_case<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>+<sp/>test)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(tests_run,<sp/>p.exit_code)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RunAndExtractDisabledBannerList(args=None):</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>the<sp/>test<sp/>program<sp/>and<sp/>returns<sp/>tests<sp/>that<sp/>printed<sp/>a<sp/>disabled<sp/>banner.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/><ref refid="classgtest__test__utils_1_1Subprocess" kindref="compound">gtest_test_utils.Subprocess</ref>([COMMAND]<sp/>+<sp/>(args<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]),<sp/>env=environ)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>banners_printed<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>p.output.split(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>match<sp/>=<sp/>DISABLED_BANNER_REGEX.match(line)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>match<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>banners_printed.append(match.group(1))</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>banners_printed</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">InvokeWithModifiedEnv(extra_env,<sp/>function,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>the<sp/>given<sp/>function<sp/>and<sp/>arguments<sp/>in<sp/>a<sp/>modified<sp/>environment.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>original_env<sp/>=<sp/>environ.copy()</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>environ.update(extra_env)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>function(*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>environ.clear()</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>environ.update(original_env)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RunWithSharding(total_shards,<sp/>shard_index,<sp/>command):</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>a<sp/>test<sp/>program<sp/>shard<sp/>and<sp/>returns<sp/>exit<sp/>code<sp/>and<sp/>a<sp/>list<sp/>of<sp/>tests<sp/>run.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>extra_env<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SHARD_INDEX_ENV_VAR:<sp/>str(shard_index),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TOTAL_SHARDS_ENV_VAR:<sp/>str(total_shards),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InvokeWithModifiedEnv(extra_env,<sp/>RunAndExtractTestList,<sp/>command)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>unit<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest" kindref="compound">GTestFilterUnitTest</ref>(<ref refid="namespacegtest__test__utils_1a70bb257f4161391d238b89b85d543ddc" kindref="member">gtest_test_utils.TestCase</ref>):</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>the<sp/>env<sp/>variable<sp/>or<sp/>the<sp/>command<sp/>line<sp/>flag<sp/>to<sp/>filter<sp/>tests.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Utilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ace0dfd41efa0dc5c019c1e96e6ce8137" kindref="member">AssertSetEqual</ref>(self,<sp/>lhs,<sp/>rhs):</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Asserts<sp/>that<sp/>two<sp/>sets<sp/>are<sp/>equal.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>elem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lhs:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(elem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>rhs,<sp/></highlight><highlight class="stringliteral">&apos;%s<sp/>in<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(elem,<sp/>rhs))</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>elem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>rhs:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(elem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lhs,<sp/></highlight><highlight class="stringliteral">&apos;%s<sp/>in<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(elem,<sp/>lhs))</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1adcd73eb79d053b0baf4aa600044c4d0e" kindref="member">AssertPartitionIsValid</ref>(self,<sp/>set_var,<sp/>list_of_sets):</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Asserts<sp/>that<sp/>list_of_sets<sp/>is<sp/>a<sp/>valid<sp/>partition<sp/>of<sp/>set_var.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>full_partition<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>slice_var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list_of_sets:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>full_partition.extend(slice_var)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(len(set_var),<sp/>len(full_partition))</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(set(set_var),<sp/>set(full_partition))</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a34dfc0ab056c19a6644fab9880a49c42" kindref="member">AdjustForParameterizedTests</ref>(self,<sp/>tests_to_run):</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Adjust<sp/>tests_to_run<sp/>in<sp/>case<sp/>value<sp/>parameterized<sp/>tests<sp/>are<sp/>disabled.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>param_tests_present</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>param_tests_present:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list(set(tests_to_run)<sp/>-<sp/>set(PARAM_TESTS))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tests_to_run</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(self,<sp/>gtest_filter,<sp/>tests_to_run):</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Checks<sp/>that<sp/>the<sp/>binary<sp/>runs<sp/>correct<sp/>set<sp/>of<sp/>tests<sp/>for<sp/>a<sp/>given<sp/>filter.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>tests_to_run<sp/>=<sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a34dfc0ab056c19a6644fab9880a49c42" kindref="member">AdjustForParameterizedTests</ref>(tests_to_run)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>First,<sp/>tests<sp/>using<sp/>the<sp/>environment<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Windows<sp/>removes<sp/>empty<sp/>variables<sp/>from<sp/>the<sp/>environment<sp/>when<sp/>passing<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>a<sp/>new<sp/>process.<sp/><sp/>This<sp/>means<sp/>it<sp/>is<sp/>impossible<sp/>to<sp/>pass<sp/>an<sp/>empty<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>into<sp/>a<sp/>process<sp/>using<sp/>the<sp/>environment<sp/>variable.<sp/><sp/>However,<sp/>we<sp/>can<sp/>still</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>test<sp/>the<sp/>case<sp/>when<sp/>the<sp/>variable<sp/>is<sp/>not<sp/>supplied<sp/>(i.e.,<sp/>gtest_filter<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>None).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pylint:<sp/>disable=g-explicit-bool-comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>CAN_TEST_EMPTY_FILTER<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>gtest_filter<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetEnvVar(FILTER_ENV_VAR,<sp/>gtest_filter)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tests_run<sp/>=<sp/>RunAndExtractTestList()[0]</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetEnvVar(FILTER_ENV_VAR,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ace0dfd41efa0dc5c019c1e96e6ce8137" kindref="member">AssertSetEqual</ref>(tests_run,<sp/>tests_to_run)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pylint:<sp/>enable=g-explicit-bool-comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Next,<sp/>tests<sp/>using<sp/>the<sp/>command<sp/>line<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gtest_filter<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;--%s=%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(FILTER_FLAG,<sp/>gtest_filter)]</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>tests_run<sp/>=<sp/>RunAndExtractTestList(args)[0]</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ace0dfd41efa0dc5c019c1e96e6ce8137" kindref="member">AssertSetEqual</ref>(tests_run,<sp/>tests_to_run)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gtest_filter,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total_shards,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tests_to_run,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args=None,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_exit_0=False,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>):</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Checks<sp/>that<sp/>binary<sp/>runs<sp/>correct<sp/>tests<sp/>for<sp/>the<sp/>given<sp/>filter<sp/>and<sp/>shard.</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Runs<sp/>all<sp/>shards<sp/>of<sp/>googletest-filter-unittest_<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>given<sp/>filter,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>verifies<sp/>that<sp/>the<sp/>right<sp/>set<sp/>of<sp/>tests<sp/>were<sp/>run.<sp/>The<sp/>union<sp/>of<sp/>tests<sp/>run</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>on<sp/>each<sp/>shard<sp/>should<sp/>be<sp/>identical<sp/>to<sp/>tests_to_run,<sp/>without<sp/>duplicates.</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>If<sp/>check_exit_0,<sp/>.</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gtest_filter:<sp/>A<sp/>filter<sp/>to<sp/>apply<sp/>to<sp/>the<sp/>tests.</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total_shards:<sp/>A<sp/>total<sp/>number<sp/>of<sp/>shards<sp/>to<sp/>split<sp/>test<sp/>run<sp/>into.</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tests_to_run:<sp/>A<sp/>set<sp/>of<sp/>tests<sp/>expected<sp/>to<sp/>run.</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args:<sp/>Arguments<sp/>to<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"><sp/>to<sp/>the<sp/>to<sp/>the<sp/>test<sp/>binary.</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_exit_0:<sp/>When<sp/>set<sp/>to<sp/>a<sp/>true<sp/>value,<sp/>make<sp/>sure<sp/>that<sp/>all<sp/>shards<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>tests_to_run<sp/>=<sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a34dfc0ab056c19a6644fab9880a49c42" kindref="member">AdjustForParameterizedTests</ref>(tests_to_run)</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Windows<sp/>removes<sp/>empty<sp/>variables<sp/>from<sp/>the<sp/>environment<sp/>when<sp/>passing<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>a<sp/>new<sp/>process.<sp/><sp/>This<sp/>means<sp/>it<sp/>is<sp/>impossible<sp/>to<sp/>pass<sp/>an<sp/>empty<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>into<sp/>a<sp/>process<sp/>using<sp/>the<sp/>environment<sp/>variable.<sp/><sp/>However,<sp/>we<sp/>can<sp/>still</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>test<sp/>the<sp/>case<sp/>when<sp/>the<sp/>variable<sp/>is<sp/>not<sp/>supplied<sp/>(i.e.,<sp/>gtest_filter<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>None).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pylint:<sp/>disable=g-explicit-bool-comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>CAN_TEST_EMPTY_FILTER<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>gtest_filter<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetEnvVar(FILTER_ENV_VAR,<sp/>gtest_filter)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partition<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>total_shards):</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tests_run,<sp/>exit_code)<sp/>=<sp/>RunWithSharding(total_shards,<sp/>i,<sp/>args)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>check_exit_0:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(0,<sp/>exit_code)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partition.append(tests_run)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1adcd73eb79d053b0baf4aa600044c4d0e" kindref="member">AssertPartitionIsValid</ref>(tests_to_run,<sp/>partition)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetEnvVar(FILTER_ENV_VAR,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pylint:<sp/>enable=g-explicit-bool-comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ad4202582f4fbc27a7e4ff9e751b1046f" kindref="member">RunAndVerifyAllowingDisabled</ref>(self,<sp/>gtest_filter,<sp/>tests_to_run):</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Checks<sp/>that<sp/>the<sp/>binary<sp/>runs<sp/>correct<sp/>set<sp/>of<sp/>tests<sp/>for<sp/>the<sp/>given<sp/>filter.</highlight></codeline>
<codeline lineno="363"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="364"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Runs<sp/>googletest-filter-unittest_<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>given<sp/>filter,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>enables</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>disabled<sp/>tests.<sp/>Verifies<sp/>that<sp/>the<sp/>right<sp/>set<sp/>of<sp/>tests<sp/>were<sp/>run.</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gtest_filter:<sp/>A<sp/>filter<sp/>to<sp/>apply<sp/>to<sp/>the<sp/>tests.</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tests_to_run:<sp/>A<sp/>set<sp/>of<sp/>tests<sp/>expected<sp/>to<sp/>run.</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>tests_to_run<sp/>=<sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a34dfc0ab056c19a6644fab9880a49c42" kindref="member">AdjustForParameterizedTests</ref>(tests_to_run)</highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Construct<sp/>the<sp/>command<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;--%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>ALSO_RUN_DISABLED_TESTS_FLAG]</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gtest_filter<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args.append(</highlight><highlight class="stringliteral">&apos;--%s=%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(FILTER_FLAG,<sp/>gtest_filter))</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>tests_run<sp/>=<sp/>RunAndExtractTestList(args)[0]</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ace0dfd41efa0dc5c019c1e96e6ce8137" kindref="member">AssertSetEqual</ref>(tests_run,<sp/>tests_to_run)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a5aedf9d24243167acee87c9ddba82cc7" kindref="member">setUp</ref>(self):</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Sets<sp/>up<sp/>test<sp/>case.</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Determines<sp/>whether<sp/>value-parameterized<sp/>tests<sp/>are<sp/>enabled<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>binary<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>sets<sp/>the<sp/>flags<sp/>accordingly.</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>param_tests_present</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>param_tests_present<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>param_tests_present<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PARAM_TEST_REGEX.search(RunAndReturnOutput())<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1aeef08240778b82270e432ce3ab1186eb" kindref="member">testDefaultBehavior</ref>(self):</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>the<sp/>behavior<sp/>of<sp/>not<sp/>specifying<sp/>the<sp/>filter.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>ACTIVE_TESTS)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a5bde3274cf0a76dc6914a4781d8b6429" kindref="member">testDefaultBehaviorWithShards</ref>(self):</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>the<sp/>behavior<sp/>without<sp/>the<sp/>filter,<sp/>with<sp/>sharding<sp/>enabled.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>1,<sp/>ACTIVE_TESTS)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>2,<sp/>ACTIVE_TESTS)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>len(ACTIVE_TESTS)<sp/>-<sp/>1,<sp/>ACTIVE_TESTS)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>len(ACTIVE_TESTS),<sp/>ACTIVE_TESTS)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>len(ACTIVE_TESTS)<sp/>+<sp/>1,<sp/>ACTIVE_TESTS)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1aeaa447047f82973a4ef02e20d5cb2d19" kindref="member">testEmptyFilter</ref>(self):</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>an<sp/>empty<sp/>filter.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>1,<sp/>[])</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>2,<sp/>[])</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a06eb05518484509b13dc139aafd610ce" kindref="member">testBadFilter</ref>(self):</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>a<sp/>filter<sp/>that<sp/>matches<sp/>nothing.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;BadFilter&apos;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ad4202582f4fbc27a7e4ff9e751b1046f" kindref="member">RunAndVerifyAllowingDisabled</ref>(</highlight><highlight class="stringliteral">&apos;BadFilter&apos;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a2fb67be78a3c92dcbae64479b220fe0f" kindref="member">testFullName</ref>(self):</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>filtering<sp/>by<sp/>full<sp/>name.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ad4202582f4fbc27a7e4ff9e751b1046f" kindref="member">RunAndVerifyAllowingDisabled</ref>(</highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">,<sp/>5,<sp/>[</highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a6b3267ec5eb1a4d335d2f969d28329dd" kindref="member">testUniversalFilters</ref>(self):</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>filters<sp/>that<sp/>match<sp/>everything.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;*&apos;</highlight><highlight class="normal">,<sp/>ACTIVE_TESTS)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;*.*&apos;</highlight><highlight class="normal">,<sp/>ACTIVE_TESTS)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight><highlight class="stringliteral">&apos;*.*&apos;</highlight><highlight class="normal">,<sp/>len(ACTIVE_TESTS)<sp/>-<sp/>3,<sp/>ACTIVE_TESTS)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ad4202582f4fbc27a7e4ff9e751b1046f" kindref="member">RunAndVerifyAllowingDisabled</ref>(</highlight><highlight class="stringliteral">&apos;*&apos;</highlight><highlight class="normal">,<sp/>ACTIVE_TESTS<sp/>+<sp/>DISABLED_TESTS)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ad4202582f4fbc27a7e4ff9e751b1046f" kindref="member">RunAndVerifyAllowingDisabled</ref>(</highlight><highlight class="stringliteral">&apos;*.*&apos;</highlight><highlight class="normal">,<sp/>ACTIVE_TESTS<sp/>+<sp/>DISABLED_TESTS)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ac67334a27bf7aaf4d817d41e6bcd4469" kindref="member">testFilterByTestCase</ref>(self):</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>filtering<sp/>by<sp/>test<sp/>case<sp/>name.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;FooTest.*&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;FooTest.Abc&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>BAZ_TESTS<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;BazTest.TestOne&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestA&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestB&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;BazTest.*&apos;</highlight><highlight class="normal">,<sp/>BAZ_TESTS)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ad4202582f4fbc27a7e4ff9e751b1046f" kindref="member">RunAndVerifyAllowingDisabled</ref>(</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.*&apos;</highlight><highlight class="normal">,<sp/>BAZ_TESTS<sp/>+<sp/>[</highlight><highlight class="stringliteral">&apos;BazTest.DISABLED_TestC&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a5665345aa2e94412fd65b19bc5077342" kindref="member">testFilterByTest</ref>(self):</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>filtering<sp/>by<sp/>test<sp/>name.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;*.TestOne&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;BarTest.TestOne&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestOne&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ada479753ed1c6007647252922f713ffc" kindref="member">testFilterDisabledTests</ref>(self):</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Select<sp/>only<sp/>the<sp/>disabled<sp/>tests<sp/>to<sp/>run.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;DISABLED_FoobarTest.Test1&apos;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ad4202582f4fbc27a7e4ff9e751b1046f" kindref="member">RunAndVerifyAllowingDisabled</ref>(</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DISABLED_FoobarTest.Test1&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;DISABLED_FoobarTest.Test1&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;*DISABLED_*&apos;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ad4202582f4fbc27a7e4ff9e751b1046f" kindref="member">RunAndVerifyAllowingDisabled</ref>(</highlight><highlight class="stringliteral">&apos;*DISABLED_*&apos;</highlight><highlight class="normal">,<sp/>DISABLED_TESTS)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;*.DISABLED_*&apos;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ad4202582f4fbc27a7e4ff9e751b1046f" kindref="member">RunAndVerifyAllowingDisabled</ref>(</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;*.DISABLED_*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.DISABLED_TestFour&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.DISABLED_TestFive&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.DISABLED_TestC&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DISABLED_FoobarTest.DISABLED_Test2&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;DISABLED_*&apos;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ad4202582f4fbc27a7e4ff9e751b1046f" kindref="member">RunAndVerifyAllowingDisabled</ref>(</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DISABLED_*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DISABLED_FoobarTest.Test1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DISABLED_FoobarTest.DISABLED_Test2&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;DISABLED_FoobarbazTest.TestA&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a6bc13581aeb86a199706fd2592b5b5e5" kindref="member">testWildcardInTestCaseName</ref>(self):</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>using<sp/>wildcard<sp/>in<sp/>the<sp/>test<sp/>case<sp/>name.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;*a*.*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestTwo&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestThree&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestA&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestB&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>DEATH_TESTS</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>PARAM_TESTS,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a57c51a39e4e5578dc6e0a0dd47c2875c" kindref="member">testWildcardInTestName</ref>(self):</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>using<sp/>wildcard<sp/>in<sp/>the<sp/>test<sp/>name.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;*.*A*&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;FooTest.Abc&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestA&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a3a7d87e91ab92004b55affc8a0f76305" kindref="member">testFilterWithoutDot</ref>(self):</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>a<sp/>filter<sp/>that<sp/>has<sp/>no<sp/>&apos;.&apos;<sp/>in<sp/>it.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;*z*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestA&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestB&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a7b2e7e1424bd6be9cbd15a401017c442" kindref="member">testTwoPatterns</ref>(self):</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>filters<sp/>that<sp/>consist<sp/>of<sp/>two<sp/>patterns.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Foo*.*:*A*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Abc&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestA&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>An<sp/>empty<sp/>pattern<sp/>+<sp/>a<sp/>non-empty<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;:*A*&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;FooTest.Abc&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestA&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1aab0836fe1e7c7c6af6b8b94f08475d3b" kindref="member">testThreePatterns</ref>(self):</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>filters<sp/>that<sp/>consist<sp/>of<sp/>three<sp/>patterns.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;*oo*:*A*:*One&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Abc&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestA&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>2nd<sp/>pattern<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;*oo*::*One&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Abc&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>last<sp/>2<sp/>patterns<sp/>are<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;*oo*::&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Abc&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">testNegativeFilters(self):</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;*-BazTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Abc&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestTwo&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestThree&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestA&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestB&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>DEATH_TESTS</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>PARAM_TESTS,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;*-FooTest.Abc:BazTest.*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;FooTest.Xyz&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestTwo&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestThree&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>DEATH_TESTS</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>PARAM_TESTS,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.*-BarTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestTwo&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestThree&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Tests<sp/>without<sp/>leading<sp/>&apos;*&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;-FooTest.Abc:FooTest.Xyz:BazTest.*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestOne&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestTwo&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.TestThree&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>DEATH_TESTS</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>PARAM_TESTS,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Value<sp/>parameterized<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight><highlight class="stringliteral">&apos;*/*&apos;</highlight><highlight class="normal">,<sp/>PARAM_TESTS)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Value<sp/>parameterized<sp/>tests<sp/>filtering<sp/>by<sp/>the<sp/>sequence<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestX/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestX/1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestY/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestY/1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Value<sp/>parameterized<sp/>tests<sp/>filtering<sp/>by<sp/>the<sp/>test<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1af70e720e3178314cb7ffb4268594ef2b" kindref="member">RunAndVerify</ref>(</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;*/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestX/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestY/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqQ/ParamTest.TestX/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqQ/ParamTest.TestY/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a3cfc062fbcc396bfaa94184e10e3ae39" kindref="member">testFlagOverridesEnvVar</ref>(self):</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>that<sp/>the<sp/>filter<sp/>flag<sp/>overrides<sp/>the<sp/>filtering<sp/>env.<sp/>variable.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>SetEnvVar(FILTER_ENV_VAR,<sp/></highlight><highlight class="stringliteral">&apos;Foo*&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;--%s=%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(FILTER_FLAG,<sp/></highlight><highlight class="stringliteral">&apos;*One&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>tests_run<sp/>=<sp/>RunAndExtractTestList(args)[0]</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>SetEnvVar(FILTER_ENV_VAR,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ace0dfd41efa0dc5c019c1e96e6ce8137" kindref="member">AssertSetEqual</ref>(tests_run,<sp/>[</highlight><highlight class="stringliteral">&apos;BarTest.TestOne&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;BazTest.TestOne&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a48fd50fa58d23ba0521a9388aea0c688" kindref="member">testShardStatusFileIsCreated</ref>(self):</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>that<sp/>the<sp/>shard<sp/>file<sp/>is<sp/>created<sp/>if<sp/>specified<sp/>in<sp/>the<sp/>environment.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>shard_status_file<sp/>=<sp/>os.path.join(</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegtest__test__utils_1a25987e1cd76e93068b2afe6bac909d12" kindref="member">gtest_test_utils.GetTempDir</ref>(),<sp/></highlight><highlight class="stringliteral">&apos;shard_status_file&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertTrue(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(shard_status_file))</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>extra_env<sp/>=<sp/>{SHARD_STATUS_FILE_ENV_VAR:<sp/>shard_status_file}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InvokeWithModifiedEnv(extra_env,<sp/>RunAndReturnOutput)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(os.path.exists(shard_status_file))</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os.remove(shard_status_file)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a7c436b2599ace8d6e32d17fd08a98178" kindref="member">testShardStatusFileIsCreatedWithListTests</ref>(self):</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>that<sp/>the<sp/>shard<sp/>file<sp/>is<sp/>created<sp/>with<sp/>the<sp/>&quot;list_tests&quot;<sp/>flag.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>shard_status_file<sp/>=<sp/>os.path.join(</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegtest__test__utils_1a25987e1cd76e93068b2afe6bac909d12" kindref="member">gtest_test_utils.GetTempDir</ref>(),<sp/></highlight><highlight class="stringliteral">&apos;shard_status_file2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertTrue(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(shard_status_file))</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>extra_env<sp/>=<sp/>{SHARD_STATUS_FILE_ENV_VAR:<sp/>shard_status_file}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/>InvokeWithModifiedEnv(</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_env,<sp/>RunAndReturnOutput,<sp/>[LIST_TESTS_FLAG]</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>assertion<sp/>ensures<sp/>that<sp/>Google<sp/>Test<sp/>enumerated<sp/>the<sp/>tests<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>opposed<sp/>to<sp/>running<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;[==========]&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>output,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Unexpected<sp/>output<sp/>during<sp/>test<sp/>enumeration.\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Please<sp/>ensure<sp/>that<sp/>LIST_TESTS_FLAG<sp/>is<sp/>assigned<sp/>the\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;correct<sp/>flag<sp/>value<sp/>for<sp/>listing<sp/>Google<sp/>Test<sp/>tests.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(os.path.exists(shard_status_file))</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os.remove(shard_status_file)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1abc115685aa4d1502c481d5898247502b" kindref="member">testDisabledBanner</ref>(self):</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>that<sp/>the<sp/>disabled<sp/>banner<sp/>prints<sp/>only<sp/>tests<sp/>that<sp/>match<sp/>filter.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>make_filter<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s:<sp/>[</highlight><highlight class="stringliteral">&apos;--%s=%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(FILTER_FLAG,<sp/>s)]</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>banners<sp/>=<sp/>RunAndExtractDisabledBannerList(make_filter(</highlight><highlight class="stringliteral">&apos;*&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ace0dfd41efa0dc5c019c1e96e6ce8137" kindref="member">AssertSetEqual</ref>(</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>banners,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.DISABLED_TestFour&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BarTest.DISABLED_TestFive&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BazTest.DISABLED_TestC&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>banners<sp/>=<sp/>RunAndExtractDisabledBannerList(make_filter(</highlight><highlight class="stringliteral">&apos;Bar*&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ace0dfd41efa0dc5c019c1e96e6ce8137" kindref="member">AssertSetEqual</ref>(</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>banners,<sp/>[</highlight><highlight class="stringliteral">&apos;BarTest.DISABLED_TestFour&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;BarTest.DISABLED_TestFive&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>banners<sp/>=<sp/>RunAndExtractDisabledBannerList(make_filter(</highlight><highlight class="stringliteral">&apos;*-Bar*&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1ace0dfd41efa0dc5c019c1e96e6ce8137" kindref="member">AssertSetEqual</ref>(banners,<sp/>[</highlight><highlight class="stringliteral">&apos;BazTest.DISABLED_TestC&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>SUPPORTS_DEATH_TESTS:</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a8998f6f4842fa2cbde0428fa0c4ba437" kindref="member">testShardingWorksWithDeathTests</ref>(self):</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>integration<sp/>with<sp/>death<sp/>tests<sp/>and<sp/>sharding.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gtest_filter<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;HasDeathTest.*:SeqP/*&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expected_tests<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;HasDeathTest.Test1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;HasDeathTest.Test2&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestX/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestX/1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestY/0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SeqP/ParamTest.TestY/1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;--gtest_death_test_style=threadsafe&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;--gtest_death_test_style=fast&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>]:</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtest_filter,<sp/>3,<sp/>expected_tests,<sp/>check_exit_0=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>args=[flag]</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-filter-unittest_1_1GTestFilterUnitTest_1a9facb1098281a67776081c772fdd78d5" kindref="member">RunAndVerifyWithSharding</ref>(</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtest_filter,<sp/>5,<sp/>expected_tests,<sp/>check_exit_0=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>args=[flag]</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><ref refid="namespacegtest__test__utils_1a5361b42d9c6843b5b117ead4d1c58cc5" kindref="member">gtest_test_utils.Main</ref>()</highlight></codeline>
    </programlisting>
    <location file="build/_deps/googletest-src/googletest/test/googletest-filter-unittest.py"/>
  </compounddef>
</doxygen>
