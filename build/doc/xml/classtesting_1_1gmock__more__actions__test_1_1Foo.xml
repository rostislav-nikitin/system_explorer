<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtesting_1_1gmock__more__actions__test_1_1Foo" kind="class" language="C++" prot="public">
    <compoundname>testing::gmock_more_actions_test::Foo</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1a967ab15b8eefa21c8b07539ec84ef1b8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int testing::gmock_more_actions_test::Foo::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="189" column="7" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1ad2603a65b94e019c75f4227787b9177e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::gmock_more_actions_test::Foo::Foo</definition>
        <argsstring>()</argsstring>
        <name>Foo</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::Foo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="141" column="3" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1ad6ba38dbb9b1594ac178630f07c4baa5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_more_actions_test::Foo::Nullary</definition>
        <argsstring>() const</argsstring>
        <name>Nullary</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::Nullary</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="143" column="7" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1a68d2b46d6cc7d51979b0254940af6090" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>short testing::gmock_more_actions_test::Foo::Unary</definition>
        <argsstring>(long x)</argsstring>
        <name>Unary</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::Unary</qualifiedname>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="145" column="9" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1a8ee56742c6c025af680617464c71ecef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::gmock_more_actions_test::Foo::Binary</definition>
        <argsstring>(const std::string &amp;str, char c) const</argsstring>
        <name>Binary</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::Binary</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="147" column="15" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1afc5b86988210ad598fa3a2a9822297e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_more_actions_test::Foo::Ternary</definition>
        <argsstring>(int x, bool y, char z)</argsstring>
        <name>Ternary</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::Ternary</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>y</declname>
        </param>
        <param>
          <type>char</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="149" column="7" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1a69ca68e84528904032bad9533a23fb0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_more_actions_test::Foo::SumOf4</definition>
        <argsstring>(int a, int b, int c, int d) const</argsstring>
        <name>SumOf4</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::SumOf4</qualifiedname>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="151" column="7" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1abc041eb7a8e8211656495f2540f315ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_more_actions_test::Foo::SumOfLast2</definition>
        <argsstring>(Unused, Unused, int a, int b) const</argsstring>
        <name>SumOfLast2</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::SumOfLast2</qualifiedname>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1IgnoredValue" kindref="compound">Unused</ref></type>
        </param>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1IgnoredValue" kindref="compound">Unused</ref></type>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="155" column="7" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1a55fb0cdc224c450f401e0fea4f979512" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_more_actions_test::Foo::SumOf5</definition>
        <argsstring>(int a, int b, int c, int d, int e)</argsstring>
        <name>SumOf5</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::SumOf5</qualifiedname>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="157" column="7" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1a34b5ae7cd4620331af92c637e3534bc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::gmock_more_actions_test::Foo::SumOf6</definition>
        <argsstring>(int a, int b, int c, int d, int e, int f)</argsstring>
        <name>SumOf6</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::SumOf6</qualifiedname>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="159" column="7" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1a5ff9313371e65a91b086afdc2032b0eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::gmock_more_actions_test::Foo::Concat7</definition>
        <argsstring>(const char *s1, const char *s2, const char *s3, const char *s4, const char *s5, const char *s6, const char *s7)</argsstring>
        <name>Concat7</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::Concat7</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s4</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s5</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s6</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="163" column="15" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="163" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1a25b91cea8633d026fe3f4a36c1574b8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::gmock_more_actions_test::Foo::Concat8</definition>
        <argsstring>(const char *s1, const char *s2, const char *s3, const char *s4, const char *s5, const char *s6, const char *s7, const char *s8)</argsstring>
        <name>Concat8</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::Concat8</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s4</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s5</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s6</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s7</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="169" column="15" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1a8f5b145b0cd23055630b2f9d10b3f45b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::gmock_more_actions_test::Foo::Concat9</definition>
        <argsstring>(const char *s1, const char *s2, const char *s3, const char *s4, const char *s5, const char *s6, const char *s7, const char *s8, const char *s9)</argsstring>
        <name>Concat9</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::Concat9</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s4</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s5</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s6</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s7</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s8</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s9</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="175" column="15" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1gmock__more__actions__test_1_1Foo_1ad5b1d2dd1bcec98fdc90a05487ec3b14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string testing::gmock_more_actions_test::Foo::Concat10</definition>
        <argsstring>(const char *s1, const char *s2, const char *s3, const char *s4, const char *s5, const char *s6, const char *s7, const char *s8, const char *s9, const char *s10)</argsstring>
        <name>Concat10</name>
        <qualifiedname>testing::gmock_more_actions_test::Foo::Concat10</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s4</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s5</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s6</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s7</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s8</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s9</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s10</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="181" column="15" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="181" bodyend="186"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" line="139" column="1" bodyfile="build/_deps/googletest-src/googlemock/test/gmock-more-actions_test.cc" bodystart="139" bodyend="190"/>
    <listofallmembers>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1a8ee56742c6c025af680617464c71ecef" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>Binary</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1ad5b1d2dd1bcec98fdc90a05487ec3b14" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>Concat10</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1a5ff9313371e65a91b086afdc2032b0eb" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>Concat7</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1a25b91cea8633d026fe3f4a36c1574b8e" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>Concat8</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1a8f5b145b0cd23055630b2f9d10b3f45b" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>Concat9</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1ad2603a65b94e019c75f4227787b9177e" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>Foo</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1ad6ba38dbb9b1594ac178630f07c4baa5" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>Nullary</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1a69ca68e84528904032bad9533a23fb0a" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>SumOf4</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1a55fb0cdc224c450f401e0fea4f979512" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>SumOf5</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1a34b5ae7cd4620331af92c637e3534bc4" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>SumOf6</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1abc041eb7a8e8211656495f2540f315ec" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>SumOfLast2</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1afc5b86988210ad598fa3a2a9822297e4" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>Ternary</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1a68d2b46d6cc7d51979b0254940af6090" prot="public" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>Unary</name></member>
      <member refid="classtesting_1_1gmock__more__actions__test_1_1Foo_1a967ab15b8eefa21c8b07539ec84ef1b8" prot="private" virt="non-virtual"><scope>testing::gmock_more_actions_test::Foo</scope><name>value_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
