<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="googletest-break-on-failure-unittest_8py" kind="file" language="Python">
    <compoundname>googletest-break-on-failure-unittest.py</compoundname>
    <innerclass refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest" prot="public">googletest-break-on-failure-unittest::GTestBreakOnFailureUnitTest</innerclass>
    <innernamespace refid="namespacegoogletest-break-on-failure-unittest">googletest-break-on-failure-unittest</innernamespace>
    <innernamespace refid="namespacegoogletest">googletest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>2006,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="namespacegoogletest" refkind="compound"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Unit<sp/>test<sp/>for<sp/>Google<sp/>Test&apos;s<sp/>break-on-failure<sp/>mode.</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">A<sp/>user<sp/>can<sp/>ask<sp/>Google<sp/>Test<sp/>to<sp/>seg-fault<sp/>when<sp/>an<sp/>assertion<sp/>fails,<sp/>using</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">either<sp/>the<sp/>GTEST_BREAK_ON_FAILURE<sp/>environment<sp/>variable<sp/>or<sp/>the</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">--gtest_break_on_failure<sp/>flag.<sp/><sp/>This<sp/>script<sp/>tests<sp/>such<sp/>functionality</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">by<sp/>invoking<sp/>googletest-</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">-on-failure-unittest_<sp/>(a<sp/>program<sp/>written<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">Google<sp/>Test)<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>different<sp/>environments<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>command<sp/>line<sp/>flags.</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral">import<sp/>os</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral">from<sp/>googletest.test<sp/>import<sp/>gtest_test_utils</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral">#<sp/>Constants.</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral">IS_WINDOWS<sp/>=<sp/>os.name<sp/>==<sp/>&apos;nt&apos;</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral">#<sp/>The<sp/>environment<sp/>variable<sp/>for<sp/>enabling/disabling<sp/>the<sp/>break-on-failure<sp/>mode.</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral">BREAK_ON_FAILURE_ENV_VAR<sp/>=<sp/>&apos;GTEST_BREAK_ON_FAILURE&apos;</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral">#<sp/>The<sp/>command<sp/>line<sp/>flag<sp/>for<sp/>enabling/disabling<sp/>the<sp/>break-on-failure<sp/>mode.</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral">BREAK_ON_FAILURE_FLAG<sp/>=<sp/>&apos;gtest_break_on_failure&apos;</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral">#<sp/>The<sp/>environment<sp/>variable<sp/>for<sp/>enabling/disabling<sp/>the<sp/>throw-on-failure<sp/>mode.</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral">THROW_ON_FAILURE_ENV_VAR<sp/>=<sp/>&apos;GTEST_THROW_ON_FAILURE&apos;</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral">#<sp/>The<sp/>environment<sp/>variable<sp/>for<sp/>enabling/disabling<sp/>the<sp/>catch-exceptions<sp/>mode.</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral">CATCH_EXCEPTIONS_ENV_VAR<sp/>=<sp/>&apos;GTEST_CATCH_EXCEPTIONS&apos;</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral">#<sp/>Path<sp/>to<sp/>the<sp/>googletest-break-on-failure-unittest_<sp/>program.</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral">EXE_PATH<sp/>=<sp/>gtest_test_utils.GetTestExecutablePath(</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;googletest-break-on-failure-unittest_&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">environ<sp/>=<sp/>gtest_test_utils.environ</highlight></codeline>
<codeline lineno="67"><highlight class="normal">SetEnvVar<sp/>=<sp/>gtest_test_utils.SetEnvVar</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tests<sp/>in<sp/>this<sp/>file<sp/>run<sp/>a<sp/>Google-Test-based<sp/>test<sp/>program<sp/>and<sp/>expect<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">#<sp/>to<sp/>terminate<sp/>prematurely.<sp/><sp/>Therefore<sp/>they<sp/>are<sp/>incompatible<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>premature-exit-file<sp/>protocol<sp/>by<sp/>design.<sp/><sp/>Unset<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">#<sp/>premature-exit<sp/>filepath<sp/>to<sp/>prevent<sp/>Google<sp/>Test<sp/>from<sp/>creating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">SetEnvVar(gtest_test_utils.PREMATURE_EXIT_FILE_ENV_VAR,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">Run(command):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>a<sp/>command;<sp/>returns<sp/>1<sp/>if<sp/>it<sp/>was<sp/>killed<sp/>by<sp/>a<sp/>signal,<sp/>or<sp/>0<sp/>otherwise.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/><ref refid="classgtest__test__utils_1_1Subprocess" kindref="compound">gtest_test_utils.Subprocess</ref>(command,<sp/>env=environ)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>p.terminated_by_signal:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest" kindref="compound">GTestBreakOnFailureUnitTest</ref>(<ref refid="namespacegtest__test__utils_1a70bb257f4161391d238b89b85d543ddc" kindref="member">gtest_test_utils.TestCase</ref>):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Unit<sp/>test<sp/>for<sp/>Google<sp/>Test&apos;s<sp/>break-on-failure<sp/>mode.</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/>Tests<sp/>using<sp/>the<sp/>GTEST_BREAK_ON_FAILURE<sp/>environment<sp/>variable<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>the<sp/>--gtest_break_on_failure<sp/>flag<sp/>to<sp/>turn<sp/>assertion<sp/>failures<sp/>into</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>segmentation<sp/>faults.</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(self,<sp/>env_var_value,<sp/>flag_value,<sp/>expect_seg_fault):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Runs<sp/>googletest-break-on-failure-unittest_<sp/>and<sp/>verifies<sp/>its<sp/>behavior.</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Runs<sp/>googletest-</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">-on-failure-unittest_<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>verifies<sp/>that<sp/>it<sp/>does</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>does<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal">)<sp/>have<sp/>a<sp/>seg-fault.</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env_var_value:<sp/><sp/><sp/><sp/>value<sp/>of<sp/>the<sp/>GTEST_BREAK_ON_FAILURE<sp/>environment</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>variable<sp/>should<sp/>be<sp/>unset.</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag_value:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>of<sp/>the<sp/>--gtest_break_on_failure<sp/>flag;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>should<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>be<sp/>present.</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expect_seg_fault:<sp/>1<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>program<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>expected<sp/>to<sp/>generate<sp/>a<sp/>seg-fault;<sp/>0</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherwise.</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>SetEnvVar(BREAK_ON_FAILURE_ENV_VAR,<sp/>env_var_value)</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>env_var_value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env_var_value_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>is<sp/>not<sp/>set&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env_var_value_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal"><sp/>+<sp/>env_var_value</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag_value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>flag_value<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;--%s=0&apos;</highlight><highlight class="normal"><sp/>%<sp/>BREAK_ON_FAILURE_FLAG</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;--%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>BREAK_ON_FAILURE_FLAG</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>command<sp/>=<sp/>[EXE_PATH]</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>command.append(flag)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>expect_seg_fault:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>should_or_not<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;should&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>should_or_not<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;should<sp/>not&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>has_seg_fault<sp/>=<sp/>Run(command)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>SetEnvVar(BREAK_ON_FAILURE_ENV_VAR,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;when<sp/>%s%s,<sp/>an<sp/>assertion<sp/>failure<sp/>in<sp/>&quot;%s&quot;<sp/>%s<sp/>cause<sp/>a<sp/>seg-fault.&apos;</highlight><highlight class="normal"><sp/>%<sp/>(</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BREAK_ON_FAILURE_ENV_VAR,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env_var_value_msg,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join(command),</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_or_not,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertTrue(has_seg_fault<sp/>==<sp/>expect_seg_fault,<sp/>msg)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a68448a786ffe492e830d82ee1a22742e" kindref="member">testDefaultBehavior</ref>(self):</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>the<sp/>behavior<sp/>of<sp/>the<sp/>default<sp/>mode.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(env_var_value=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>flag_value=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>expect_seg_fault=0)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a8981e95089e39d0c06fe0dd02dcb9bb7" kindref="member">testEnvVar</ref>(self):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>using<sp/>the<sp/>GTEST_BREAK_ON_FAILURE<sp/>environment<sp/>variable.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(env_var_value=</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/>flag_value=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>expect_seg_fault=0)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(env_var_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/>flag_value=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>expect_seg_fault=1)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1abb611980cd810b5d79e39c5973858a49" kindref="member">testFlag</ref>(self):</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>using<sp/>the<sp/>--gtest_break_on_failure<sp/>flag.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(env_var_value=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>flag_value=</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/>expect_seg_fault=0)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(env_var_value=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>flag_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/>expect_seg_fault=1)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1ae6586983cbfbe7b25a5c406814148621" kindref="member">testFlagOverridesEnvVar</ref>(self):</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>that<sp/>the<sp/>flag<sp/>overrides<sp/>the<sp/>environment<sp/>variable.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(env_var_value=</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/>flag_value=</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/>expect_seg_fault=0)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(env_var_value=</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/>flag_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/>expect_seg_fault=1)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(env_var_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/>flag_value=</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/>expect_seg_fault=0)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(env_var_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/>flag_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/>expect_seg_fault=1)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a75a96ff28298ed6901203f52684331b8" kindref="member">testBreakOnFailureOverridesThrowOnFailure</ref>(self):</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>that<sp/>gtest_break_on_failure<sp/>overrides<sp/>gtest_throw_on_failure.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>SetEnvVar(THROW_ON_FAILURE_ENV_VAR,<sp/></highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(env_var_value=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>flag_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/>expect_seg_fault=1)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetEnvVar(THROW_ON_FAILURE_ENV_VAR,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>IS_WINDOWS:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1afe31b01f820ac3d69465db8c69490c2d" kindref="member">testCatchExceptionsDoesNotInterfere</ref>(self):</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>that<sp/>gtest_catch_exceptions<sp/>doesn&apos;t<sp/>interfere.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetEnvVar(CATCH_EXCEPTIONS_ENV_VAR,<sp/></highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgoogletest-break-on-failure-unittest_1_1GTestBreakOnFailureUnitTest_1a04676ed51e337fa6be3f99a73a87040d" kindref="member">RunAndVerify</ref>(env_var_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/>flag_value=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/>expect_seg_fault=1)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEnvVar(CATCH_EXCEPTIONS_ENV_VAR,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="namespacegtest__test__utils_1a5361b42d9c6843b5b117ead4d1c58cc5" kindref="member">gtest_test_utils.Main</ref>()</highlight></codeline>
    </programlisting>
    <location file="build/_deps/googletest-src/googletest/test/googletest-break-on-failure-unittest.py"/>
  </compounddef>
</doxygen>
