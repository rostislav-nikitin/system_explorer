<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtesting_1_1internal_1_1GoogleTestFailureReporter" kind="class" language="C++" prot="public">
    <compoundname>testing::internal::GoogleTestFailureReporter</compoundname>
    <basecompoundref refid="classtesting_1_1internal_1_1FailureReporterInterface" prot="public" virt="non-virtual">testing::internal::FailureReporterInterface</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1GoogleTestFailureReporter_1aff7bfa8521e770d718172c99c807ec39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void testing::internal::GoogleTestFailureReporter::ReportFailure</definition>
        <argsstring>(FailureType type, const char *file, int line, const std::string &amp;message) override</argsstring>
        <name>ReportFailure</name>
        <qualifiedname>testing::internal::GoogleTestFailureReporter::ReportFailure</qualifiedname>
        <reimplements refid="classtesting_1_1internal_1_1FailureReporterInterface_1a0c43ec1946cb4ab51279c96ce1ad941d">ReportFailure</reimplements>
        <param>
          <type>FailureType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googlemock/src/gmock-internal-utils.cc" line="103" column="8" bodyfile="build/_deps/googletest-src/googlemock/src/gmock-internal-utils.cc" bodystart="103" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>testing::internal::FailureReporterInterface</label>
        <link refid="classtesting_1_1internal_1_1FailureReporterInterface"/>
      </node>
      <node id="1">
        <label>testing::internal::GoogleTestFailureReporter</label>
        <link refid="classtesting_1_1internal_1_1GoogleTestFailureReporter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>testing::internal::FailureReporterInterface</label>
        <link refid="classtesting_1_1internal_1_1FailureReporterInterface"/>
      </node>
      <node id="1">
        <label>testing::internal::GoogleTestFailureReporter</label>
        <link refid="classtesting_1_1internal_1_1GoogleTestFailureReporter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="build/_deps/googletest-src/googlemock/src/gmock-internal-utils.cc" line="101" column="1" bodyfile="build/_deps/googletest-src/googlemock/src/gmock-internal-utils.cc" bodystart="101" bodyend="112"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1FailureReporterInterface_1aba34db997df0aefbfdc9d199d7d2ab5e" prot="public" virt="non-virtual"><scope>testing::internal::GoogleTestFailureReporter</scope><name>FailureType</name></member>
      <member refid="classtesting_1_1internal_1_1FailureReporterInterface_1aba34db997df0aefbfdc9d199d7d2ab5ea39560d6222d07508d8ef9f0ea6b030dd" prot="public" virt="non-virtual"><scope>testing::internal::GoogleTestFailureReporter</scope><name>kFatal</name></member>
      <member refid="classtesting_1_1internal_1_1FailureReporterInterface_1aba34db997df0aefbfdc9d199d7d2ab5ea3b78f131b8ed15245f44e48ba297838d" prot="public" virt="non-virtual"><scope>testing::internal::GoogleTestFailureReporter</scope><name>kNonfatal</name></member>
      <member refid="classtesting_1_1internal_1_1GoogleTestFailureReporter_1aff7bfa8521e770d718172c99c807ec39" prot="public" virt="virtual"><scope>testing::internal::GoogleTestFailureReporter</scope><name>ReportFailure</name></member>
      <member refid="classtesting_1_1internal_1_1FailureReporterInterface_1a26e5717671faa74dc4b4bd063acb5ca8" prot="public" virt="virtual"><scope>testing::internal::GoogleTestFailureReporter</scope><name>~FailureReporterInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
