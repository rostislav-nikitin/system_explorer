<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator" kind="class" language="C++" prot="private">
    <compoundname>testing::internal::ParamGeneratorConverter::Iterator</compoundname>
    <basecompoundref refid="classtesting_1_1internal_1_1ParamIteratorInterface" prot="public" virt="non-virtual">testing::internal::ParamIteratorInterface&lt; To &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a24360034a0e3a97ed82143ec263c9df5" prot="private" static="no" mutable="no">
        <type>const <ref refid="classtesting_1_1internal_1_1ParamGeneratorInterface" kindref="compound">ParamGeneratorInterface</ref>&lt; <ref refid="classtesting_1_1internal_1_1To" kindref="compound">To</ref> &gt; *const</type>
        <definition>const ParamGeneratorInterface&lt;To&gt;* const testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::base_</definition>
        <argsstring></argsstring>
        <name>base_</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::base_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="999" column="41" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="999" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a0e336fd7fe5640f5ad178441d34bb2af" prot="private" static="no" mutable="no">
        <type><ref refid="classtesting_1_1internal_1_1ParamIterator" kindref="compound">ParamIterator</ref>&lt; From &gt;</type>
        <definition>ParamIterator&lt;From&gt; testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::it_</definition>
        <argsstring></argsstring>
        <name>it_</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::it_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="1000" column="19" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="1000" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a0a48546157c83dfe952096a2adb43391" prot="private" static="no" mutable="no">
        <type><ref refid="classtesting_1_1internal_1_1ParamIterator" kindref="compound">ParamIterator</ref>&lt; From &gt;</type>
        <definition>ParamIterator&lt;From&gt; testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::end_</definition>
        <argsstring></argsstring>
        <name>end_</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::end_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="1001" column="19" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="1001" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a3d91ed98163624de4446e7bffd6642bb" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classtesting_1_1internal_1_1To" kindref="compound">To</ref> &gt;</type>
        <definition>std::shared_ptr&lt;To&gt; testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="1002" column="21" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="1002" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1afcfd73838045f7eaaaaa7102d25da74f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::Iterator</definition>
        <argsstring>(const ParamGeneratorInterface&lt; To &gt; *base, ParamIterator&lt; From &gt; it, ParamIterator&lt; From &gt; end)</argsstring>
        <name>Iterator</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::Iterator</qualifiedname>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1ParamGeneratorInterface" kindref="compound">ParamGeneratorInterface</ref>&lt; <ref refid="classtesting_1_1internal_1_1To" kindref="compound">To</ref> &gt; *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1ParamIterator" kindref="compound">ParamIterator</ref>&lt; From &gt;</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1ParamIterator" kindref="compound">ParamIterator</ref>&lt; From &gt;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="967" column="5" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="967" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a2d2582dfcc192926cfccb1ffd6468596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::~Iterator</definition>
        <argsstring>() override=default</argsstring>
        <name>~Iterator</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::~Iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="972" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a4c1a757b7ab06a3d3944448b71fb2312" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1internal_1_1ParamGeneratorInterface" kindref="compound">ParamGeneratorInterface</ref>&lt; <ref refid="classtesting_1_1internal_1_1To" kindref="compound">To</ref> &gt; *</type>
        <definition>const ParamGeneratorInterface&lt; To &gt; * testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::BaseGenerator</definition>
        <argsstring>() const override</argsstring>
        <name>BaseGenerator</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::BaseGenerator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="974" column="35" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="974" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a87a9d3c500d83f2191c91294ac929731" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::Advance</definition>
        <argsstring>() override</argsstring>
        <name>Advance</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::Advance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="977" column="10" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="977" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1aa10a33e02ba43a0d35c526e531700f39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1ParamIteratorInterface" kindref="compound">ParamIteratorInterface</ref>&lt; <ref refid="classtesting_1_1internal_1_1To" kindref="compound">To</ref> &gt; *</type>
        <definition>ParamIteratorInterface&lt; To &gt; * testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::Clone</definition>
        <argsstring>() const override</argsstring>
        <name>Clone</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::Clone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="981" column="28" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="981" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a412dd1a8cf4bd7519c0f31fe8ba75238" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1internal_1_1To" kindref="compound">To</ref> *</type>
        <definition>const To * testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::Current</definition>
        <argsstring>() const override</argsstring>
        <name>Current</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::Current</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="984" column="14" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="984" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a2b3e2f778e17339edd08aa12d4ab792e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::Equals</definition>
        <argsstring>(const ParamIteratorInterface&lt; To &gt; &amp;other) const override</argsstring>
        <name>Equals</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::Equals</qualifiedname>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1ParamIteratorInterface" kindref="compound">ParamIteratorInterface</ref>&lt; <ref refid="classtesting_1_1internal_1_1To" kindref="compound">To</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="985" column="10" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="985" bodyend="994"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a95b142c5c9112867b1ffae4d01ff6e0e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator::Iterator</definition>
        <argsstring>(const Iterator &amp;other)=default</argsstring>
        <name>Iterator</name>
        <qualifiedname>testing::internal::ParamGeneratorConverter::Iterator::Iterator</qualifiedname>
        <param>
          <type>const Iterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="997" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>testing::internal::ParamIteratorInterface&lt; To &gt;</label>
        <link refid="classtesting_1_1internal_1_1ParamIteratorInterface"/>
      </node>
      <node id="1">
        <label>testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>testing::internal::ParamIteratorInterface&lt; To &gt;</label>
        <link refid="classtesting_1_1internal_1_1ParamIteratorInterface"/>
      </node>
      <node id="1">
        <label>testing::internal::ParamGeneratorConverter&lt; From, To &gt;::Iterator</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" line="965" column="3" bodyfile="build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h" bodystart="965" bodyend="1003"/>
    <listofallmembers>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a87a9d3c500d83f2191c91294ac929731" prot="public" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>Advance</name></member>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a24360034a0e3a97ed82143ec263c9df5" prot="private" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>base_</name></member>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a4c1a757b7ab06a3d3944448b71fb2312" prot="public" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>BaseGenerator</name></member>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1aa10a33e02ba43a0d35c526e531700f39" prot="public" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>Clone</name></member>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a412dd1a8cf4bd7519c0f31fe8ba75238" prot="public" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>Current</name></member>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a0a48546157c83dfe952096a2adb43391" prot="private" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>end_</name></member>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a2b3e2f778e17339edd08aa12d4ab792e" prot="public" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>Equals</name></member>
      <member refid="classtesting_1_1internal_1_1ParamIteratorInterface_1a9d811697a752d46f7bd6a0082f9040a3" prot="public" virt="pure-virtual" ambiguityscope="ParamIteratorInterface&lt; To &gt;::"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>Equals</name></member>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a0e336fd7fe5640f5ad178441d34bb2af" prot="private" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>it_</name></member>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1afcfd73838045f7eaaaaa7102d25da74f" prot="public" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>Iterator</name></member>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a95b142c5c9112867b1ffae4d01ff6e0e" prot="private" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>Iterator</name></member>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a3d91ed98163624de4446e7bffd6642bb" prot="private" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>value_</name></member>
      <member refid="classtesting_1_1internal_1_1ParamGeneratorConverter_1_1Iterator_1a2d2582dfcc192926cfccb1ffd6468596" prot="public" virt="non-virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>~Iterator</name></member>
      <member refid="classtesting_1_1internal_1_1ParamIteratorInterface_1a98ef3f0e51b409e0f2e1aec237a7f5bf" prot="public" virt="virtual"><scope>testing::internal::ParamGeneratorConverter::Iterator</scope><name>~ParamIteratorInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
