<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="gmock-cardinalities__test_8cc" kind="file" language="C++">
    <compoundname>gmock-cardinalities_test.cc</compoundname>
    <includes local="no">ostream</includes>
    <includes refid="gmock_8h" local="yes">gmock/gmock.h</includes>
    <includes refid="gtest-spi_8h" local="yes">gtest/gtest-spi.h</includes>
    <includes refid="gtest_8h" local="yes">gtest/gtest.h</includes>
    <includedby refid="gmock__all__test_8cc" local="yes">build/_deps/googletest-src/googlemock/test/gmock_all_test.cc</includedby>
    <incdepgraph>
      <node id="4">
        <label>gmock/gmock-actions.h</label>
        <link refid="gmock-actions_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>gmock/gmock-cardinalities.h</label>
        <link refid="gmock-cardinalities_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>gmock/gmock-function-mocker.h</label>
        <link refid="gmock-function-mocker_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>gmock/gmock-matchers.h</label>
        <link refid="gmock-matchers_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>gmock/gmock-more-actions.h</label>
        <link refid="gmock-more-actions_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>gmock/gmock-more-matchers.h</label>
        <link refid="gmock-more-matchers_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>gmock/gmock-nice-strict.h</label>
        <link refid="gmock-nice-strict_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>gmock/gmock-spec-builders.h</label>
        <link refid="gmock-spec-builders_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gmock/gmock.h</label>
        <link refid="gmock_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>gmock/internal/custom/gmock-generated-actions.h</label>
        <link refid="gmock-generated-actions_8h_source"/>
      </node>
      <node id="75">
        <label>gmock/internal/custom/gmock-matchers.h</label>
        <link refid="internal_2custom_2gmock-matchers_8h_source"/>
      </node>
      <node id="21">
        <label>gmock/internal/custom/gmock-port.h</label>
        <link refid="custom_2gmock-port_8h_source"/>
      </node>
      <node id="13">
        <label>gmock/internal/gmock-internal-utils.h</label>
        <link refid="gmock-internal-utils_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>gmock/internal/gmock-port.h</label>
        <link refid="gmock-port_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>gmock/internal/gmock-pp.h</label>
        <link refid="gmock-pp_8h_source"/>
      </node>
      <node id="1">
        <label>build/_deps/googletest-src/googlemock/test/gmock-cardinalities_test.cc</label>
        <link refid="gmock-cardinalities__test_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>gtest/gtest-assertion-result.h</label>
        <link refid="gtest-assertion-result_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>gtest/gtest-matchers.h</label>
        <link refid="gtest-matchers_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>gtest/gtest-spi.h</label>
        <link refid="gtest-spi_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h_source"/>
      </node>
      <node id="31">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h_source"/>
      </node>
      <node id="55">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="45">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h_source"/>
      </node>
      <node id="22">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>algorithm</label>
      </node>
      <node id="17">
        <label>assert.h</label>
      </node>
      <node id="47">
        <label>atomic</label>
      </node>
      <node id="59">
        <label>cassert</label>
      </node>
      <node id="26">
        <label>cerrno</label>
      </node>
      <node id="71">
        <label>cmath</label>
      </node>
      <node id="38">
        <label>cstddef</label>
      </node>
      <node id="19">
        <label>cstdint</label>
      </node>
      <node id="23">
        <label>ctype.h</label>
      </node>
      <node id="5">
        <label>errno.h</label>
      </node>
      <node id="72">
        <label>exception</label>
      </node>
      <node id="50">
        <label>float.h</label>
      </node>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="73">
        <label>initializer_list</label>
      </node>
      <node id="39">
        <label>iomanip</label>
      </node>
      <node id="74">
        <label>ios</label>
      </node>
      <node id="61">
        <label>iosfwd</label>
      </node>
      <node id="20">
        <label>iostream</label>
      </node>
      <node id="57">
        <label>iterator</label>
      </node>
      <node id="27">
        <label>limits</label>
      </node>
      <node id="67">
        <label>limits.h</label>
      </node>
      <node id="28">
        <label>locale</label>
      </node>
      <node id="51">
        <label>map</label>
      </node>
      <node id="8">
        <label>memory</label>
      </node>
      <node id="2">
        <label>ostream</label>
      </node>
      <node id="35">
        <label>regex.h</label>
      </node>
      <node id="40">
        <label>set</label>
      </node>
      <node id="41">
        <label>sstream</label>
      </node>
      <node id="24">
        <label>stddef.h</label>
      </node>
      <node id="14">
        <label>stdio.h</label>
      </node>
      <node id="18">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="25">
        <label>string.h</label>
      </node>
      <node id="33">
        <label>strings.h</label>
      </node>
      <node id="29">
        <label>sys/stat.h</label>
      </node>
      <node id="30">
        <label>sys/types.h</label>
      </node>
      <node id="10">
        <label>tuple</label>
      </node>
      <node id="11">
        <label>type_traits</label>
      </node>
      <node id="36">
        <label>typeinfo</label>
      </node>
      <node id="34">
        <label>unistd.h</label>
      </node>
      <node id="12">
        <label>utility</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2007,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Mock<sp/>-<sp/>a<sp/>framework<sp/>for<sp/>writing<sp/>C++<sp/>mock<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>tests<sp/>the<sp/>built-in<sp/>cardinalities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmock/gmock.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gtest/gtest-spi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gtest/gtest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::stringstream;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">testing::AnyNumber;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">testing::AtLeast;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">testing::AtMost;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">testing::Between;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">testing::Cardinality;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">testing::CardinalityInterface;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">testing::Exactly;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">testing::IsSubstring;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">testing::MakeCardinality;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MockFoo<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>MockFoo()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>MOCK_METHOD0(Bar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">());<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>MockFoo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MockFoo&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>MockFoo&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MockFoo&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>that<sp/>Cardinality<sp/>objects<sp/>can<sp/>be<sp/>default<sp/>constructed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">TEST(CardinalityTest,<sp/>IsDefaultConstructable)<sp/>{<sp/>Cardinality<sp/>c;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>that<sp/>Cardinality<sp/>objects<sp/>are<sp/>copyable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">TEST(CardinalityTest,<sp/>IsCopyable)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>copy<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>Cardinality<sp/>c<sp/>=<sp/>Exactly(1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(0));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(1));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(1));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>assignment<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>Exactly(2);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(1));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(2));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(2));</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">TEST(CardinalityTest,<sp/>IsOverSaturatedByCallCountWorks)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>AtMost(5);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsOverSaturatedByCallCount(4));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsOverSaturatedByCallCount(5));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsOverSaturatedByCallCount(6));</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>that<sp/>Cardinality::DescribeActualCallCountTo()<sp/>creates<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>correct<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">TEST(CardinalityTest,<sp/>CanDescribeActualCallCount)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>Cardinality::DescribeActualCallCountTo(0,<sp/>&amp;ss0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;never<sp/>called&quot;</highlight><highlight class="normal">,<sp/>ss0.str());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>Cardinality::DescribeActualCallCountTo(1,<sp/>&amp;ss1);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;called<sp/>once&quot;</highlight><highlight class="normal">,<sp/>ss1.str());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss2;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>Cardinality::DescribeActualCallCountTo(2,<sp/>&amp;ss2);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;called<sp/>twice&quot;</highlight><highlight class="normal">,<sp/>ss2.str());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss3;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>Cardinality::DescribeActualCallCountTo(3,<sp/>&amp;ss3);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;called<sp/>3<sp/>times&quot;</highlight><highlight class="normal">,<sp/>ss3.str());</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>AnyNumber()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">TEST(AnyNumber,<sp/>Works)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>AnyNumber();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(0));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(0));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(1));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(1));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(9));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(9));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>any<sp/>number<sp/>of<sp/>times&quot;</highlight><highlight class="normal">,<sp/>ss.str());</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">TEST(AnyNumberTest,<sp/>HasCorrectBounds)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>AnyNumber();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>EXPECT_EQ(0,<sp/>c.ConservativeLowerBound());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>EXPECT_EQ(INT_MAX,<sp/>c.ConservativeUpperBound());</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>AtLeast(n).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">TEST(AtLeastTest,<sp/>OnNegativeNumber)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>EXPECT_NONFATAL_FAILURE(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AtLeast(-1);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>invocation<sp/>lower<sp/>bound<sp/>must<sp/>be<sp/>&gt;=<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">TEST(AtLeastTest,<sp/>OnZero)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>AtLeast(0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(0));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(0));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(1));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(1));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;any<sp/>number<sp/>of<sp/>times&quot;</highlight><highlight class="normal">,<sp/>ss.str());</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">TEST(AtLeastTest,<sp/>OnPositiveNumber)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>AtLeast(2);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(0));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(0));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(1));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(1));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(2));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(2));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss1;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>AtLeast(1).DescribeTo(&amp;ss1);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;at<sp/>least<sp/>once&quot;</highlight><highlight class="normal">,<sp/>ss1.str());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss2;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss2);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;at<sp/>least<sp/>twice&quot;</highlight><highlight class="normal">,<sp/>ss2.str());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss3;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>AtLeast(3).DescribeTo(&amp;ss3);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;at<sp/>least<sp/>3<sp/>times&quot;</highlight><highlight class="normal">,<sp/>ss3.str());</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">TEST(AtLeastTest,<sp/>HasCorrectBounds)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>AtLeast(2);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>EXPECT_EQ(2,<sp/>c.ConservativeLowerBound());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>EXPECT_EQ(INT_MAX,<sp/>c.ConservativeUpperBound());</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>AtMost(n).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">TEST(AtMostTest,<sp/>OnNegativeNumber)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>EXPECT_NONFATAL_FAILURE(</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AtMost(-1);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>invocation<sp/>upper<sp/>bound<sp/>must<sp/>be<sp/>&gt;=<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">TEST(AtMostTest,<sp/>OnZero)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>AtMost(0);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(0));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(0));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(1));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(1));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;never<sp/>called&quot;</highlight><highlight class="normal">,<sp/>ss.str());</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">TEST(AtMostTest,<sp/>OnPositiveNumber)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>AtMost(2);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(0));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(0));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(1));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(1));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(2));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(2));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss1;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>AtMost(1).DescribeTo(&amp;ss1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>at<sp/>most<sp/>once&quot;</highlight><highlight class="normal">,<sp/>ss1.str());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss2;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss2);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>at<sp/>most<sp/>twice&quot;</highlight><highlight class="normal">,<sp/>ss2.str());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss3;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>AtMost(3).DescribeTo(&amp;ss3);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>at<sp/>most<sp/>3<sp/>times&quot;</highlight><highlight class="normal">,<sp/>ss3.str());</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">TEST(AtMostTest,<sp/>HasCorrectBounds)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>AtMost(2);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>EXPECT_EQ(0,<sp/>c.ConservativeLowerBound());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>EXPECT_EQ(2,<sp/>c.ConservativeUpperBound());</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>Between(m,<sp/>n).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">TEST(BetweenTest,<sp/>OnNegativeStart)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>EXPECT_NONFATAL_FAILURE(</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Between(-1,<sp/>2);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>invocation<sp/>lower<sp/>bound<sp/>must<sp/>be<sp/>&gt;=<sp/>0,<sp/>but<sp/>is<sp/>actually<sp/>-1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">TEST(BetweenTest,<sp/>OnNegativeEnd)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>EXPECT_NONFATAL_FAILURE(</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Between(1,<sp/>-2);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>invocation<sp/>upper<sp/>bound<sp/>must<sp/>be<sp/>&gt;=<sp/>0,<sp/>but<sp/>is<sp/>actually<sp/>-2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">TEST(BetweenTest,<sp/>OnStartBiggerThanEnd)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>EXPECT_NONFATAL_FAILURE(</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Between(2,<sp/>1);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>invocation<sp/>upper<sp/>bound<sp/>(1)<sp/>must<sp/>be<sp/>&gt;=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>invocation<sp/>lower<sp/>bound<sp/>(2)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">TEST(BetweenTest,<sp/>OnZeroStartAndZeroEnd)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>Between(0,<sp/>0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(0));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(0));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(1));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(1));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;never<sp/>called&quot;</highlight><highlight class="normal">,<sp/>ss.str());</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">TEST(BetweenTest,<sp/>OnZeroStartAndNonZeroEnd)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>Between(0,<sp/>2);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(0));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(0));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(2));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(2));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(4));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(4));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>at<sp/>most<sp/>twice&quot;</highlight><highlight class="normal">,<sp/>ss.str());</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">TEST(BetweenTest,<sp/>OnSameStartAndEnd)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>Between(3,<sp/>3);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(2));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(2));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(3));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(3));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(4));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(4));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>3<sp/>times&quot;</highlight><highlight class="normal">,<sp/>ss.str());</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">TEST(BetweenTest,<sp/>OnDifferentStartAndEnd)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>Between(3,<sp/>5);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(2));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(2));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(3));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(3));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(5));</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(5));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(6));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(6));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>between<sp/>3<sp/>and<sp/>5<sp/>times&quot;</highlight><highlight class="normal">,<sp/>ss.str());</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">TEST(BetweenTest,<sp/>HasCorrectBounds)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>Between(3,<sp/>5);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>EXPECT_EQ(3,<sp/>c.ConservativeLowerBound());</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>EXPECT_EQ(5,<sp/>c.ConservativeUpperBound());</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>Exactly(n).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal">TEST(ExactlyTest,<sp/>OnNegativeNumber)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>EXPECT_NONFATAL_FAILURE(</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exactly(-1);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>invocation<sp/>lower<sp/>bound<sp/>must<sp/>be<sp/>&gt;=<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">TEST(ExactlyTest,<sp/>OnZero)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>Exactly(0);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(0));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(0));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(1));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(1));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;never<sp/>called&quot;</highlight><highlight class="normal">,<sp/>ss.str());</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">TEST(ExactlyTest,<sp/>OnPositiveNumber)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>Exactly(2);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(0));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(0));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(2));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSaturatedByCallCount(2));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss1;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>Exactly(1).DescribeTo(&amp;ss1);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>once&quot;</highlight><highlight class="normal">,<sp/>ss1.str());</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss2;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss2);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>twice&quot;</highlight><highlight class="normal">,<sp/>ss2.str());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss3;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>Exactly(3).DescribeTo(&amp;ss3);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>EXPECT_PRED_FORMAT2(IsSubstring,<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>3<sp/>times&quot;</highlight><highlight class="normal">,<sp/>ss3.str());</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">TEST(ExactlyTest,<sp/>HasCorrectBounds)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>Exactly(3);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>EXPECT_EQ(3,<sp/>c.ConservativeLowerBound());</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>EXPECT_EQ(3,<sp/>c.ConservativeUpperBound());</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>that<sp/>a<sp/>user<sp/>can<sp/>make<sp/>their<sp/>own<sp/>cardinality<sp/>by<sp/>implementing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CardinalityInterface<sp/>and<sp/>calling<sp/>MakeCardinality().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">EvenCardinality<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>CardinalityInterface<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>and<sp/>only<sp/>if<sp/>call_count<sp/>calls<sp/>will<sp/>satisfy<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cardinality.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsSatisfiedByCallCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>call_count)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(call_count<sp/>%<sp/>2<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>and<sp/>only<sp/>if<sp/>call_count<sp/>calls<sp/>will<sp/>saturate<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cardinality.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsSaturatedByCallCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>call_count<sp/>*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Describes<sp/>self<sp/>to<sp/>an<sp/>ostream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DescribeTo(::std::ostream*<sp/>ss)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>*ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>even<sp/>number<sp/>of<sp/>times&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal">};</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal">TEST(MakeCardinalityTest,<sp/>ConstructsCardinalityFromInterface)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cardinality<sp/>c<sp/>=<sp/>MakeCardinality(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>EvenCardinality);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(c.IsSatisfiedByCallCount(2));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSatisfiedByCallCount(3));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(c.IsSaturatedByCallCount(10000));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>c.DescribeTo(&amp;ss);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;called<sp/>even<sp/>number<sp/>of<sp/>times&quot;</highlight><highlight class="normal">,<sp/>ss.str());</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>Unnamed<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="build/_deps/googletest-src/googlemock/test/gmock-cardinalities_test.cc"/>
  </compounddef>
</doxygen>
